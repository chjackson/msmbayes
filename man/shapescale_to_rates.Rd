% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/phaseapprox.R
\name{shapescale_to_rates}
\alias{shapescale_to_rates}
\title{Determine parameters of a phase-type model that approximate a parametric shape-scale distribution}
\usage{
shapescale_to_rates(
  shape,
  scale = 1,
  family = "weibull",
  canonical = FALSE,
  method = "kl_hermite",
  nphase = 5,
  list = FALSE,
  drop = TRUE
)
}
\arguments{
\item{shape}{shape parameter.  This can be vectorised.}

\item{scale}{scale parameter.  This can be vectorised.}

\item{family}{parametric family approximated by the phase-type distribution: \code{"weibull"} or \code{"gamma"}}

\item{canonical}{Return the phase-type parameters in canonical form (phase 1 sojourn rate, sojourn rate increments in subsequent states, absorption probabilities).  If \code{FALSE} then phase transition rates are returned.}

\item{method}{Type of spline used to interpolate between the training points (pointwise optima) when deriving the function that best maps the shape to each phase-type parameter}

\item{list}{If \code{TRUE} then separate components are returned for progression and absorption rates.
Otherwise, and by default, a vector (or matrix) is returned combining all rates.
If a vector is supplied for shape or scale, the returned object (or the list components) is a matrix.}

\item{drop}{If shape or scale have both have one element, and \code{drop=FALSE}, a matrix with one row is returned.}
}
\description{
Determine parameters of a phase-type model that approximate a parametric shape-scale distribution
}
\details{
The approximation is determined by finding the best-approximating phase transition rates
for a given shape parameter, repeating for a grid of shape parameters, then interpolating the results
with a cubic spline.  Full code is in \code{data-raw/kl_pointwise.R} in the source package.
See \code{\link{phase5approx}} for the pointwise optimal parameters.  The approximation is done
for a scale parameter of 1, and generalised to other scales via the accelerated failure time
property.

This function is not currently as efficient as it could be, since the spline interpolation is not
vectorised.
}
