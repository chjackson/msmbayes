[{"path":"https://chjackson.github.io/msmbayes/articles/advanced.html","id":"phase-type-semi-markov-models","dir":"Articles","previous_headings":"","what":"Phase-type semi-Markov models","title":"Advanced multi-state models in msmbayes","text":"multi-state model, suppose believe sojourn time particular state follows exponential distribution. example, infection model, suppose believe time spent “test positive” state exponential.  can relax assumption building “semi-Markov” model, sojourn time state follows complex distribution. One way replace state series two () latent hidden states, known “phases”. example, two phases:  phase-type model, allow progression one phase next, transitions later earlier phases (jumps non-adjacent phases, 3 phases ). Otherwise, allow transitions phase allowed original model (state 1, example) assume transitions phases follow exponential distributions. , assume Markov model latent state space. test-positive state sojourn distribution known “Coxian” phase-type distribution, instead exponential. Note: example hidden Markov model, though one specific form states observed correctly, states latent. Phase-type models convenient way build semi-Markov models intermittently-observed data, standard algorithms computing likelihood hidden Markov model.","code":""},{"path":"https://chjackson.github.io/msmbayes/articles/advanced.html","id":"fitting-phase-type-models-in-msmbayes","dir":"Articles","previous_headings":"","what":"Fitting phase-type models in msmbayes","title":"Advanced multi-state models in msmbayes","text":"assume phase-type sojourn distribution one states msmbayes model, set nphase argument. vector length equal number states, giving number phases per state. elements nphase 1 correspond states usual exponential sojourn distribution.","code":""},{"path":"https://chjackson.github.io/msmbayes/articles/advanced.html","id":"example-data-simulated-from-a-standard-markov-model","dir":"Articles","previous_headings":"Fitting phase-type models in msmbayes","what":"Example: data simulated from a standard Markov model","title":"Advanced multi-state models in msmbayes","text":"extend 2-state model simulated infection data give state 2 (infection) two-phase sojourn distribution. data originally simulated assuming exponential sojourn distribution state 2 (rate 3). situation, expect estimated rates transition phase identical. phased states labelled specially , e.g. first phase state 2 labelled \"2p1\". estimated transition rates two phases state 2 state 1 significantly different 2 - large uncertainty around estimated rates, since model -fitted data. Implementing model msm give extremely large confidence intervals around estimated rates.","code":"library(msmbayes) Q <- rbind(c(0, 1),             c(1, 0)) draws <- msmbayes(infsim2, state=\"state\", time=\"months\", subject=\"subject\",                   Q=Q, nphase=c(1,2)) summary(draws) ## # A tibble: 7 × 6 ##   name  from  to             value prior               rhat ##   <chr> <chr> <chr>     <rvar[1d]> <chr>              <dbl> ## 1 q     1     2p1     0.99 ± 0.94  0.14 (0.0027, 6.7)  1.00 ## 2 q     2p1   1       5.28 ± 6.17  0.14 (0.0027, 6.7)  1.00 ## 3 q     2p1   2p2     2.67 ± 27.31 0.14 (0.0027, 6.7)  1.00 ## 4 q     2p2   1       4.56 ± 15.89 0.14 (0.0027, 6.7)  1.00 ## 5 mst   1     NA      1.45 ± 0.71  7.4 (0.148, 369)    1.00 ## 6 mst   2p1   NA      0.21 ± 0.11  3.7 (0.074, 184)    1.00 ## 7 mst   2p2   NA     17.63 ± 95.37 7.4 (0.148, 369)    1.00"},{"path":"https://chjackson.github.io/msmbayes/articles/advanced.html","id":"example-data-simulated-from-a-phase-type-model","dir":"Articles","previous_headings":"Fitting phase-type models in msmbayes","what":"Example: data simulated from a phase-type model","title":"Advanced multi-state models in msmbayes","text":"following code simulates dataset following phase-type model structure  transition intensity matrix (latent state space) given R object Qg. code uses ability function simmulti.msm() msm package simulate hidden Markov models. fit phase-type model simulated data using msmbayes msm. \"pathfinder\" variational inference algorithm used approximate Bayesian posterior. warning messages using algorithm example, practice might wanted cross-check results MCMC.  posterior distribution appears awkwardly shaped, evidence several local maxima “saddle points”. msm needs tuning converge, particular use fnscale explicit initial values transition rate. practice, sensitivity analysis initial values needed confirm reported estimates global maximum likelihood estimates, rather one local maxima saddle points. Reassuringly, Bayesian frequentist methods give similar estimates transition intensities, agree (within estimation error) values used simulation. mean sojourn times states phase-type model can either calculated latent state space (by_phase=TRUE, default), observable state space (by_phase=FALSE). practical experience using phase-type models needed. particular: specify substantive prior information. examples , default log-normal(-2,2) priors used transition intensities. need better way choose based judgements interpretable quantities, e.g. mean sojourn time phased state. Limited experience suggests Bayesian method likely msm produce plausible result without need tuning. However, can sampling algorithms always relied upon? build interpret models covariates intensities. Covariates can placed intensities transitions phased state-space, tested practice. risk -fitting, strong constraints covariate effects expected necessary.","code":"Qg <- rbind(c(0, 0.18, 0.008, 0.012),             c(0, 0,    0.016, 0.024),             c(0, 0,    0,     0.2),             c(0, 0,    0,     0)) E <- rbind(c(1,0,0,0), # hidden Markov model misclassification matrix            c(1,0,0,0),            c(0,1,0,0),            c(0,0,1,0)) nsubj <- 10000; nobspt <- 10 set.seed(1) sim.df <- data.frame(subject = rep(1:nsubj, each=nobspt),                      time = seq(0, 100, length=nobspt)) library(msm) sim.df <- simmulti.msm(sim.df[,1:2], qmatrix=Qg, ematrix=E) Q3 <- rbind(c(0,1,1),c(0,0,1),c(0,0,0)) draws <- msmbayes(data=sim.df, state=\"obs\", time=\"time\", subject=\"subject\",                   Q=Q3, nphase=c(2,1,1), fit_method=\"pathfinder\") bayesplot::mcmc_dens(draws, pars=sprintf(\"logq[%s]\",1:6)) Q3 <- rbind(c(0,0.5,0.5),c(0,0,0.5),c(0,0,0)) s.msm <- msm(obs ~ time, subject=subject, data=sim.df, phase.states=1, qmatrix=Q3,              phase.inits=list(list(trans=0.05,  # seems to need these                                    exit=matrix(rep(0.05,4),nrow=2,byrow=TRUE))),              control = list(trace=1,REPORT=1,fnscale=50000,maxit=10000)) qmatrix(draws) ## rvar<1000>[4,4] mean ± sd: ##      [,1]               [,2]               [,3]               ## [1,] -0.1800 ± 0.02771   0.1721 ± 0.02971   0.0048 ± 0.00261  ## [2,]  0.0000 ± 0.00000  -0.0393 ± 0.00061   0.0160 ± 0.00057  ## [3,]  0.0000 ± 0.00000   0.0000 ± 0.00000  -0.2006 ± 0.00578  ## [4,]  0.0000 ± 0.00000   0.0000 ± 0.00000   0.0000 ± 0.00000  ##      [,4]               ## [1,]  0.0030 ± 0.00197  ## [2,]  0.0233 ± 0.00058  ## [3,]  0.2006 ± 0.00578  ## [4,]  0.0000 ± 0.00000 qmatrix.msm(s.msm,ci=\"none\") ##              State 1 [P1] State 1 [P2]     State 2    State 3 ## State 1 [P1]   -0.1986608   0.17706760  0.01059025 0.01100295 ## State 1 [P2]    0.0000000  -0.03930873  0.01593401 0.02337472 ## State 2         0.0000000   0.00000000 -0.20150880 0.20150880 ## State 3         0.0000000   0.00000000  0.00000000 0.00000000 Qg ##      [,1] [,2]  [,3]  [,4] ## [1,]    0 0.18 0.008 0.012 ## [2,]    0 0.00 0.016 0.024 ## [3,]    0 0.00 0.000 0.200 ## [4,]    0 0.00 0.000 0.000 mean_sojourn(draws) ## # A tibble: 3 × 2 ##   state        value ##   <chr>   <rvar[1d]> ## 1 1p1     5.7 ± 0.89 ## 2 1p2    25.4 ± 0.39 ## 3 2       5.0 ± 0.14 mean_sojourn(draws, by_phase=FALSE) ## # A tibble: 3 × 2 ##   state       value ##   <int>  <rvar[1d]> ## 1     1   30 ± 0.38 ## 2     2    5 ± 0.14 ## 3     3  Inf ± NaN"},{"path":"https://chjackson.github.io/msmbayes/articles/advanced.html","id":"multi-state-models-with-misclassification","dir":"Articles","previous_headings":"","what":"Multi-state models with misclassification","title":"Advanced multi-state models in msmbayes","text":"Another application hidden Markov models account misclassification states multi-state model. fit misclassification multi-state models msmbayes, structure allowed misclassifications supplied E argument (“e” stands “emission”). matrix -diagonal entries: 1 true state [row number] can misclassified [column number] 0 true state [row number] misclassified [column number] diagonal entries E ignored (Q argument). following example discussed msm user guide (Section 2.14). model progression three states CAV (disease experienced heart transplant recipients), allow death states. True state 1 can misclassified 2, true state 2 can misclassified 1 3, true state 3 can misclassified 2. speed demo, use Stan’s \"optimize\" method, simply determines posterior mode, posterior summaries. function edf extracts misclassification (“emission”) probabilities tidy data frame form. identical non-Bayesian model fitted using msm(). Note: different model fitted msm manual, since “exact death times” supported msmbayes. Also note msm requires informative initial values non-zero intensities misclassification probabilities . hidden Markov models, msm smart enough determine good initial values automatically given transition structure. parameter estimates msm close msmbayes, differences explainable influence weak prior.","code":"Qcav <- rbind(c(0, 1, 0, 1),               c(0, 0, 1, 1),                c(0, 0, 0, 1),               c(0, 0, 0, 0)) Ecav <- rbind(c(0, 1, 0, 0),               c(1, 0, 1, 0),               c(0, 1, 0, 0),               c(0, 0, 0, 0)) draws <- msmbayes(data=cav, state=\"state\", time=\"years\", subject=\"PTNUM\",                    Q=Qcav, E=Ecav, fit_method=\"optimize\") qmatrix(draws) ## rvar<1>[4,4] mean ± sd: ##      [,1]         [,2]         [,3]         [,4]         ## [1,] -0.145 ± NA   0.099 ± NA   0.000 ± NA   0.047 ± NA  ## [2,]  0.000 ± NA  -0.263 ± NA   0.200 ± NA   0.064 ± NA  ## [3,]  0.000 ± NA   0.000 ± NA  -0.364 ± NA   0.364 ± NA  ## [4,]  0.000 ± NA   0.000 ± NA   0.000 ± NA   0.000 ± NA edf(draws) ## # A tibble: 4 × 3 ##    from    to        value ##   <int> <int>   <rvar[1d]> ## 1     1     2  0.0081 ± NA ## 2     2     1  0.2380 ± NA ## 3     2     3  0.0513 ± NA ## 4     3     2  0.1120 ± NA Qcav <- rbind(c(0, 0.148, 0, 0.0171), c(0, 0, 0.202, 0.081),                c(0, 0, 0, 0.126), c(0, 0, 0, 0)) Ecav <- rbind(c(0, 0.1, 0, 0),c(0.1, 0, 0.1, 0),               c(0, 0.1, 0, 0),c(0, 0, 0, 0)) cav.msm <- msm(state ~ years, subject=PTNUM, data=cav, qmatrix=Qcav, ematrix=Ecav) qmatrix.msm(cav.msm, ci=\"none\") ##            State 1     State 2    State 3    State 4 ## State 1 -0.1452746  0.09855669  0.0000000 0.04671790 ## State 2  0.0000000 -0.26352026  0.2013230 0.06219724 ## State 3  0.0000000  0.00000000 -0.3671024 0.36710242 ## State 4  0.0000000  0.00000000  0.0000000 0.00000000 ematrix.msm(cav.msm, ci=\"none\") ##           State 1     State 2    State 3 State 4 ## State 1 0.9919222 0.008077811 0.00000000       0 ## State 2 0.2379674 0.710858571 0.05117404       0 ## State 3 0.0000000 0.112813389 0.88718661       0 ## State 4 0.0000000 0.000000000 0.00000000       1"},{"path":"https://chjackson.github.io/msmbayes/articles/examples.html","id":"sec-simdata","dir":"Articles","previous_headings":"","what":"Simulated infection testing data","title":"Examples of using msmbayes","text":"examples use simulated dataset designed mimic longitudinal study people repeatedly tested infection. assume two-state multi-state model, states “test positive” “test negative”.  data simulated continuous-time Markov model following transition intensity matrix. Expressed days months, respectively, , everyone starts infection, , mean time next infection 180 days (6 months) (mean sojourn time state 1) mean time infection 10 days (0.33 months) (mean sojourn time state 2) suppose 100 people tested every 28 days, assume test perfect indicator infection. final dataset stores state test time variable state. also simulate covariates, including sex age, state outcome statec depends covariates (see ). Note: age expressed units (years - 50)/10. Centering around typical value (50 years), scaling unit interest (10 years) help MCMC computation interpretation parameters. analyse dataset continuous-time multistate models, assume transitions states can happen time, just observation times. demonstration, fit models, pretend know state time test, don’t know true times infection recovery. typical style data msm package used — state known series arbitrary times. Note: msm msmbayes allow number states structure allowed transitions. includes models without “absorbing” states, death. However, msmbayes limitations, listed front page. example, “exact death times” observation scheme (suppose time death known, state immediately death unknown) supported.","code":"library(msmbayes) Qtrue   <- rbind(c(-1/180, 1/180),                  c( 1/10, -1/10)) Qtruemo <- Qtrue*365/12 head(infsim) ##   subject days months state  sex       age10 statec statep statepc ## 1       1    0   0.00     1 male -0.31322691      1      1       1 ## 2       1   28   0.92     1 male  0.09182166      2      1       1 ## 3       1   56   1.84     1 male -0.41781431      1      1       1 ## 4       1   84   2.76     1 male  0.79764040      1      1       1 ## 5       1  112   3.68     1 male  0.16475389      2      1       1 ## 6       1  140   4.60     1 male -0.41023419      2      1       2"},{"path":"https://chjackson.github.io/msmbayes/articles/examples.html","id":"fitting-a-basic-markov-model-with-msmbayes","dir":"Articles","previous_headings":"","what":"Fitting a basic Markov model with msmbayes","title":"Examples of using msmbayes","text":"First demonstrate fitting basic two-state Markov multi-state model covariates. two unknown parameters: transition intensities 1-2 2-1. first argument msmbayes dataset, additional named arguments indicate names columns data contain state, time observation subject (individual) identifier. Note: unlike msm(), names variables data must quoted strings, “bare” variable names.","code":"Q <- rbind(c(0, 1),             c(1, 0)) draws <- msmbayes(data=infsim, state=\"state\", time=\"months\", subject=\"subject\",                   Q=Q)"},{"path":"https://chjackson.github.io/msmbayes/articles/examples.html","id":"transition-structure","dir":"Articles","previous_headings":"Fitting a basic Markov model with msmbayes","what":"Transition structure","title":"Examples of using msmbayes","text":"argument Q msmbayes() square matrix indicates transition structure. format msm(): number rows (columns) indicates number states, 2. diagonal matrix ignored - specify diagonal doesn’t matter. -diagonal entries Q 1 indicate transitions allowed continuous time (, state 1 state 2, 2 1). -diagonal entries Q 0 indicate transitions allowed continuous time.","code":""},{"path":"https://chjackson.github.io/msmbayes/articles/examples.html","id":"sec-priors","dir":"Articles","previous_headings":"Fitting a basic Markov model with msmbayes","what":"Prior distributions for transition intensities","title":"Examples of using msmbayes","text":"parameters model, \\(q_{rs}\\), transition intensities continuous time. probabilities, rates. particular, probabilities transition interval time, discrete-time Markov model. See, e.g. msm course notes discussion distinction. interpret values, note \\(q_{rs}\\) rate transitions \\(s\\) observed population state \\(r\\). \\(1/q_{rs}\\) mean time next transition \\(s\\) observed population state \\(r\\), observe one person time (switching observing different person “competing event”, .e. transition state \\(s\\), happens). put simply perhaps, mean time state \\(r\\) \\(s\\) competing events. Bayesian model, prior distributions must defined parameters. msmbayes, normal priors used log transition intensities. mean standard deviation priors can set priors argument msmbayes function. list objects created function msmprior. objects can specified various alternative ways: Directly specifying mean standard deviation \\(\\log(q_{rs})\\), e.g.: Specifying prior quantiles \\(\\log(q_{rs})\\), \\(q_{rs}\\) \\(1/q_{rs}\\): can specify two median (.e. 50% quantile), lower 95% quantile upper 95% quantile quantities. Perhaps easiest interpret \\(1/q_{rs}\\), mean time event \\(s\\) people \\(r\\), supplied time(r,s). two quantiles provided parameter, allows unique normal distribution \\(\\log(q_{rs})\\) deduced. Different specifications can mixed different parameters, e.g.  Note: prior represents belief average population - distribution individual outcomes. , means expect average time state 1 state 2 (population) 10 months, average high 30. saying expect see individual times events 30. Accept defaults. parameters supplied priors argument, normal distribution mean -2 standard deviation 2 used \\(\\log(q_{rs})\\). implies 95% credible interval \\(\\exp(-6)=0.002\\) \\(\\exp(2)=7\\) event rate, equivalent mean time event 0.1 400. appropriately vague many applications, thoughtful choice recommended practice. Note prior depends time unit (e.g. days months). object priors supplied priors argument msmbayes, e.g. ","code":"priors <- list(   msmprior(\"logq(1,2)\", mean=-1, sd=5),   msmprior(\"logq(2,1)\", mean=-1, sd=5) ) priors <- list(   msmprior(\"q(2,1)\",    lower=0.001, upper=5),   msmprior(\"time(1,2)\", median=10, upper=30) ) msmbayes(..., priors=priors,...)"},{"path":"https://chjackson.github.io/msmbayes/articles/examples.html","id":"outputs-from-msmbayes","dir":"Articles","previous_headings":"Fitting a basic Markov model with msmbayes","what":"Outputs from msmbayes","title":"Examples of using msmbayes","text":"msmbayes() function uses Stan draw sample joint posterior distribution model parameters. default, MCMC used, faster approximations available (see ). msmbayes() returns object draws format defined posterior R package. format understood various Bayesian R packages. example, can use bayesplot package check MCMC chains converged, using trace-plots main parameters (log transition intensities, labelled logq), examine posterior distributions. Trace plots look horizontal fuzzy, like sequence independent draws distribution, chains converged ().   summarise basic parameter estimates (transition intensities ) use summary() function. gives summary posterior parameter (variable value), alongside summary prior parameter. Since transition intensities hard interpret isolation, mean sojourn times state included alongside, labelled mst. mean sojourn times estimated (within estimation error) close true values 6 0.33 months, expected. Set time=TRUE summarise \\(1/q_{rs}\\) (mean times event, ignoring competing events, described ) priors. competing risks, , equal mean sojourn times. set log=TRUE summarise \\(\\log(q_{rs})\\). summary output also gives “Rhat” convergence diagnostic, close 1.0 MCMC estimation converged (see explanation.) See also qdf() get just intensities, qmatrix() quantities matrix rather data frame format, mean_sojourn() get just mean sojourn times. value column data frames returned functions type rvar. data type posterior package. designed contain random variables, uncertain quantities Bayesian models. Instead single value, stores sample quantity’s distribution. posterior distribution. printed posterior mean \\(\\pm\\) one standard deviation. extract specific posterior summary statistics, summary function can used data frames. arguments, default summary statistics posterior package used. user can specify functions, following call. See posterior package documentation examples.","code":"library(bayesplot) mcmc_trace(draws, pars=c(\"logq[1]\",\"logq[2]\")) mcmc_dens(draws, pars=c(\"logq[1]\",\"logq[2]\")) summary(draws) ## # A tibble: 4 × 6 ##   name   from    to         value prior               rhat ##   <chr> <int> <int>    <rvar[1d]> <chr>              <dbl> ## 1 q         1     2  0.16 ± 0.068 0.14 (0.0027, 6.7)  1.00 ## 2 q         2     1  3.57 ± 1.509 0.14 (0.0027, 6.7)  1.00 ## 3 mst       1    NA  6.66 ± 1.487 7.4 (0.15, 369)     1.00 ## 4 mst       2    NA  0.30 ± 0.066 7.4 (0.15, 369)     1.00 summary(draws, time=TRUE) ## # A tibble: 4 × 6 ##   name   from    to        value prior            rhat ##   <chr> <int> <int>   <rvar[1d]> <chr>           <dbl> ## 1 time      1     2  6.7 ± 1.487 7.4 (0.15, 369)  1.00 ## 2 time      2     1  0.3 ± 0.066 7.4 (0.15, 369)  1.00 ## 3 mst       1    NA  6.7 ± 1.487 7.4 (0.15, 369)  1.00 ## 4 mst       2    NA  0.3 ± 0.066 7.4 (0.15, 369)  1.00 summary(mean_sojourn(draws), mean, median, ~quantile(.x, c(0.025, 0.975))) ##   state      mean    median      2.5%    97.5% ## 1     1 6.6641924 6.7440457 3.1701179 9.312367 ## 2     2 0.3030738 0.3081527 0.1439558 0.419012"},{"path":"https://chjackson.github.io/msmbayes/articles/examples.html","id":"sec-covs","dir":"Articles","previous_headings":"","what":"Fitting a Markov model with covariates","title":"Examples of using msmbayes","text":"demonstrate fit Markov multi-state model covariates, data simulated model covariates. variable statec infsim data simulated continuous-time Markov model intensities \\(q_{rsi} = q_{rs}^{(0)} \\exp(\\beta_{rs}^{(male)} male_i + \\beta_{rs}^{(age)} age_i)\\), \\(\\) individual, \\(male_i\\) binary indicator whether male, \\(age_i\\) age. log hazard ratios effects covariates 1-2 transition \\((\\beta_{12}^{(male)}, \\beta_{12}^{(age)}) = (2,1)\\), 2-1 transition, \\((\\beta_{21}^{(male)}, \\beta_{21}^{(age)}) = (0,-1)\\). \\(q_{rs}^{(0)}\\) intensity “reference” baseline individual, defined 50 year old woman. values used . data infsim, age expressed units 10 years, centered around age 50. Centering around value interest helps interpretation intercept term \\(q_{rs}^{(0)}\\). Centering scaling covariates roughly unit scale also tends help computation, especially MCMC. include covariates msmbayes model, covariates argument included. following model supposes sex age predictors 1-2 2-1 transition intensities. Weakly informative priors defined covariate effects, specifying upper 95% credible limits 50 hazard ratios. syntax covariates argument list formulae. formula left-hand side looks like Q(r,s) indicating \\(r \\rightarrow s\\) transition intensity outcome, right-hand side giving predictors linear model formula. example, Q(2,1) ~ sex + age indicates \\(\\log(q_{21})\\) additive linear function age sex. Note: syntax slightly different msm, use named list formulae empty “outcome” left-hand sides, e.g. covariates = list(\"1-2\" = ~sex+age, \"2-1\" = ~ sex+age). fitting msmbayes model covariates, summary function model object returns estimates baseline intensities \\(q_{rs}^{(0)}\\) hazard ratios \\(exp(\\beta_{rs})\\), indicated covariate name transition. functions loghr hr can used summarise log hazard ratios hazard ratios isolation. estimates log hazard ratios close true values 2, 1, 0, -1 used simulate data, within estimation error. Note posterior distributions skewed, hence posterior mean hazard ratio different \\(\\exp()\\) posterior mean log hazard ratio. mode median may preferred point estimate.","code":"priors <- list(msmprior(\"hr(age10,1,2)\",median=1,upper=50),                msmprior(\"hr(age10,2,1)\",median=1,upper=50),                msmprior(\"hr(sexmale,1,2)\",median=1,upper=50),                msmprior(\"hr(sexmale,2,1)\",median=1,upper=50)) draws <- msmbayes(infsim, state=\"statec\", time=\"months\", subject=\"subject\",                   Q=Q,  covariates = list(Q(1,2)~sex+age10, Q(2,1)~sex+age10),                   fit_method=\"pathfinder\",                   priors = priors) summary(draws) ## # A tibble: 8 × 6 ##   name         from    to         value prior               rhat ##   <chr>       <dbl> <dbl>    <rvar[1d]> <chr>              <dbl> ## 1 q               1     2  0.24 ± 0.095 0.14 (0.0027, 6.7) 0.999 ## 2 q               2     1  5.48 ± 2.196 0.14 (0.0027, 6.7) 0.999 ## 3 mst             1    NA  4.73 ± 1.599 7.4 (0.15, 369)    0.999 ## 4 mst             2    NA  0.21 ± 0.070 7.4 (0.15, 369)    0.999 ## 5 hr(sexmale)     1     2  5.70 ± 2.356 1 (0.023, 44)      0.999 ## 6 hr(age10)       1     2  2.91 ± 1.074 1 (0.023, 44)      1.00  ## 7 hr(sexmale)     2     1  0.60 ± 0.262 1 (0.023, 44)      0.999 ## 8 hr(age10)       2     1  0.34 ± 0.133 1 (0.023, 44)      1.00 loghr(draws) ##   from to    name       value ## 1    1  2 sexmale  1.7 ± 0.40 ## 2    1  2   age10  1.0 ± 0.36 ## 3    2  1 sexmale -0.6 ± 0.42 ## 4    2  1   age10 -1.2 ± 0.40"},{"path":"https://chjackson.github.io/msmbayes/articles/examples.html","id":"sec-priors-cov","dir":"Articles","previous_headings":"Fitting a Markov model with covariates","what":"Priors on covariate effects","title":"Examples of using msmbayes","text":"Normal priors used log hazard ratios \\(\\beta\\). can specified priors argument, , either specifying mean SD log hazard ratios, quantiles either hazard ratios log hazard ratios. Note specific covariate referred well transition. example, define priors effect age 1-2 2-1 transition rates respectively: factor covariates, appropriate factor level included name (done sexmale ). priors log hazard ratios specified priors, default normal prior mean 0 SD 10 used. careful prior choice. Bear mind likely size covariate effects choosing prior variance. Make sure prior represents evidence effect exists outside data.","code":"priors <- list(msmprior(\"loghr(age,1,2)\", mean=0,   sd=2),                msmprior(\"hr(age,2,1)\",    median=1, upper=5))"},{"path":"https://chjackson.github.io/msmbayes/articles/examples.html","id":"sec-comp","dir":"Articles","previous_headings":"Fitting a Markov model with covariates","what":"Notes on computation and tuning","title":"Examples of using msmbayes","text":"fit_method argument specifies quoted name function cmdstanr used sampling. “sample” default. Users can pass arguments functions msmbayes control sampling, e.g. initial values, parallel processing. fit_method=\"laplace\" uses Laplace approximation determines posterior mode exactly, uses normal approximation distribution around mode. MCMC reveals skewed posterior distributions case, Laplace approximation ideal. However, much faster MCMC. fit_method=\"pathfinder\" implements variational approximation posterior. designed better Laplace, better standard variational method. runs much faster MCMC case, used example . fit_method=\"variational\" runs quickly, similar Laplace method, seems give less nuanced posterior distributions Pathfinder method. example works Stan’s default MCMC initial values, sampled priors. Users also supply init argument msmbayes, passed Stan. model fits data badly, sampling may bad method. Sampling can also bad covariate values different scales. Centering scaling usually sensible, mentioned.","code":""},{"path":"https://chjackson.github.io/msmbayes/articles/examples.html","id":"comparison-between-a-bayesian-and-a-frequentist-multistate-model","dir":"Articles","previous_headings":"Fitting a Markov model with covariates","what":"Comparison between a Bayesian and a frequentist multistate model","title":"Examples of using msmbayes","text":"Compare model fitted msm package maximum likelihood. Awkwardly, optimiser used msm needs tuned (fnscale option) find global optimum. estimates hazard ratios (note, log hazard ratios ) within estimation error true values, differ Bayesian model, due influence prior distributions. shows information data strong enough overcome influence prior, suggests priors thoughtfully chosen transparently communicated real example. One common problem multi-state models intermittently-observed data likelihood surface awkwardly shaped. using msm, can lead optimiser appearing “converge”, local optimum, “saddle point”, rather true global maximum likelihood. Symptoms problem may include large confidence intervals (happens fnscale set), warning related Hessian matrix non-invertible. seriously, may convergence wrong optimum obvious symptoms - can detected running optimiser many times different initial values. advantage Bayesian estimation methods used sampling, can see full shape posterior distribution. example, posterior skewed model parameters, evidence may “multimodal”, .e. several peaks.","code":"library(msm) msm(statec~months, subject=subject, data=infsim, qmatrix=Q,      covariates=list(\"1-2\"=~sex+age10, \"2-1\"=~sex+age10),     control=list(fnscale=1000, maxit=10000)) ##  ## Call: ## msm(formula = statec ~ months, subject = subject, data = infsim,     qmatrix = Q, covariates = list(`1-2` = ~sex + age10, `2-1` = ~sex +         age10), control = list(fnscale = 1000, maxit = 10000)) ##  ## Maximum likelihood estimates ## Baselines are with covariates set to their means ##  ## Transition intensities with hazard ratios for each covariate ##                   Baseline                  sexmale                ## State 1 - State 1 -0.5114 (-1.2556,-0.2083)                        ## State 1 - State 2  0.5114 ( 0.2083, 1.2556) 4.5467 (1.5166,13.631) ## State 2 - State 1  3.7258 ( 1.5021, 9.2415) 0.4722 (0.1407, 1.585) ## State 2 - State 2 -3.7258 (-9.2415,-1.5021)                        ##                   age10                  ## State 1 - State 1                        ## State 1 - State 2 2.3576 (0.68633,8.099) ## State 2 - State 1 0.2687 (0.07144,1.011) ## State 2 - State 2                        ##  ## -2 * log-likelihood:  2625.65 exp(c(2,1,0,-1)) ## [1] 7.3890561 2.7182818 1.0000000 0.3678794 mcmc_dens(draws, pars=c(\"logq[1]\",\"logq[2]\",\"loghr[1]\",\"loghr[2]\",\"loghr[3]\",\"loghr[4]\"),           adjust=1)"},{"path":"https://chjackson.github.io/msmbayes/articles/examples.html","id":"phase-type-semi-markov-models-and-misclassification-models","dir":"Articles","previous_headings":"","what":"Phase-type semi-Markov models, and misclassification models","title":"Examples of using msmbayes","text":"See vignette advanced multi-state models msmbayes.","code":""},{"path":"https://chjackson.github.io/msmbayes/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christopher Jackson. Author, maintainer.","code":""},{"path":"https://chjackson.github.io/msmbayes/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jackson C (2024). msmbayes: Bayesian Multi-State Models Intermittently-Observed Data. R package version 0.2, https://github.com/chjackson/msmbayes.","code":"@Manual{,   title = {msmbayes: Bayesian Multi-State Models for Intermittently-Observed Data},   author = {Christopher Jackson},   year = {2024},   note = {R package version 0.2},   url = {https://github.com/chjackson/msmbayes}, }"},{"path":"https://chjackson.github.io/msmbayes/index.html","id":"msmbayes","dir":"","previous_headings":"","what":"Bayesian Multi-State Models for Intermittently-Observed Data","title":"Bayesian Multi-State Models for Intermittently-Observed Data","text":"msmbayes experimental R package Bayesian multi-state modelling intermittently-observed data. similar msm package. However supports following models: Markov models intermittently-observed states Hidden Markov models intermittently-observed, misclassified (discrete) states Phase-type semi-Markov models intermittently-observed states Models fitted Bayesian estimation, via algorithms available Stan, whereas msm uses maximum likelihood.","code":""},{"path":"https://chjackson.github.io/msmbayes/index.html","id":"advantages-of-msmbayes-compared-to-msm","dir":"","previous_headings":"","what":"Advantages of msmbayes compared to msm","title":"Bayesian Multi-State Models for Intermittently-Observed Data","text":"Informative priors can represent background information Prior information can also help stabilise model fitting Automatic, efficient uncertainty quantification model output Phase-type models number phases supported, though investigated much","code":""},{"path":"https://chjackson.github.io/msmbayes/index.html","id":"limitations-of-msmbayes-compared-to-msm","dir":"","previous_headings":"","what":"Limitations of msmbayes compared to msm","title":"Bayesian Multi-State Models for Intermittently-Observed Data","text":"“Exact death time” observation schemes supported (models can still absorbing states, state structure). Continuously-observed processes (exacttimes msm()) supported. “Censored states” supported. Equality constraints fixed parameters supported, however prior distributions can used. Time-inhomogeneous models specified pci msm() supported. However, models time-varying intensities can still specified “time” covariate, assumes intensities constant successive observations state. Hidden Markov models general outcome distributions supported. HMMs supported observed state space (subset ) true state space. includes misclassification phase-type models. Multivariate hidden Markov models supported Fewer output functions, particular functions check fit data limited documentation worked examples","code":""},{"path":"https://chjackson.github.io/msmbayes/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Bayesian Multi-State Models for Intermittently-Observed Data","text":"Examples using msmbayes given : vignette(\"examples\").","code":""},{"path":"https://chjackson.github.io/msmbayes/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian Multi-State Models for Intermittently-Observed Data","text":"Warning: package experimental. knowledge Bayesian analysis needed develop interpret models ! use , please give feedback github issues, email.","code":"## install,packages(\"remotes\") # if need be remotes::install_github(\"chjackson/msmbayes\")"},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://chjackson.github.io/msmbayes/reference/bigdat.html","id":null,"dir":"Reference","previous_headings":"","what":"A simulated multistate dataset with lots of observations and\r\ncovariates — bigdat","title":"A simulated multistate dataset with lots of observations and\r\ncovariates — bigdat","text":"simulated multistate dataset lots observations covariates","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/bigdat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A simulated multistate dataset with lots of observations and\r\ncovariates — bigdat","text":"","code":"bigdat"},{"path":"https://chjackson.github.io/msmbayes/reference/bigdat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A simulated multistate dataset with lots of observations and\r\ncovariates — bigdat","text":"See infsim/bigdata.R source simulation settings.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/edf.html","id":null,"dir":"Reference","previous_headings":"","what":"Misclassification probabilities from an msmbayes model — edf","title":"Misclassification probabilities from an msmbayes model — edf","text":"Misclassification probabilities msmbayes model","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/edf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Misclassification probabilities from an msmbayes model — edf","text":"","code":"edf(draws)"},{"path":"https://chjackson.github.io/msmbayes/reference/edf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Misclassification probabilities from an msmbayes model — edf","text":"draws Object returned msmbayes.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/edf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Misclassification probabilities from an msmbayes model — edf","text":"data frame one row per misclassification probability. indicates true state, indicates observed state.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msmbayes/reference/example_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Example fitted model objects used for testing msmbayes — example_models","title":"Example fitted model objects used for testing msmbayes — example_models","text":"Example fitted model objects used testing msmbayes","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/example_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example fitted model objects used for testing msmbayes — example_models","text":"","code":"infsim_model  infsim_modelc  cav_misc"},{"path":"https://chjackson.github.io/msmbayes/reference/example_models.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example fitted model objects used for testing msmbayes — example_models","text":"object class msmbayes, obtained fitting Markov model dataset infsim.  See data-raw/infsim.R source model specification code infsim_modelc includes covariates transition intensities. cav_misc misclassification model fitted CAV data msm \"Advanced multi-state models msmbayes\" vignette. intensities.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/example_models.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example fitted model objects used for testing msmbayes — example_models","text":"Simulated","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/hr.html","id":null,"dir":"Reference","previous_headings":"","what":"Hazard ratios for covariates on transition intensities — hr","title":"Hazard ratios for covariates on transition intensities — hr","text":"Hazard ratios covariates transition intensities","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/hr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hazard ratios for covariates on transition intensities — hr","text":"","code":"hr(draws)"},{"path":"https://chjackson.github.io/msmbayes/reference/hr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hazard ratios for covariates on transition intensities — hr","text":"draws Object returned msmbayes.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/hr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hazard ratios for covariates on transition intensities — hr","text":"data frame containing samples posterior distribution. See qdf notes format summarise.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msmbayes/reference/infsim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated infection testing data — infsim","title":"Simulated infection testing data — infsim","text":"Simulated infection testing data","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/infsim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated infection testing data — infsim","text":"","code":"infsim  infsim2"},{"path":"https://chjackson.github.io/msmbayes/reference/infsim.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated infection testing data — infsim","text":"infsim 3600 rows, 36 state observations 100 people.  Columns : subject Subject identifier days Observation time (days) months Observation time (moths) state State simulated Markov model covariates sex: \"male\" \"female\". age10: Age, units 10 years since age 50 statec: State simulated Markov model covariates statep: State simulated phase-type model (unused examples. See data-raw/infsim.R source simulation settings) statepc: State simuated phase-type model covariates (unused examples) smaller dataset infsim2 360 rows, 20 people, simulated using sojourn time 60 days test-negative state 10 days test-positive. object class data.frame 360 rows 14 columns.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/infsim.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated infection testing data — infsim","text":"Simulated","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/infsim2.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated infection testing data — infsim2","title":"Simulated infection testing data — infsim2","text":"1 negative, 2 positive","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/infsim2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated infection testing data — infsim2","text":"","code":"infsim2"},{"path":"https://chjackson.github.io/msmbayes/reference/infsim2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated infection testing data — infsim2","text":"TODO","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/infsim2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated infection testing data — infsim2","text":"Simulated","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/infsim_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Example fitted model objects used for testing msmbayes — infsim_model","title":"Example fitted model objects used for testing msmbayes — infsim_model","text":"Example fitted model objects used testing msmbayes","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/infsim_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example fitted model objects used for testing msmbayes — infsim_model","text":"","code":"infsim_model  infsim_modelc"},{"path":"https://chjackson.github.io/msmbayes/reference/infsim_model.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example fitted model objects used for testing msmbayes — infsim_model","text":"object class msmbayes, obtained fitting Markov model dataset infsim.  See data-raw/infsim.R source model specification code infsim_modelc includes covariates transition intensities.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/infsim_model.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example fitted model objects used for testing msmbayes — infsim_model","text":"Simulated","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/infsim_modelc.html","id":null,"dir":"Reference","previous_headings":"","what":"Test model with covariates — infsim_modelc","title":"Test model with covariates — infsim_modelc","text":"Test model covariates","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/infsim_modelc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test model with covariates — infsim_modelc","text":"","code":"infsim_modelc"},{"path":"https://chjackson.github.io/msmbayes/reference/infsim_modelc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Test model with covariates — infsim_modelc","text":"TODO","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/infsim_modelc.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Test model with covariates — infsim_modelc","text":"Simulated","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/loghr.html","id":null,"dir":"Reference","previous_headings":"","what":"Log hazard ratios for covariates on transition intensities — loghr","title":"Log hazard ratios for covariates on transition intensities — loghr","text":"Log hazard ratios covariates transition intensities","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/loghr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log hazard ratios for covariates on transition intensities — loghr","text":"","code":"loghr(draws)"},{"path":"https://chjackson.github.io/msmbayes/reference/loghr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log hazard ratios for covariates on transition intensities — loghr","text":"draws Object returned msmbayes.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/loghr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log hazard ratios for covariates on transition intensities — loghr","text":"data frame containing samples posterior distribution. See qdf notes format summarise.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msmbayes/reference/mean_sojourn.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean sojourn times from an msmbayes model — mean_sojourn","title":"Mean sojourn times from an msmbayes model — mean_sojourn","text":"Mean sojourn times msmbayes model","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/mean_sojourn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean sojourn times from an msmbayes model — mean_sojourn","text":"","code":"mean_sojourn(draws, new_data = NULL, by_phase = TRUE)"},{"path":"https://chjackson.github.io/msmbayes/reference/mean_sojourn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean sojourn times from an msmbayes model — mean_sojourn","text":"draws Object returned msmbayes. new_data Data frame covariate values predict by_phase states phase type distributions: TRUE one mean sojourn time per phase returned. FALSE, one overall mean sojourn time state returned.  generally equal sum phase-specific mean sojourn times, individual may transition state progressing next phase.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/mean_sojourn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean sojourn times from an msmbayes model — mean_sojourn","text":"data frame containing samples posterior distribution. See qdf notes format summarise.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmbayes-package.html","id":null,"dir":"Reference","previous_headings":"","what":"The 'msmbayes' package for Bayesian multi-state modelling of intermittently-observed data — msmbayes-package","title":"The 'msmbayes' package for Bayesian multi-state modelling of intermittently-observed data — msmbayes-package","text":"introduction overview msmbayes package, full documentation, see http://chjackson.github.io/msmbayes. resources multi-state modelling, see msm package documentation.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msmbayes/reference/msmbayes-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The 'msmbayes' package for Bayesian multi-state modelling of intermittently-observed data — msmbayes-package","text":"Maintainer: Christopher Jackson chris.jackson@mrc-bsu.cam.ac.uk (ORCID)","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmbayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian multi-state models for intermittently-observed data — msmbayes","title":"Bayesian multi-state models for intermittently-observed data — msmbayes","text":"Fit multi-state model longitudinal data consisting intermittent observation discrete state.  Bayesian estimation used, via Stan software.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmbayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian multi-state models for intermittently-observed data — msmbayes","text":"","code":"msmbayes(   data,   state,   time,   subject,   Q,   E = NULL,   covariates = NULL,   nphase = NULL,   priors = NULL,   fit_method = \"sample\",   keep_data = FALSE,   ... )"},{"path":"https://chjackson.github.io/msmbayes/reference/msmbayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian multi-state models for intermittently-observed data — msmbayes","text":"data Data frame giving observed data. state Character string naming observed state variable data.  variable must either integer 1,2,...,K, K number states, factor integers level labels. time Character string naming observation time variable data subject Character string naming individual ID variable data Q Matrix indicating transition structure.  zero entry indicates instantaneous transitions (row) (column) disallowed.  entry 1 (positive value) indicates instantaneous transition allowed.  diagonal Q ignored. need \"guess\" initial values put , sometimes done msm.  Initial values fitting determined Stan prior distributions, specific values supplied positive entries Q disregarded. E NULL non-hidden Markov model fitted.  non-NULL matrix indicating structure allowed misclassifications, rows true states, columns observed states.  zero \\((r,s)\\) entry indicates true state \\(r\\) observed observed state \\(s\\).  non-zero \\((r,s)\\) entry indicates initial value permitted misclassification probability.  diagonal E ignored. covariates Specification covariates transition intensities. list formulae.  formula left-hand side looks like Q(r,s), right hand side defining regression model log transition intensity state \\(r\\) state \\(s\\). example, covariates = list(Q(1,2) ~ age + sex,                         Q(2,1) ~ age) specifies log 1-2 transition intensity additive linear function age sex, log 2-1 transition intensity linear function age.  list intensities influenced covariates. nphase phase-type models, vector one element per state, giving number phases per state.  element 1 states phase-type sojourn distributions. required non-phase-type models. priors list specifying priors.  component result call msmprior.  parameters priors specified given default priors (normal mean -2 SD 2 log intensities, normal mean 0 SD 10 log hazard ratios). one parameter given non-default prior, single msmprior call can supplied instead list. fit_method Quoted name function cmdstanr package specifying algorithm fit model.  default \"sample\" uses MCMC, via cmdstanr::sample(). Alternatives cmdstanr::optimize(), cmdstanr::pathfinder(), cmdstanr::laplace() cmdstanr::variational(). keep_data Store copy cleaned data returned object.  FALSE default. ... arguments passed function cmdstanr fits model.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmbayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian multi-state models for intermittently-observed data — msmbayes","text":"data frame draws format posterior package, containing draws posterior model parameters. Attributes added give information model structure, class \"msmbayes\" appended. See, e.g. summary.msmbayes, qdf, hr, similar functions, extract parameter estimates fitted model.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmhist.html","id":null,"dir":"Reference","previous_headings":"","what":"Illustrate the empirical distribution of states against time\r\nin intermittently-observed multistate data — msmhist","title":"Illustrate the empirical distribution of states against time\r\nin intermittently-observed multistate data — msmhist","text":"works similarly histogram.  state observations binned time intervals roughly equal numbers observations.  Within bin, probability \\(p(s)\\) observation comes state \\(s\\) estimated.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmhist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Illustrate the empirical distribution of states against time\r\nin intermittently-observed multistate data — msmhist","text":"","code":"msmhist(   data,   state,   time,   subject,   nbins,   absorbing = NULL,   censtimes = NULL,   stacked = TRUE )"},{"path":"https://chjackson.github.io/msmbayes/reference/msmhist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Illustrate the empirical distribution of states against time\r\nin intermittently-observed multistate data — msmhist","text":"data Data frame giving observed data. state Character string naming observed state variable data.  variable must either integer 1,2,...,K, K number states, factor integers level labels. time Character string naming observation time variable data subject Character string naming individual ID variable data nbins Number time intervals bin state observations .  underlying distribution states illustrated plot assumed constant within interval. absorbing Indices absorbing states.  Individuals assumed stay absorbing state, contribute one observation bin absorption time.  default, states assumed absorbing. censtimes Vector maximum intended follow-times people data entered absorbing states.  supposes person entered absorbing state, observed time. stacked TRUE bar chart probabilities different states stacked top , y-axis spans 0 1 exactly.  compact. FALSE, plot one panel per state, done prevalence.msm.  convenient constructing check model fit.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmhist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Illustrate the empirical distribution of states against time\r\nin intermittently-observed multistate data — msmhist","text":"ggplot2 plot object.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmhist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Illustrate the empirical distribution of states against time\r\nin intermittently-observed multistate data — msmhist","text":"subject one observation bin, \\(p(s)\\) estimated proportion observations bin state. generally, individual one observation bin, \\(p(s)\\) estimated follows. observed individual \\(\\) state \\(s\\), define variable \\(p(,s)\\) equal proportion individual \\(\\)'s observations state \\(s\\). example, three-state model, person two observations bin, states 2 3, \\(p(,s) = 0, 0.5, 0.5\\) states 1, 2 3 respectively.  bin-specific estimate \\(p(s)\\) average \\(p(,s)\\) individuals \\(s\\) least one observation bin. results visualised stacked bar plot.  individual observations states represented points placed random y positions within state-specific bar. intended alternative \"observed prevalences\" plot function prevalence.msm msm package, clearer connection data.   can overlaid predictions transition probabilities msmbayes msm model, check fit model. method used \"observed prevalences\" plots places strong assumption individual data, individuals stay state observations, transition midpoint observations. msmhist places assumption individual data.  Instead assumption placed distribution underlying data. histogram-like visualisation assumes, essentially, distribution states times within bin.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msmbayes/reference/msmhist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Illustrate the empirical distribution of states against time\r\nin intermittently-observed multistate data — msmhist","text":"","code":"msmhist(infsim, \"state\", \"months\", \"subject\", nbins=30)  msmhist(infsim2, \"state\", \"months\", \"subject\", nbins=6)"},{"path":"https://chjackson.github.io/msmbayes/reference/msmhist_bardata.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate state occupation probabilities to be illustrated by a bar\r\nplot in msmhist — msmhist_bardata","title":"Estimate state occupation probabilities to be illustrated by a bar\r\nplot in msmhist — msmhist_bardata","text":"Estimate state occupation probabilities illustrated bar plot msmhist","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmhist_bardata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate state occupation probabilities to be illustrated by a bar\r\nplot in msmhist — msmhist_bardata","text":"","code":"msmhist_bardata(   data,   state,   time,   subject,   nbins,   absorbing = NULL,   censtimes = NULL )"},{"path":"https://chjackson.github.io/msmbayes/reference/msmhist_bardata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate state occupation probabilities to be illustrated by a bar\r\nplot in msmhist — msmhist_bardata","text":"data Data frame giving observed data. state Character string naming observed state variable data.  variable must either integer 1,2,...,K, K number states, factor integers level labels. time Character string naming observation time variable data subject Character string naming individual ID variable data nbins Number time intervals bin state observations .  underlying distribution states illustrated plot assumed constant within interval. absorbing Indices absorbing states.  Individuals assumed stay absorbing state, contribute one observation bin absorption time.  default, states assumed absorbing. censtimes Vector maximum intended follow-times people data entered absorbing states.  supposes person entered absorbing state, observed time.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmhist_bardata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate state occupation probabilities to be illustrated by a bar\r\nplot in msmhist — msmhist_bardata","text":"Data frame one row per bin state, columns: binid: Integer ID bin binlabel: Character label bin, time interval state: State binstart, binend: Start end time bin (numeric) props: estimates state $s$ occupancy proportions $p(s)$ bin cumpstart, cumpend: Cumulative sum props set states, cumpstart starts 0, cumpend ends Intended creating stacked bar plots geom_rect similar.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msmbayes/reference/msmprior.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a prior distribution in msmbayes — msmprior","title":"Constructor for a prior distribution in msmbayes — msmprior","text":"Constructor prior distribution msmbayes","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmprior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a prior distribution in msmbayes — msmprior","text":"","code":"msmprior(   par,   mean = NULL,   sd = NULL,   median = NULL,   lower = NULL,   upper = NULL )"},{"path":"https://chjackson.github.io/msmbayes/reference/msmprior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a prior distribution in msmbayes — msmprior","text":"par Character string indicating model parameter place prior start one following: \"logq\".  Log transition intensity. \"q\", Transition intensity \"time\". Defined 1/q.  can interpreted mean time next transition state $s$ people state $r$ (point view someone observing one person time, switching observing different person competing transition happens). \"loghr\". Log hazard ratio \"hr\". Hazard ratio transition intensities, two include indices indicating transition, e.g. \"logq(2,3)\" log transition intensity state 2 state 3. covariate effects, covariate name supplied alongside transition indices, e.g. \"loghr(age,2,3)\" effect age log hazard ratio transitioning state 2 state 3. factor covariates, include level, e.g. \"loghr(sexMALE,2,3)\" level \"MALE\" factor \"sex\". indices covariate name can omitted indicate prior used transitions, /covariates.  can done without brackets, e.g. \"logq()\" \"logq\" understood. mean Prior mean (used logq loghr) sd Prior standard deviation (used logq loghr) median Prior median lower Prior lower 95% quantile upper Prior upper 95% quantile","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmprior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a prior distribution in msmbayes — msmprior","text":"list class \"msmprior\", components par (supplied user) par_base (either \"logq\" \"loghr\") covname (name covariate effect) ind1, ind2 (supplied user) mean (log-normal prior par_base) sd  (log-normal prior par_base)","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmprior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Constructor for a prior distribution in msmbayes — msmprior","text":"msmbayes, normal prior used log transition intensities (logq) log hazard ratios (loghr). goal function determine mean SD prior.  can used two ways: () directly specifying prior mean SD logq loghr` (b) specifying prior quantiles interpretable transformations .  may include q (transition intensity) time (reciprocal intensity, interpreted mean time transition observing sequence individuals risk ).  hr (hazard ratio2) Two quantiles median, lower upper provided. three provided, upper quantile ignored.  transformed back scale logq loghr, unique normal prior quantiles deduced.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmprior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructor for a prior distribution in msmbayes — msmprior","text":"","code":"priors <- list(    msmprior(\"logq(1,2)\", median=-2, lower=-4),    msmprior(\"q(2,1)\",    median=0.1, upper=10) ) Q <- rbind(c(0,1),c(1,0)) mod <- msmbayes(data=infsim2, state=\"state\", time=\"months\", subject=\"subject\",                 Q=Q,  priors=priors, fit_method=\"optimize\") #> Initial log joint probability = -185.951  #>     Iter      log prob        ||dx||      ||grad||       alpha      alpha0  # evals  Notes   #>       12      -18.3986    0.00174506    0.00118475      0.9593      0.9593       13     #> Optimization terminated normally:   #>   Convergence detected: relative gradient magnitude is below tolerance  #> Finished in  0.3 seconds. summary(mod) #> # A tibble: 4 × 6 #>   name   from    to      value prior                 rhat #>   <chr> <int> <int> <rvar[1d]> <chr>                <dbl> #> 1 q         1     2  0.58 ± NA \"0.14 (0.018, 0.99)\"    NA #> 2 q         2     1  3.41 ± NA \"0.10 (0.001, 9.88)\"    NA #> 3 mst       1    NA  1.73 ± NA \" 7.4 (1.0,  54)\"       NA #> 4 mst       2    NA  0.29 ± NA \"10.0 (0.1, 988)\"       NA"},{"path":"https://chjackson.github.io/msmbayes/reference/pmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition probability matrix from an msmbayes model — pmatrix","title":"Transition probability matrix from an msmbayes model — pmatrix","text":"Transition probability matrix msmbayes model","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/pmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition probability matrix from an msmbayes model — pmatrix","text":"","code":"pmatrix(draws, t = 1, new_data = NULL, X = NULL, drop = TRUE)"},{"path":"https://chjackson.github.io/msmbayes/reference/pmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition probability matrix from an msmbayes model — pmatrix","text":"draws Object returned msmbayes. t prediction time vector prediction times new_data Data frame covariate values predict X Lower-level alternative specifying new_data, developer use .  X numeric matrix formed column-binding covariate design matrices transition turn. drop used covariates supplied new_data. drop=TRUE returns nstates x nstates matrix, drop=FALSE returns 3D array first dimension ncovs=1.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/pmatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transition probability matrix from an msmbayes model — pmatrix","text":"Array matrix rvar objects giving transition probability matrix requested prediction time covariate value.  See qdf notes rvar format.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msmbayes/reference/pmatrixdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition probabilities from an msmbayes model, presented\r\nas a tidy data frame — pmatrixdf","title":"Transition probabilities from an msmbayes model, presented\r\nas a tidy data frame — pmatrixdf","text":"Transition probabilities msmbayes model, presented tidy data frame","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/pmatrixdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition probabilities from an msmbayes model, presented\r\nas a tidy data frame — pmatrixdf","text":"","code":"pmatrixdf(draws, t = 1, new_data = NULL)"},{"path":"https://chjackson.github.io/msmbayes/reference/pmatrixdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition probabilities from an msmbayes model, presented\r\nas a tidy data frame — pmatrixdf","text":"draws Object returned msmbayes. t prediction time vector prediction times new_data Data frame covariate values predict ","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/pmatrixdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transition probabilities from an msmbayes model, presented\r\nas a tidy data frame — pmatrixdf","text":"data frame containing samples posterior distribution. See qdf notes format summarise.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/qdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition intensities from an msmbayes model, presented as a tidy data frame — qdf","title":"Transition intensities from an msmbayes model, presented as a tidy data frame — qdf","text":"Transition intensities msmbayes model, presented tidy data frame","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/qdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition intensities from an msmbayes model, presented as a tidy data frame — qdf","text":"","code":"qdf(draws, new_data = NULL)"},{"path":"https://chjackson.github.io/msmbayes/reference/qdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition intensities from an msmbayes model, presented as a tidy data frame — qdf","text":"draws Object returned msmbayes. new_data Data frame covariate values predict ","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/qdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transition intensities from an msmbayes model, presented as a tidy data frame — qdf","text":"data frame one row per -state / -state / covariate value. Column value rvar format posterior package, representing sample posterior distribution.  Use summary function data frame produce summary statistics posterior median mean (see summary.msmbayes).","code":""},{"path":[]},{"path":"https://chjackson.github.io/msmbayes/reference/qdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transition intensities from an msmbayes model, presented as a tidy data frame — qdf","text":"","code":"qdf(infsim_model) #> # A tibble: 2 × 3 #>    from    to      value #>   <int> <int> <rvar[1d]> #> 1     1     2  0.67 ± NA #> 2     2     1  3.86 ± NA summary(qdf(infsim_model)) #>   from to     mean   median sd mad       q5      q95 rhat ess_bulk ess_tail #> 1    1  2 0.666111 0.666111 NA   0 0.666111 0.666111   NA       NA       NA #> 2    2  1 3.860667 3.860667 NA   0 3.860667 3.860667   NA       NA       NA summary(qdf(infsim_model), median, ~quantile(.x, 0.025, 0.975)) #>   from to   median     2.5% #> 1    1  2 0.666111 0.666111 #> 2    2  1 3.860667 3.860667  qdf(infsim_modelc,     new_data = data.frame(sex=c(\"female\",\"male\"))) #> # A tibble: 4 × 4 #>    from    to      value sex    #>   <int> <int> <rvar[1d]> <chr>  #> 1     1     2  0.62 ± NA female #> 2     1     2  0.70 ± NA male   #> 3     2     1  3.84 ± NA female #> 4     2     1  3.84 ± NA male"},{"path":"https://chjackson.github.io/msmbayes/reference/qmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition intensity matrix from an msmbayes model — qmatrix","title":"Transition intensity matrix from an msmbayes model — qmatrix","text":"Transition intensity matrix msmbayes model","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/qmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition intensity matrix from an msmbayes model — qmatrix","text":"","code":"qmatrix(draws, new_data = NULL, X = NULL, drop = TRUE)"},{"path":"https://chjackson.github.io/msmbayes/reference/qmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition intensity matrix from an msmbayes model — qmatrix","text":"draws Object returned msmbayes. new_data Data frame covariate values predict X Lower-level alternative specifying new_data, developer use .  X numeric matrix formed column-binding covariate design matrices transition turn. drop used covariates supplied new_data. drop=TRUE returns nstates x nstates matrix, drop=FALSE returns 3D array first dimension ncovs=1.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/qmatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transition intensity matrix from an msmbayes model — qmatrix","text":"array matrix rvar objects containing transition intensity matrix new prediction data point","code":""},{"path":[]},{"path":"https://chjackson.github.io/msmbayes/reference/qmatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transition intensity matrix from an msmbayes model — qmatrix","text":"","code":"qmatrix(infsim_model) #> rvar<1>[2,2] mean ± sd: #>      [,1]        [,2]        #> [1,] -0.67 ± NA   0.67 ± NA  #> [2,]  3.86 ± NA  -3.86 ± NA  summary(qmatrix(infsim_model)) #> # A tibble: 4 × 10 #>   variable         mean median    sd   mad     q5    q95  rhat ess_bulk ess_tail #>   <chr>           <dbl>  <dbl> <dbl> <dbl>  <dbl>  <dbl> <dbl>    <dbl>    <dbl> #> 1 qmatrix(infsi… -0.666 -0.666    NA     0 -0.666 -0.666    NA       NA       NA #> 2 qmatrix(infsi…  3.86   3.86     NA     0  3.86   3.86     NA       NA       NA #> 3 qmatrix(infsi…  0.666  0.666    NA     0  0.666  0.666    NA       NA       NA #> 4 qmatrix(infsi… -3.86  -3.86     NA     0 -3.86  -3.86     NA       NA       NA summary(qmatrix(infsim_model), median, ~quantile(.x, 0.025, 0.975)) #> # A tibble: 4 × 3 #>   variable                   median `2.5%` #>   <chr>                       <dbl>  <dbl> #> 1 qmatrix(infsim_model)[1,1] -0.666 -0.666 #> 2 qmatrix(infsim_model)[2,1]  3.86   3.86  #> 3 qmatrix(infsim_model)[1,2]  0.666  0.666 #> 4 qmatrix(infsim_model)[2,2] -3.86  -3.86"},{"path":"https://chjackson.github.io/msmbayes/reference/standardise_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a standardising population used for model\r\noutputs — standardise_to","title":"Constructor for a standardising population used for model\r\noutputs — standardise_to","text":"Standardised outputs outputs models covariates, defined marginalising (averaging) covariate values given population, rather conditional given covariate value.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/standardise_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a standardising population used for model\r\noutputs — standardise_to","text":"","code":"standardise_to(new_data)  standardize_to(new_data)"},{"path":"https://chjackson.github.io/msmbayes/reference/standardise_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a standardising population used for model\r\noutputs — standardise_to","text":"new_data Data frame covariate values predict ","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/standardise_to.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Constructor for a standardising population used for model\r\noutputs — standardise_to","text":"Standardised outputs produced Monte Carlo sample joint distribution parameters \\(\\theta\\) covariate values \\(X\\), \\(p(X,\\theta) = p(\\theta|X)p(X)\\), \\(p(X)\\) defined empirical distribution covariates standard population.   joint sample obtained concatenating samples covariate-specific outputs. Hence applying output function \\(g()\\) (transition probability) sample produces sample posterior \\(\\int g(\\theta|X) dX\\): average transition probability (say) heterogeneous population.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/standardise_to.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructor for a standardising population used for model\r\noutputs — standardise_to","text":"","code":"nd <- data.frame(sex=c(\"female\",\"male\"))  ## gender-specific outputs qdf(infsim_modelc, new_data = nd)  #> # A tibble: 4 × 4 #>    from    to      value sex    #>   <int> <int> <rvar[1d]> <chr>  #> 1     1     2  0.62 ± NA female #> 2     1     2  0.70 ± NA male   #> 3     2     1  3.84 ± NA female #> 4     2     1  3.84 ± NA male    ## averaged over men and women in the same proportions as are in `nd` ## in this case, `nd` has two rows, so we take a 50/50 average qdf(infsim_modelc, new_data = standardise_to(nd)) #> # A tibble: 2 × 3 #>    from    to         value #>   <int> <int>    <rvar[1d]> #> 1     1     2  0.66 ± 0.058 #> 2     2     1  3.84 ± 0.000"},{"path":"https://chjackson.github.io/msmbayes/reference/summary.msmbayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise basic parameter estimates from an msmbayes model — summary.msmbayes","title":"Summarise basic parameter estimates from an msmbayes model — summary.msmbayes","text":"Summarise basic parameter estimates msmbayes model","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/summary.msmbayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise basic parameter estimates from an msmbayes model — summary.msmbayes","text":"","code":"# S3 method for msmbayes summary(object, log = FALSE, time = FALSE, ...)"},{"path":"https://chjackson.github.io/msmbayes/reference/summary.msmbayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise basic parameter estimates from an msmbayes model — summary.msmbayes","text":"object Object returned msmbayes. log Present log transition intensities log hazard ratios, rather transition intensities hazard ratios. time Present inverse transition intensities (.e. mean times events) ... arguments passed qdf loghr.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/summary.msmbayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise basic parameter estimates from an msmbayes model — summary.msmbayes","text":"data frame one row basic model parameter, plus rows mean sojourn times.  posterior distribution parameter encoded column value, rvar data type defined posterior   package.  distribution can summarised way calling summary data frame (see examples). string summarising sample prior distribution, median 95% equal-tailed credible interval, given prior column. Transition intensities, transformations transition intensities, covariate values zero. Remaining parameters (non-HMMs) log hazard ratios covariate effects.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msmbayes/reference/summary.msmbayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise basic parameter estimates from an msmbayes model — summary.msmbayes","text":"","code":"summary(infsim_model) #> # A tibble: 4 × 6 #>   name   from    to      value prior             rhat #>   <chr> <int> <int> <rvar[1d]> <chr>            <dbl> #> 1 q         1     2  0.67 ± NA 0.14 (0.0031, 6)    NA #> 2 q         2     1  3.86 ± NA 0.14 (0.0031, 6)    NA #> 3 mst       1    NA  1.50 ± NA 7.4 (0.17, 326)     NA #> 4 mst       2    NA  0.26 ± NA 7.4 (0.17, 326)     NA summary(summary(infsim_model)) #>   name from to            prior rhat      mean    median sd mad        q5 #> 1    q    1  2 0.14 (0.0031, 6)   NA 0.6661110 0.6661110 NA   0 0.6661110 #> 2    q    2  1 0.14 (0.0031, 6)   NA 3.8606671 3.8606671 NA   0 3.8606671 #> 3  mst    1 NA  7.4 (0.17, 326)   NA 1.5012514 1.5012514 NA   0 1.5012514 #> 4  mst    2 NA  7.4 (0.17, 326)   NA 0.2590226 0.2590226 NA   0 0.2590226 #>         q95 rhat ess_bulk ess_tail #> 1 0.6661110   NA       NA       NA #> 2 3.8606671   NA       NA       NA #> 3 1.5012514   NA       NA       NA #> 4 0.2590226   NA       NA       NA summary(summary(infsim_model), median, ~quantile(.x, 0.025, 0.975)) #>   name from to            prior rhat    median      2.5% #> 1    q    1  2 0.14 (0.0031, 6)   NA 0.6661110 0.6661110 #> 2    q    2  1 0.14 (0.0031, 6)   NA 3.8606671 3.8606671 #> 3  mst    1 NA  7.4 (0.17, 326)   NA 1.5012514 1.5012514 #> 4  mst    2 NA  7.4 (0.17, 326)   NA 0.2590226 0.2590226"},{"path":"https://chjackson.github.io/msmbayes/reference/totlos.html","id":null,"dir":"Reference","previous_headings":"","what":"Total length of stay in each state over an interval — totlos","title":"Total length of stay in each state over an interval — totlos","text":"See msm::totlos.msm() theory behind method used calculate .  analytic formula used, numerical integration.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/totlos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Total length of stay in each state over an interval — totlos","text":"","code":"totlos(draws, t, new_data = NULL, fromt = 0, pstart = NULL, discount = 0)"},{"path":"https://chjackson.github.io/msmbayes/reference/totlos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Total length of stay in each state over an interval — totlos","text":"draws Object returned msmbayes. t End point time interval measure length stay state new_data Data frame covariate values predict fromt Starting point time interval, default 0 pstart Vector giving distribution states time 0 discount Discount rate continuous time","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/totlos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Total length of stay in each state over an interval — totlos","text":"Data frame one row state covariate value, giving expected amount time spent state forecast interval.","code":""},{"path":"https://chjackson.github.io/msmbayes/TODO.html","id":null,"dir":"","previous_headings":"","what":"Implement","title":"Implement","text":"reconcile packaging local work quarto back rmd vignette. quarto vignette support real soon now","code":""},{"path":"https://chjackson.github.io/msmbayes/TODO.html","id":"doubtful","dir":"","previous_headings":"","what":"Doubtful","title":"Implement","text":"likelihood cross-validation - possible, LOO? transition data, HMM? , https://users.aalto.fi/~ave/CV-FAQ.html#9_Can_cross-validation_be_used_for_time_series hidden states parameters, integrate ","code":""},{"path":"https://chjackson.github.io/msmbayes/news/index.html","id":"version-01-20240328","dir":"Changelog","previous_headings":"","what":"Version 0.1 (2024/03/28)","title":"Version 0.1 (2024/03/28)","text":"First public release.","code":""},{"path":"https://chjackson.github.io/msmbayes/news/index.html","id":"version-02-20240409","dir":"Changelog","previous_headings":"","what":"Version 0.2 (2024/04/09)","title":"Version 0.2 (2024/04/09)","text":"Friendlier interface specifying prior distributions. Prior distributions now summarised summary() output. New function msmhist() illustrating multi-state data time. New function standardise_to() computing outputs standardised distribution given population.","code":""}]
