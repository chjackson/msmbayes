[{"path":"https://chjackson.github.io/msmbayes/articles/cognitive.html","id":"simulated-data","dir":"Articles","previous_headings":"","what":"Simulated data","title":"Code for using the msmbayes package for semi-Markov modelling in an application to cognitive function","text":"simulated dataset loaded , produced simulating state outcomes Markov model fitted original ELSA data. number individuals observation times simulated original data.","code":"elsa1000 <- readRDS(\"elsa_fakedata.rds\")"},{"path":"https://chjackson.github.io/msmbayes/articles/cognitive.html","id":"basic-data-summaries","dir":"Articles","previous_headings":"","what":"Basic data summaries","title":"Code for using the msmbayes package for semi-Markov modelling in an application to cognitive function","text":"Calculate number observed transitions interval observations, -state -state. Overall split covariates. Note small number deaths state.","code":"statetable(state=\"state\", time=\"agey\", subject=\"idauniq\", data=elsa1000) #> # A tibble: 4 × 7 #>   fromstate timelag                     `1`   `2`   `3`   `4`   `5` #>       <dbl> <chr>                     <int> <int> <int> <int> <int> #> 1         1 [0.000182005853254452,11]   953   680   238    39    61 #> 2         2 [0.000182005853254452,11]   190   558   342    37    20 #> 3         3 [0.000182005853254452,11]    48   220   445   108    10 #> 4         4 [0.000182005853254452,11]     4    17    64   135     7 statetable(state=\"state\", time=\"agey\", subject=\"idauniq\",             covariates = \"gender\", data=elsa1000) #> # A tibble: 8 × 8 #>   fromstate timelag                   gender   `1`   `2`   `3`   `4`   `5` #>       <dbl> <chr>                     <fct>  <int> <int> <int> <int> <int> #> 1         1 [0.000182005853254452,11] man      377   291   107    20    27 #> 2         1 [0.000182005853254452,11] woman    576   389   131    19    34 #> 3         2 [0.000182005853254452,11] man       73   258   167    11     8 #> 4         2 [0.000182005853254452,11] woman    117   300   175    26    12 #> 5         3 [0.000182005853254452,11] man       15   111   237    47     5 #> 6         3 [0.000182005853254452,11] woman     33   109   208    61     5 #> 7         4 [0.000182005853254452,11] man        4     6    29    50     3 #> 8         4 [0.000182005853254452,11] woman      0    11    35    85     4 statetable(state=\"state\", time=\"agey\", subject=\"idauniq\",             covariates = \"age10\", data=elsa1000 |>               mutate(age10=cut(agey,c(0,60,70,80,110)))) |>   group_by(age10) |> summarise(n = sum(`5`)) # deaths by age group  #> # A tibble: 4 × 2 #>   age10        n #>   <fct>    <int> #> 1 (0,60]      28 #> 2 (60,70]     40 #> 3 (70,80]     21 #> 4 (80,110]     9"},{"path":"https://chjackson.github.io/msmbayes/articles/cognitive.html","id":"markov-models-in-msmbayes","dir":"Articles","previous_headings":"","what":"Markov models in msmbayes","title":"Code for using the msmbayes package for semi-Markov modelling in an application to cognitive function","text":"Start simplest model covariates default priors, sense check. Looking just transition intensities (q), mean sojourn times (mst) estimates look extreme uncertain, misleading - converted time scale, expected times death state 5 (without competing risks) implausibly large uncertain. Since little information dataset death, obtain strong priors death rates, effect age sex , national mortality statistics. effects given weakly informative priors: log-normal(0, 1) distribution supports hazard ratios around exp(2) = 7, suppose surprising context demographic effects risk cognitive decline. priors stored file elsa_priors.R, code used derive Supplementary Appendix 4 paper. Now include covariates model, still Markov model. age-sex interaction level education, modifying transition rates differently. Standard maximum likelihood estimation msm appears converge, even without constraints parameters, confidence intervals hazard ratios implausibly wide. msmbayes allows use informative priors stabilise computation support weak data background information.","code":"mbmod <- msmbayes(data=elsa1000, state=\"state\", time=\"agey\", subject=\"idauniq\",                   Q=Q5, deathexact=TRUE, fit_method=\"optimize\") summary(mbmod)  #> # A tibble: 14 × 7 #>    name   from    to        posterior    mode prior_string                prior #>    <chr> <int> <int>       <rvar[1d]>   <dbl> <chr>                  <rvar[1d]> #>  1 q         1     2  0.4050 ± 0.0171 0.404   0.14 (0.0027, 6.8)   0.96 ± 4.4   #>  2 q         1     5  0.0185 ± 0.0030 0.0182  0.14 (0.0027, 6.8)   0.96 ± 4.4   #>  3 q         2     1  0.2018 ± 0.0154 0.201   0.14 (0.0027, 6.8)   0.96 ± 4.4   #>  4 q         2     3  0.3457 ± 0.0181 0.345   0.14 (0.0027, 6.8)   0.96 ± 4.4   #>  5 q         2     5  0.0074 ± 0.0029 0.00692 0.14 (0.0027, 6.8)   0.96 ± 4.4   #>  6 q         3     2  0.3226 ± 0.0232 0.321   0.14 (0.0027, 6.8)   0.96 ± 4.4   #>  7 q         3     4  0.1260 ± 0.0106 0.125   0.14 (0.0027, 6.8)   0.96 ± 4.4   #>  8 q         3     5  0.0059 ± 0.0029 0.00525 0.14 (0.0027, 6.8)   0.96 ± 4.4   #>  9 q         4     3  0.2667 ± 0.0311 0.265   0.14 (0.0027, 6.8)   0.96 ± 4.4   #> 10 q         4     5  0.0182 ± 0.0071 0.0171  0.14 (0.0027, 6.8)   0.96 ± 4.4   #> 11 mst       1    NA  2.3653 ± 0.0970 2.37    3.7 (0.073, 186)    26.11 ± 118.8 #> 12 mst       2    NA  1.8052 ± 0.0761 1.81    2.5 (0.049, 124)    17.41 ± 79.2  #> 13 mst       3    NA  2.2074 ± 0.1250 2.21    2.5 (0.049, 124)    17.41 ± 79.2  #> 14 mst       4    NA  3.5532 ± 0.3949 3.55    3.7 (0.073, 186)    26.11 ± 118.8 summary(mbmod, pars=\"time\")  #> # A tibble: 10 × 7 #>    name   from    to       posterior   mode prior_string              prior #>    <chr> <int> <int>      <rvar[1d]>  <dbl> <chr>                <rvar[1d]> #>  1 time      1     2    2.5 ± 0.10     2.47 7.39 (0.1468, 371.9)   52 ± 238 #>  2 time      1     5   55.6 ± 8.87    54.8  7.39 (0.1468, 371.9)   52 ± 238 #>  3 time      2     1    5.0 ± 0.38     4.97 7.39 (0.1468, 371.9)   52 ± 238 #>  4 time      2     3    2.9 ± 0.15     2.90 7.39 (0.1468, 371.9)   52 ± 238 #>  5 time      2     5  155.0 ± 59.08  144.   7.39 (0.1468, 371.9)   52 ± 238 #>  6 time      3     2    3.1 ± 0.22     3.11 7.39 (0.1468, 371.9)   52 ± 238 #>  7 time      3     4    8.0 ± 0.67     7.97 7.39 (0.1468, 371.9)   52 ± 238 #>  8 time      3     5  213.3 ± 105.62 190.   7.39 (0.1468, 371.9)   52 ± 238 #>  9 time      4     3    3.8 ± 0.44     3.78 7.39 (0.1468, 371.9)   52 ± 238 #> 10 time      4     5   63.4 ± 25.13   58.5  7.39 (0.1468, 371.9)   52 ± 238 set.seed(1) mbmodc <- msmbayes(data=elsa1000, state=\"state\", time=\"agey\", subject=\"idauniq\",                    Q=Q5, deathexact=TRUE,                    covariates =  ~ gender*y5010 + raeducl,                    priors = c(logq_priors, loghr_priors), # init = list(ini),                    fit_method=\"optimize\") if (save_files) saveRDS(mbmodc, file=file.path(wd, \"mbmodc.rds\")) msmmod <- msm(state ~ agey, subject=idauniq, data=elsa1000,                qmatrix=Q5, deathexact=TRUE, gen.inits=TRUE,               covariates =  ~ gender*y5010 + raeducl,                control=list(fnscale=4000,maxit=10000)) hazard.msm(msmmod) #> $genderwoman #>                          HR            L            U #> State 1 - State 2 0.9603818 7.090881e-01 1.300731e+00 #> State 1 - State 5 0.6490433 2.223327e-01 1.894715e+00 #> State 2 - State 1 1.2967242 6.669284e-01 2.521251e+00 #> State 2 - State 3 1.1585799 7.733754e-01 1.735648e+00 #> State 2 - State 5 2.8954462 1.504238e-01 5.573327e+01 #> State 3 - State 2 1.4126210 7.502159e-01 2.659898e+00 #> State 3 - State 4 1.6064021 7.470389e-01 3.454342e+00 #> State 3 - State 5 0.9840856 8.375991e-08 1.156191e+07 #> State 4 - State 3 1.0412543 3.585527e-01 3.023852e+00 #> State 4 - State 5 2.0375952 1.486375e-01 2.793235e+01 #>  #> $y5010 #>                          HR         L         U #> State 1 - State 2 0.9919275 0.8704663  1.130337 #> State 1 - State 5 0.9523135 0.6099833  1.486764 #> State 2 - State 1 0.9481615 0.7189083  1.250521 #> State 2 - State 3 1.1828684 0.9962667  1.404421 #> State 2 - State 5 1.2446084 0.4689087  3.303522 #> State 3 - State 2 1.2617222 0.9840197  1.617796 #> State 3 - State 4 0.8786238 0.6470422  1.193090 #> State 3 - State 5 3.3322781 0.2204045 50.380452 #> State 4 - State 3 0.7419514 0.4914210  1.120204 #> State 4 - State 5 0.6435016 0.2044546  2.025361 #>  #> $raeducluppersec #>                          HR          L           U #> State 1 - State 2 1.0349711 0.85487983    1.253001 #> State 1 - State 5 1.3954669 0.65206990    2.986379 #> State 2 - State 1 1.0707526 0.76599105    1.496768 #> State 2 - State 3 1.1060680 0.86665113    1.411625 #> State 2 - State 5 5.4246401 0.01726260 1704.651578 #> State 3 - State 2 0.9513119 0.67022597    1.350282 #> State 3 - State 4 1.2107354 0.79214271    1.850525 #> State 3 - State 5 1.2663330 0.01028868  155.860486 #> State 4 - State 3 0.9649467 0.53140143    1.752201 #> State 4 - State 5 0.6182428 0.13738921    2.782053 #>  #> $raeducltertiary #>                            HR            L            U #> State 1 - State 2 0.997141002 7.811159e-01    1.2729100 #> State 1 - State 5 1.247979897 4.314819e-01    3.6095457 #> State 2 - State 1 0.885078025 5.649087e-01    1.3867076 #> State 2 - State 3 1.033308440 7.602864e-01    1.4043738 #> State 2 - State 5 6.590408548 1.625101e-02 2672.6630883 #> State 3 - State 2 0.968283667 6.268514e-01    1.4956867 #> State 3 - State 4 0.856040385 5.069047e-01    1.4456467 #> State 3 - State 5 4.206708439 6.924609e-02  255.5580385 #> State 4 - State 3 0.444456031 2.056360e-01    0.9606353 #> State 4 - State 5 0.009210946 1.001644e-06   84.7022825 #>  #> $`genderwoman:y5010` #>                          HR           L          U #> State 1 - State 2 0.9789217 0.824762202   1.161896 #> State 1 - State 5 1.2412095 0.674632911   2.283614 #> State 2 - State 1 1.0057234 0.713281660   1.418065 #> State 2 - State 3 0.8666753 0.693145917   1.083648 #> State 2 - State 5 0.5585449 0.081260720   3.839154 #> State 3 - State 2 0.8622604 0.633350876   1.173904 #> State 3 - State 4 0.8567347 0.584937871   1.254825 #> State 3 - State 5 0.8518272 0.005600282 129.566616 #> State 4 - State 3 0.8087406 0.481275351   1.359017 #> State 4 - State 5 0.5060219 0.103138691   2.482659"},{"path":"https://chjackson.github.io/msmbayes/articles/cognitive.html","id":"semi-markov-models-in-msmbayes","dir":"Articles","previous_headings":"","what":"Semi-Markov models in msmbayes","title":"Code for using the msmbayes package for semi-Markov modelling in an application to cognitive function","text":"Gamma phase-type sojourn distribution, fitted using optimization find posterior mode, followed Laplace approximation. may take least 20 minutes run. Weibull phase-type sojourn distribution.","code":"set.seed(1) mbmodscg <- msmbayes(data=elsa1000, state=\"state\", time=\"agey\", subject=\"idauniq\",                     Q=Q5, deathexact=TRUE,                      covariates =   list(scale(1) ~ gender*y5010 + raeducl,                                         scale(2) ~ gender*y5010 + raeducl,                                         scale(3) ~ gender*y5010 + raeducl,                                         scale(4) ~ gender*y5010 + raeducl,                                         rrnext(1,5) ~ gender*y5010 + raeducl,                                         rrnext(2,3) ~ gender*y5010 + raeducl,                                         rrnext(2,5) ~ gender*y5010 + raeducl,                                         rrnext(3,4) ~ gender*y5010 + raeducl,                                         rrnext(3,5) ~ gender*y5010 + raeducl,                                         rrnext(4,5) ~ gender*y5010 + raeducl                     ),                     pastates = c(1,2,3,4), panphase = c(5,5,5,5), pafamily=\"gamma\",                     priors = smm_priors(\"gamma\"),                      fit_method=\"optimize\", verbose=TRUE                     ) if (save_files) saveRDS(mbmodscg, file=file.path(wd, \"mbmodscg.rds\")) set.seed(21)  mbmodscw <- msmbayes(data=elsa1000, state=\"state\", time=\"agey\", subject=\"idauniq\",                     Q=Q5, deathexact=TRUE,                      covariates =   list(scale(1) ~ gender*y5010 + raeducl,                                         scale(2) ~ gender*y5010 + raeducl,                                         scale(3) ~ gender*y5010 + raeducl,                                         scale(4) ~ gender*y5010 + raeducl,                                         rrnext(1,5) ~ gender*y5010 + raeducl,                                         rrnext(2,3) ~ gender*y5010 + raeducl,                                         rrnext(2,5) ~ gender*y5010 + raeducl,                                         rrnext(3,4) ~ gender*y5010 + raeducl,                                         rrnext(3,5) ~ gender*y5010 + raeducl,                                         rrnext(4,5) ~ gender*y5010 + raeducl                     ),                     pastates = c(1,2,3,4), panphase = c(5,5,5,5), pafamily=\"weibull\",                     priors = smm_priors(\"weibull\"),                      fit_method=\"optimize\", verbose=TRUE                     )  if (save_files) saveRDS(mbmodscw, file=file.path(wd, \"mbmodscw.rds\"))  bayesplot::mcmc_trace(mbmodscw |> select(matches(\"shape\"))) #> Warning: Dropping 'draws_df' class as required metadata was removed."},{"path":"https://chjackson.github.io/msmbayes/articles/cognitive.html","id":"likelihood-based-model-comparison","dir":"Articles","previous_headings":"Semi-Markov models in msmbayes","what":"Likelihood-based model comparison","title":"Code for using the msmbayes package for semi-Markov modelling in an application to cognitive function","text":"","code":"sprintf(\"The maximised log posterior is %s for the Markov model, %s for the Gamma semi-Markov model and %s for the Weibull semi-Markov model.\",         round(loglik(mbmodc)$mode[3]),          round(loglik(mbmodscg)$mode[3]), round(loglik(mbmodscw)$mode[3])) #> [1] \"The maximised log posterior is -4941 for the Markov model, -4986 for the Gamma semi-Markov model and -4959 for the Weibull semi-Markov model.\""},{"path":"https://chjackson.github.io/msmbayes/articles/cognitive.html","id":"table-of-basic-parameter-estimates","dir":"Articles","previous_headings":"Semi-Markov models in msmbayes","what":"Table of basic parameter estimates","title":"Code for using the msmbayes package for semi-Markov modelling in an application to cognitive function","text":"Sojourn times, next-state probabilities shape parameters, LaTeX form include paper.","code":"trans_to_ttype <- function(from, to){    ifelse(to==5, \"Death\", ifelse(from < to, \"Progression\", \"Recovery\")) }  pn_markov <- pnext(mbmodc) |> select(from, to, posterior) |>    mutate(ttype = trans_to_ttype(from, to)) |>   pivot_wider(id_cols=c(\"from\"), values_from=\"posterior\", names_from=\"ttype\") |>    select(state=from, `Progression`,`Recovery`,`Death`) |>    mutate(mst = mean_sojourn(mbmodc)$posterior,          model = \"Markov\",          shape = posterior::rvar(NA)) |>    relocate(model, state, mst)  pn_semi <- pnext(mbmodscw) |> select(from, to, posterior) |>    mutate(ttype = trans_to_ttype(from, to)) |>   pivot_wider(id_cols=c(\"from\"), values_from=\"posterior\", names_from=\"ttype\") |>    select(state=from, `Progression`,`Recovery`,`Death`) |>    mutate(mst = mean_sojourn(mbmodscw)$posterior,          model = \"Semi-Markov\",          shape = summary(mbmodscw, pars=\"shape\")$posterior) |>    relocate(model, state, mst)  rvar_to_ci <- function(x){   summ <- summary(x, ~quantile(.x, c(0.025, 0.5, 0.975), na.rm=TRUE))    summf <- summ |>     mutate(across(all_of(c(\"50%\",\"2.5%\",\"97.5%\")), ~format(round(.x,2),nsmall=2)))   ifelse(is.na(summ[[\"50%\"]]), \"\",   sprintf(\"%s \\\\newline {\\\\footnotesize (%s, %s)}\", summf[[\"50%\"]], summf[[\"2.5%\"]], summf[[\"97.5%\"]])) |> latex() } tab <- rbind(pn_markov, pn_semi) |>    select(-model) |>    mutate(across(mst:shape, rvar_to_ci))  write.table(tab, sep=\"  &  \", eol=\"\\\\\\\\\\n\", row.names = FALSE, quote=FALSE) #> state  &  mst  &  Progression  &  Recovery  &  Death  &  shape\\\\ #> 1  &  3.04 \\newline {\\footnotesize (2.39, 3.87)}  &  0.98 \\newline {\\footnotesize (0.97, 0.99)}  &    &  0.02 \\newline {\\footnotesize (0.01, 0.03)}  &  \\\\ #> 2  &  2.47 \\newline {\\footnotesize (1.84, 3.31)}  &  0.66 \\newline {\\footnotesize (0.51, 0.78)}  &  0.33 \\newline {\\footnotesize (0.21, 0.49)}  &  0.00 \\newline {\\footnotesize (0.00, 0.01)}  &  \\\\ #> 3  &  2.99 \\newline {\\footnotesize (1.91, 4.54)}  &  0.35 \\newline {\\footnotesize (0.19, 0.56)}  &  0.64 \\newline {\\footnotesize (0.43, 0.81)}  &  0.01 \\newline {\\footnotesize (0.00, 0.01)}  &  \\\\ #> 4  &  1.94 \\newline {\\footnotesize (0.76, 4.73)}  &    &  0.99 \\newline {\\footnotesize (0.98, 1.00)}  &  0.01 \\newline {\\footnotesize (0.00, 0.02)}  &  \\\\ #> 1  &  2.46 \\newline {\\footnotesize (1.94, 3.22)}  &  0.96 \\newline {\\footnotesize (0.91, 0.98)}  &    &  0.04 \\newline {\\footnotesize (0.02, 0.09)}  &  0.96 \\newline {\\footnotesize (0.88, 1.04)}\\\\ #> 2  &  2.45 \\newline {\\footnotesize (1.80, 3.31)}  &  0.59 \\newline {\\footnotesize (0.45, 0.73)}  &  0.39 \\newline {\\footnotesize (0.26, 0.54)}  &  0.01 \\newline {\\footnotesize (0.00, 0.04)}  &  0.99 \\newline {\\footnotesize (0.89, 1.07)}\\\\ #> 3  &  3.52 \\newline {\\footnotesize (2.21, 5.57)}  &  0.34 \\newline {\\footnotesize (0.19, 0.54)}  &  0.63 \\newline {\\footnotesize (0.44, 0.79)}  &  0.01 \\newline {\\footnotesize (0.00, 0.09)}  &  0.94 \\newline {\\footnotesize (0.81, 1.06)}\\\\ #> 4  &  2.53 \\newline {\\footnotesize (1.19, 5.30)}  &    &  0.92 \\newline {\\footnotesize (0.63, 0.99)}  &  0.08 \\newline {\\footnotesize (0.01, 0.37)}  &  1.12 \\newline {\\footnotesize (0.84, 1.34)}\\\\"},{"path":"https://chjackson.github.io/msmbayes/articles/cognitive.html","id":"covariate-effects","dir":"Articles","previous_headings":"Semi-Markov models in msmbayes","what":"Covariate effects","title":"Code for using the msmbayes package for semi-Markov modelling in an application to cognitive function","text":"Form tidy data frame estimates CIs plotted. Markov model hazard ratios, semi-Markov model time acceleration factors relative risks particular next state. Plot Markov semi-Markov separately.","code":"hrs <- summary(mbmodc, pars=\"hr\") |>    mutate(ttype = trans_to_ttype(from, to),          model = \"Markov\") |>   select(model, from, name, ttype, posterior, prior=prior) tafs <- summary(mbmodscw, pars=\"taf\") |>    mutate(model=\"Semi-Markov\", ttype = \"Sojourn\") |>   select(model, from, name, ttype, posterior, prior)  trans_to_ttype_rr <- function(from, to){    ttype <- ifelse(to==5, \"Death\", ifelse(from < to, \"Progression\", \"Recovery\"))   base <- ifelse(from == 1, \"Progression\", \"Recovery\")   sprintf(\"%s/%s\",ttype,base) } rrnexts <- summary(mbmodscw,pars = \"rrnext\") |>    mutate(ttype = trans_to_ttype_rr(from, to),          model = \"Semi-Markov\") |>   select(model, from, name, ttype, posterior, prior=prior)  cov_codes <- c(\"Female (for age 50)\"=\"genderwoman\",                \"Age: 10 years (for female)\"=\"ageeff_woman\",                \"Education: tertiary\"=\"raeducltertiary\",                \"Education: upper secondary\"=\"raeducluppersec\",                \"Age: 10 years (for male)\"=\"y5010\")    covres <- rbind(hrs, tafs, rrnexts) |>    rename(Posterior=posterior, Prior=prior) |>   pivot_longer(c(\"Posterior\", \"Prior\"), names_to=\"dist\", values_to=\"value\") |>   mutate(name = gsub(\".+\\\\((.+)\\\\)\",\"\\\\1\", name))   inter <- covres |> filter(name==\"genderwoman:y5010\") |> select(-name) |>   left_join(covres |> filter(name==\"y5010\") |> rename(ageeff=value) |> select(-name),             by = join_by(model, from, ttype, dist)) |>   mutate(value = value * ageeff,          name = \"ageeff_woman\") |>    select(model, from, name, ttype, dist, value)  covres <- covres |>   filter(name != \"genderwoman:y5010\") |>    rbind(inter) |>    mutate(value = summary(value, ~quantile(.x, c(0.025, 0.5, 0.975)))) |>   mutate(lower = value$`2.5%`, median = value$`50%`, upper = value$`97.5%`) |>   select(model, from, name, ttype, dist, lower, median, upper) |>   mutate(name = fct_relevel(name, \"y5010\", \"ageeff_woman\",                             \"genderwoman\",\"raeducluppersec\",                             \"raeducltertiary\"),                             name = fct_recode(name, !!!cov_codes)) p <- ggplot(covres |> filter(model==\"Markov\", dist==\"Posterior\"),         aes(y=median, x=from)) +    coord_flip(ylim=c(0,4)) +    facet_grid(rows=vars(name), cols=vars(ttype),               labeller = label_wrap_gen(width=15)) +    geom_hline(yintercept=1, col=\"gray70\") +   geom_point(position=position_dodge(width=0.4)) +   geom_linerange(aes(ymin=lower, ymax=upper),                   position=position_dodge(width=0.4),                  show.legend = FALSE) +    theme(strip.text.y = element_text(angle = 0)) +   ylab(\"Hazard ratio\") + xlab(\"From state\") p if (save_files){   pdf(\"../paper/figures/elsa_hrs.pdf\",width=5,height=4)   p   dev.off() } p <- ggplot(covres |> filter(model==\"Semi-Markov\", dist==\"Posterior\") |>           mutate(ttype = fct_relevel(ttype, \"Sojourn\", \"Death/Progression\")),         aes(y=median, x=from, lty=dist, col=dist)) +    coord_flip(ylim=c(0,5)) +    facet_grid(rows=vars(name), cols=vars(ttype), scales=\"free_y\",               labeller = label_wrap_gen(width=15)) +    geom_hline(yintercept=1, col=\"gray70\") +   geom_point(position=position_dodge(width=0.4)) +   geom_linerange(aes(ymin=lower, ymax=upper),                   position=position_dodge(width=0.4),                  show.legend = FALSE) +    scale_color_manual(breaks=c(\"Posterior\",\"Prior\"),values=c(\"black\",\"blue\")) +   guides(col = guide_legend(position = \"inside\", title=\"\")) +   theme(legend.position.inside = c(1, 0),         legend.justification = c(1, 0),         legend.background = element_rect(fill=alpha('white', 0.4)),         strip.text.y = element_text(angle = 0)         ) +   xlab(\"From state\") + ylab(\"Multiplicative effect\")  if (save_files){   pdf(\"../paper/figures/elsa_smm.pdf\",width=5,height=4)   p   dev.off() }"},{"path":"https://chjackson.github.io/msmbayes/articles/cognitive.html","id":"standardised-outputs-total-time-spent-in-states","dir":"Articles","previous_headings":"","what":"Standardised outputs: total time spent in states","title":"Code for using the msmbayes package for semi-Markov modelling in an application to cognitive function","text":"age, averaging gender education.. Age model continuous, standardisation need group population, obtain model outputs age group midpoints: 55, 65, 75, 85, 95 assume homogeneous within age groups. Note time dependent covariate, forecast short prediction interval, 10 years. gender Results comparisons three panel figure","code":"source(\"stdpop.R\")  tls_educ <- lapply(nd_educ, function(x){   totlos(mbmodscg, t=10, new_data=standardise_to(x)) }) tlm_educ <- lapply(nd_educ, function(x){   totlos(mbmodc, t=10, new_data=standardise_to(x)) }) elevs <- c(\"less\",\"uppersec\",\"tertiary\") tles <- do.call(\"rbind\",tls_educ) |>    mutate(educ = rep(factor(elevs,levels=elevs),each=5),          state = factor(state),) |>   filter(state %in% 1:2) |>   group_by(educ) |>    summarise(posterior = rvar_sum(posterior)) |>   mutate(model = \"semi-Markov\",          tdiff = posterior - posterior[1]) tlem <- do.call(\"rbind\",tlm_educ) |>    mutate(educ = rep(factor(elevs, levels=elevs),each=5),          state = factor(state)) |>   filter(state %in% 1:2) |>   group_by(educ) |>    summarise(posterior = rvar_sum(posterior)) |>   mutate(model = \"Markov\",          tdiff = posterior - posterior[1]) tle <- rbind(tles, tlem)  if (save_files) saveRDS(tle, file=file.path(wd, \"tle.rds\")) tls_age <- lapply(nd_age, function(x){   totlos(mbmodscg, t=10, new_data=standardise_to(x)) }) tlm_age <- lapply(nd_age, function(x){   totlos(mbmodc, t=10, new_data=standardise_to(x)) }) alevs <- c(\"50-60\",\"60-70\",\"70-80\",\"80-90\",\"90-100\") tles <- do.call(\"rbind\",tls_age) |>    mutate(age = rep(factor(alevs,levels=alevs),each=5),          state = factor(state),) |>   filter(state %in% 1:2) |>   group_by(age) |>    summarise(posterior = rvar_sum(posterior)) |>   mutate(model = \"semi-Markov\",          tdiff = posterior - posterior[1]) tlem <- do.call(\"rbind\",tlm_age) |>    mutate(age = rep(factor(alevs, levels=alevs),each=5),          state = factor(state)) |>   filter(state %in% 1:2) |>   group_by(age) |>    summarise(posterior = rvar_sum(posterior)) |>   mutate(model = \"Markov\",          tdiff=posterior - posterior[1]) tla <- rbind(tles, tlem) if (save_files) saveRDS(tla, file=file.path(wd, \"tla.rds\")) tls_gender <- lapply(nd_gender, function(x){   totlos(mbmodscw, t=10, new_data=standardise_to(x)) }) tlm_gender <- lapply(nd_gender, function(x){   totlos(mbmodc, t=10, new_data=standardise_to(x)) }) alevs <- sapply(nd_gender, function(x)x$gender[1]) tles <- do.call(\"rbind\",tls_gender) |>    mutate(gender = rep(factor(alevs,levels=alevs),each=5),          state = factor(state)) |>   filter(state %in% 1:2) |>   group_by(gender) |>    summarise(posterior = rvar_sum(posterior)) |>   mutate(model = \"semi-Markov\",          tdiff=posterior - posterior[1]) tlem <- do.call(\"rbind\",tlm_gender) |>    mutate(gender = rep(factor(alevs, levels=alevs),each=5),          state = factor(state)) |>   filter(state %in% 1:2) |>   group_by(gender) |>    summarise(posterior = rvar_sum(posterior)) |>   mutate(model = \"Markov\",          tdiff=posterior - posterior[1]) tlg <- rbind(tles, tlem) if (save_files) saveRDS(tlg, file=file.path(wd, \"tlg.rds\")) tlg #> # A tibble: 4 × 4 #>   gender   posterior model               tdiff #>   <fct>   <rvar[1d]> <chr>          <rvar[1d]> #> 1 woman   6.8 ± 0.29 semi-Markov   0.00 ± 0.00 #> 2 man     6.5 ± 0.30 semi-Markov  -0.35 ± 0.29 #> 3 woman   6.9 ± 0.31 Markov        0.00 ± 0.00 #> 4 man     6.5 ± 0.44 Markov       -0.44 ± 0.30 tla <- tla |>    mutate(cov=\"Age\",           age = fct_recode(age, \"55\"=\"50-60\", \"65\"=\"60-70\",                            \"75\"=\"70-80\", \"85\"=\"80-90\",\"95\"=\"90-100\"),          model=fct_recode(model, \"Semi-Markov\"=\"semi-Markov\"))  tlg <- tlg |>    mutate(cov=\"Sex\",          model=fct_recode(model, \"Semi-Markov\"=\"semi-Markov\"),          gender = fct_recode(gender, \"Male\"=\"man\", \"Female\"=\"woman\")) tle <- tle |>    mutate(cov=\"Education\",          model=fct_recode(model, \"Semi-Markov\"=\"semi-Markov\"),          educ = fct_recode(educ, \"Less\"=\"less\",                             \"Upper secondary\"=\"uppersec\", \"Tertiary\"=\"tertiary\"))  # psize <- 24 # for interactive use, for paper  psize <- 16 # for automated use, for website  ga <- tla |>   ggplot(aes(y=age, col=age, lty=model, xdist=posterior)) +    ggdist::stat_pointinterval(position=ggstance::position_dodgev(height=0.5),                              interval_size_range = c(1,2), fatten_point=3) +    guides(color=\"none\",           lty = guide_legend(position=\"inside\", title=\"\", reverse=TRUE)) +   theme_minimal() +   theme(legend.position.inside = c(1, 1.2),         legend.justification = c(1, 1),         legend.background = element_rect(fill=alpha('white', 0.4),                                           color=0),         text = element_text(size=psize)   ) + xlab(\"Years\") + ylab(\"\") + ggtitle(\"By age\") ga gg <- tlg |>   ggplot(aes(y=gender, col=gender, lty=model, xdist=posterior)) +    ggdist::stat_pointinterval(position=ggstance::position_dodgev(height=0.4),                              interval_size_range = c(1, 2), fatten_point=3) +   guides(color=\"none\", lty=\"none\") +   theme_minimal() +   theme(text = element_text(size=psize)) +   xlab(\"Years\") + ylab(\"\") + ggtitle(\"By sex\") gg ge <- tle |>    ggplot(aes(y=educ, col=educ, lty=model, xdist=posterior)) +    ggdist::stat_pointinterval(position=ggstance::position_dodgev(height=0.4),                              interval_size_range = c(1, 2), fatten_point=3) +   guides(color=\"none\", lty=\"none\") +   theme_minimal() +   theme(text = element_text(size=psize)) +   xlab(\"Years\") + ylab(\"\") + ggtitle(\"By highest level of education\") ge p <- cowplot::plot_grid(ga, gg, ge, align=\"v\", ncol=1) p if (save_files){   pdf(\"elsa_totlos.pdf\")  ## png(\"elsa_totlos.png\", width=640, height=640, pointsize=24)  p   dev.off() }"},{"path":"https://chjackson.github.io/msmbayes/articles/examples.html","id":"sec-simdata","dir":"Articles","previous_headings":"","what":"Simulated infection testing data","title":"Examples of using msmbayes","text":"examples use simulated dataset designed mimic longitudinal study people repeatedly tested infection. assume two-state multi-state model, states “test positive” “test negative”.  data simulated continuous-time Markov model following transition intensity matrix. Expressed days months, respectively, , everyone starts infection, , mean time next infection 180 days (6 months) (mean sojourn time state 1) mean time infection 10 days (0.33 months) (mean sojourn time state 2) suppose 100 people tested every 28 days, assume test perfect indicator infection. final dataset stores state test time variable state. also simulate covariates, including sex age, state outcome statec depends covariates (see ). Note: age expressed units (years - 50)/10. Centering around typical value (50 years), scaling unit interest (10 years) help MCMC computation interpretation parameters. analyse dataset continuous-time multistate models, assume transitions states can happen time, just observation times. demonstration, fit models, pretend know state time test, don’t know true times infection recovery. typical style data msm package used — state known series arbitrary times. Note: msm msmbayes allow number states structure allowed transitions. includes models without “absorbing” states, death.","code":"library(msmbayes) Qtrue   <- rbind(c(-1/180, 1/180),                  c( 1/10, -1/10)) Qtruemo <- Qtrue*365/12 head(infsim) ##   subject days months state  sex       age10 statec statep statepc ## 1       1    0   0.00     1 male -0.31322691      1      1       1 ## 2       1   28   0.92     1 male  0.09182166      2      1       1 ## 3       1   56   1.84     1 male -0.41781431      1      1       1 ## 4       1   84   2.76     1 male  0.79764040      1      1       2 ## 5       1  112   3.68     1 male  0.16475389      2      1       2 ## 6       1  140   4.60     1 male -0.41023419      2      1       2"},{"path":"https://chjackson.github.io/msmbayes/articles/examples.html","id":"fitting-a-basic-markov-model-with-msmbayes","dir":"Articles","previous_headings":"","what":"Fitting a basic Markov model with msmbayes","title":"Examples of using msmbayes","text":"First demonstrate fitting basic two-state Markov multi-state model covariates. two unknown parameters: transition intensities 1-2 2-1. first argument msmbayes dataset, additional named arguments indicate names columns data contain state, time observation subject (individual) identifier. Note: unlike msm(), names variables data must quoted strings, “bare” variable names.","code":"Q <- rbind(c(0, 1),             c(1, 0)) draws <- msmbayes(data=infsim, state=\"state\", time=\"months\", subject=\"subject\",                   Q=Q) ## Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. ## Running the chains for more iterations may help. See ## https://mc-stan.org/misc/warnings.html#tail-ess"},{"path":"https://chjackson.github.io/msmbayes/articles/examples.html","id":"transition-structure","dir":"Articles","previous_headings":"Fitting a basic Markov model with msmbayes","what":"Transition structure","title":"Examples of using msmbayes","text":"argument Q msmbayes() square matrix indicates transition structure. format msm(): number rows (columns) indicates number states, 2. diagonal matrix ignored - specify diagonal doesn’t matter. -diagonal entries Q 1 indicate transitions allowed continuous time (, state 1 state 2, 2 1). -diagonal entries Q 0 indicate transitions allowed continuous time (, transitions allowed).","code":""},{"path":"https://chjackson.github.io/msmbayes/articles/examples.html","id":"sec-priors","dir":"Articles","previous_headings":"Fitting a basic Markov model with msmbayes","what":"Prior distributions for transition intensities","title":"Examples of using msmbayes","text":"parameters model, \\(q_{rs}\\), transition intensities continuous time. probabilities, rates. particular, probabilities transition interval time, discrete-time Markov model. See, e.g. msm course notes discussion distinction. interpret values, note \\(q_{rs}\\) rate transitions \\(s\\) observed population state \\(r\\). \\(1/q_{rs}\\) mean time next transition \\(s\\) observed population state \\(r\\), observe one person time (switching observing different person “competing event”, .e. transition state \\(s\\), happens). put simply perhaps, mean time state \\(r\\) \\(s\\) competing events. Bayesian model, prior distributions must defined parameters. msmbayes, normal priors used log transition intensities. mean standard deviation priors can set priors argument msmbayes function. list objects created function msmprior. objects can specified various alternative ways: Directly specifying mean standard deviation \\(\\log(q_{rs})\\), e.g.: Specifying prior quantiles \\(\\log(q_{rs})\\), \\(q_{rs}\\) \\(1/q_{rs}\\): can specify two median (.e. 50% quantile), lower 95% quantile upper 95% quantile quantities. Perhaps easiest interpret \\(1/q_{rs}\\), mean time event \\(s\\) people \\(r\\), supplied time(r,s). two quantiles provided parameter, allows unique normal distribution \\(\\log(q_{rs})\\) deduced. Different specifications can mixed different parameters, e.g.  Note: prior represents belief average population - distribution individual outcomes. , means expect average time state 1 state 2 (population) 10 months, average high 30. saying expect see individual times events 30. Accept defaults. parameters supplied priors argument, normal distribution mean -2 standard deviation 2 used \\(\\log(q_{rs})\\). implies 95% credible interval \\(\\exp(-6)=0.002\\) \\(\\exp(2)=7\\) event rate, equivalent mean time event 0.1 400. appropriately vague many applications, thoughtful choice recommended practice. Note prior depends time unit (e.g. days months). object priors supplied priors argument msmbayes, e.g. ","code":"priors <- list(   msmprior(\"logq(1,2)\", mean=-1, sd=5),   msmprior(\"logq(2,1)\", mean=-1, sd=5) ) priors <- list(   msmprior(\"q(2,1)\",    lower=0.001, upper=5),   msmprior(\"time(1,2)\", median=10, upper=30) ) msmbayes(..., priors=priors,...)"},{"path":"https://chjackson.github.io/msmbayes/articles/examples.html","id":"outputs-from-msmbayes","dir":"Articles","previous_headings":"Fitting a basic Markov model with msmbayes","what":"Outputs from msmbayes","title":"Examples of using msmbayes","text":"msmbayes() function uses Stan draw sample joint posterior distribution model parameters. default, MCMC used, faster approximations available (see ). msmbayes() returns object draws format defined posterior R package. format understood various Bayesian R packages. example, can use bayesplot package check MCMC chains converged, using trace-plots main parameters (log transition intensities, labelled logq), examine posterior distributions. Trace plots look horizontal fuzzy, like sequence independent draws distribution, chains converged ().   summary() function can used summarise basic parameter estimates (transition intensities ). gives summary posterior parameter (variable value), alongside summary prior parameter. Since transition intensities hard interpret isolation, mean sojourn times state included alongside, labelled mst. mean sojourn times estimated (within estimation error) close true values 6 0.33 months, expected. Set time=TRUE summarise \\(1/q_{rs}\\) (mean times event, ignoring competing events, described ) priors. competing risks, , equal mean sojourn times. set log=TRUE summarise \\(\\log(q_{rs})\\). summary output also gives “Rhat” convergence diagnostic, close 1.0 MCMC estimation converged (see explanation.) See also qdf() get just intensities, qmatrix() quantities matrix rather data frame format, mean_sojourn() get just mean sojourn times.","code":"library(bayesplot) mcmc_trace(draws, pars=c(\"logq[1]\",\"logq[2]\")) mcmc_dens(draws, pars=c(\"logq[1]\",\"logq[2]\")) summary(draws) ## # A tibble: 4 × 7 ##   name   from    to     posterior  rhat prior_string                prior ##   <chr> <int> <int>    <rvar[1d]> <dbl> <chr>                  <rvar[1d]> ## 1 q         1     2  0.17 ± 0.093  1.00 0.14 (0.0027, 6.7)   0.92 ± 3.5   ## 2 q         2     1  3.64 ± 2.072  1.00 0.14 (0.0027, 6.7)   0.92 ± 3.5   ## 3 mst       1    NA  6.70 ± 1.591  1.00 7.4 (0.15, 369)     50.07 ± 192.1 ## 4 mst       2    NA  0.30 ± 0.071  1.00 7.4 (0.15, 369)     50.07 ± 192.1 summary(draws, pars=\"time\") ## # A tibble: 2 × 7 ##   name   from    to    posterior  rhat prior_string              prior ##   <chr> <int> <int>   <rvar[1d]> <dbl> <chr>                <rvar[1d]> ## 1 time      1     2  6.7 ± 1.591  1.01 7.39 (0.1482, 368.5)   50 ± 192 ## 2 time      2     1  0.3 ± 0.071  1.00 7.39 (0.1482, 368.5)   50 ± 192"},{"path":"https://chjackson.github.io/msmbayes/articles/examples.html","id":"rvar","dir":"Articles","previous_headings":"Fitting a basic Markov model with msmbayes > Outputs from msmbayes","what":"rvar objects","title":"Examples of using msmbayes","text":"value column data frames returned functions type rvar. data type posterior package. designed contain random variables, uncertain quantities Bayesian models. Instead single value, stores sample quantity’s distribution. posterior distribution. printed posterior mean \\(\\pm\\) one standard deviation. extract specific posterior summary statistics, summary function can used data frames. arguments, default summary statistics posterior package used. user can specify functions, following call. See posterior package documentation examples.","code":"summary(mean_sojourn(draws), mean, median, ~quantile(.x, c(0.025, 0.975))) ##   state     mean    median      2.5%     97.5% ## 1     1 6.701312 6.7941498 2.9185970 9.6230400 ## 2     2 0.304368 0.3091742 0.1281332 0.4274684"},{"path":"https://chjackson.github.io/msmbayes/articles/examples.html","id":"maximum-likelihood-estimation","dir":"Articles","previous_headings":"Fitting a basic Markov model with msmbayes","what":"Maximum likelihood estimation","title":"Examples of using msmbayes","text":"msmbayes, don’t use Bayesian estimation fit models. can use maximum likelihood specifying priors=\"mle\". theory, give results msm package. Maximum likelihood estimation implemented msmbayes using Stan’s optimisation feature. Uniform priors assumed parameters (real-line scales), posterior mode equal maximum likelihood, (negative inverse) Hessian optimum equivalent covariance matrix. sample stored model object (fit_mle ) obtained sampling multivariate normal defined estimate covariance matrix. Summaries sample give intervals interpreted either frequentist confidence intervals (equivalent produced ci=\"normal\" option msm) Bayesian credible intervals given Laplace approximation posterior. model, identical maximum likelihood obtained either package (though note default optimisation algorithm used msm failed locate optimum, switched slightly robust, slower, Nelder-Mead method).","code":"library(msm) fit_mle <- msmbayes(data=infsim, state=\"state\", time=\"months\", subject=\"subject\",                     Q=Q, priors=\"mle\") fit_msm <- msm(state~months, subject=subject, qmatrix=Q, data=infsim, gen.inits=TRUE,                method=\"Nelder-Mead\") loglik(fit_mle) ##       name  posterior      mode ## 1   loglik -624 ± 1.1 -622.5233 ## 2 logprior    0 ± 0.0    0.0000 ## 3  logpost -624 ± 1.1 -622.5233 logLik(fit_msm) ## 'log Lik.' -622.5233 (df=2)"},{"path":"https://chjackson.github.io/msmbayes/articles/examples.html","id":"sec-covs","dir":"Articles","previous_headings":"","what":"Fitting a Markov model with covariates","title":"Examples of using msmbayes","text":"demonstrate fit Markov multi-state model covariates, data simulated model covariates. variable statec infsim data simulated continuous-time Markov model intensities \\(q_{rsi} = q_{rs}^{(0)} \\exp(\\beta_{rs}^{(male)} male_i + \\beta_{rs}^{(age)} age_i)\\), \\(\\) individual, \\(male_i\\) binary indicator whether male, \\(age_i\\) age. log hazard ratios effects covariates 1-2 transition \\((\\beta_{12}^{(male)}, \\beta_{12}^{(age)}) = (2,1)\\), 2-1 transition, \\((\\beta_{21}^{(male)}, \\beta_{21}^{(age)}) = (0,-1)\\). \\(q_{rs}^{(0)}\\) intensity “reference” baseline individual, defined 50 year old woman. values used . data infsim, age expressed units 10 years, centered around age 50. Centering around value interest helps interpretation intercept term \\(q_{rs}^{(0)}\\). Centering scaling covariates roughly unit scale also tends help computation, especially MCMC. include covariates msmbayes model, covariates argument included. following model supposes sex age predictors 1-2 2-1 transition intensities. Weakly informative priors defined covariate effects, specifying upper 95% credible limits 50 hazard ratios. syntax covariates argument list formulae. formula left-hand side looks like Q(r,s) indicating \\(r \\rightarrow s\\) transition intensity outcome, right-hand side giving predictors linear model formula. example, Q(2,1) ~ sex + age indicates \\(\\log(q_{21})\\) additive linear function age sex. Note: syntax slightly different msm, use named list formulae empty “outcome” left-hand sides, e.g. covariates = list(\"1-2\" = ~sex+age, \"2-1\" = ~ sex+age). fitting msmbayes model covariates, summary function model object returns estimates baseline intensities \\(q_{rs}^{(0)}\\) hazard ratios \\(exp(\\beta_{rs})\\), indicated covariate name transition. functions loghr hr can used summarise log hazard ratios hazard ratios isolation. estimates log hazard ratios close true values 2, 1, 0, -1 used simulate data, within estimation error. Note posterior distributions skewed, hence posterior mean hazard ratio different \\(\\exp()\\) posterior mean log hazard ratio. mode median may preferred point estimate.","code":"priors <- list(msmprior(\"hr(age10,1,2)\",median=1,upper=50),                msmprior(\"hr(age10,2,1)\",median=1,upper=50),                msmprior(\"hr(sexmale,1,2)\",median=1,upper=50),                msmprior(\"hr(sexmale,2,1)\",median=1,upper=50)) draws <- msmbayes(infsim, state=\"statec\", time=\"months\", subject=\"subject\",                   Q=Q,  covariates = list(Q(1,2)~sex+age10, Q(2,1)~sex+age10),                   fit_method=\"optimize\",                   priors = priors) summary(draws) ## # A tibble: 8 × 7 ##   name         from    to     posterior  mode prior_string                prior ##   <chr>       <dbl> <dbl>    <rvar[1d]> <dbl> <chr>                  <rvar[1d]> ## 1 q               1     2  0.21 ± 0.083 0.193 0.14 (0.0027, 6.8)   0.96 ± 4.4   ## 2 q               2     1  4.63 ± 1.905 4.33  0.14 (0.0027, 6.8)   0.96 ± 4.4   ## 3 mst             1    NA  5.64 ± 2.277 5.19  7.4 (0.15, 372)     52.22 ± 237.6 ## 4 mst             2    NA  0.25 ± 0.103 0.231 7.4 (0.15, 372)     52.22 ± 237.6 ## 5 hr(sexmale)     1     2  5.78 ± 2.310 5.34  1 (0.02, 49.9)       7.01 ± 31.8  ## 6 hr(age10)       1     2  3.21 ± 1.581 2.86  1 (0.02, 49.9)       7.01 ± 31.8  ## 7 hr(sexmale)     2     1  0.62 ± 0.268 0.568 1 (0.02, 49.9)       7.01 ± 31.8  ## 8 hr(age10)       2     1  0.38 ± 0.203 0.331 1 (0.02, 49.9)       7.01 ± 31.8 loghr(draws) ##   from to    name    posterior       mode ## 1    1  2 sexmale  1.68 ± 0.38  1.6749256 ## 2    1  2   age10  1.06 ± 0.46  1.0507800 ## 3    2  1 sexmale -0.56 ± 0.41 -0.5651281 ## 4    2  1   age10 -1.10 ± 0.50 -1.1055974"},{"path":"https://chjackson.github.io/msmbayes/articles/examples.html","id":"sec-priors-cov","dir":"Articles","previous_headings":"Fitting a Markov model with covariates","what":"Priors on covariate effects","title":"Examples of using msmbayes","text":"Normal priors used log hazard ratios \\(\\beta\\). can specified priors argument, , either specifying mean SD log hazard ratios, quantiles either hazard ratios log hazard ratios. Note specific covariate referred well transition. example, define priors effect age 1-2 2-1 transition rates respectively: factor covariates, appropriate factor level included name (done sexmale ). priors log hazard ratios specified priors, default normal prior mean 0 SD 10 used. careful prior choice. Bear mind likely size covariate effects choosing prior variance. Make sure prior represents evidence effect exists outside data.","code":"priors <- list(msmprior(\"loghr(age,1,2)\", mean=0,   sd=2),                msmprior(\"hr(age,2,1)\",    median=1, upper=5))"},{"path":"https://chjackson.github.io/msmbayes/articles/examples.html","id":"sec-comp","dir":"Articles","previous_headings":"Fitting a Markov model with covariates","what":"Notes on computation and tuning","title":"Examples of using msmbayes","text":"fit_method argument specifies algorithm used fit Bayesian model. \"sample\" default, uses standard Hamiltonian MCMC algorithm, via function rstan::sampling. Users can pass arguments functions msmbayes control sampling, e.g. initial values, parallel processing. fit_method=\"optimize\" uses function rstan::optimizing determines posterior mode exactly parameters real-line scales (e.g. log intensities, log hazard ratios), uses normal (Laplace) approximation distribution around mode. MCMC reveals skewed posterior distributions case, approximation ideal. However, much faster MCMC. Variational Bayes methods also available, via fit_method=\"vb\" calls rstan::vb, fit_method=\"pathfinder\" calls advanced Pathfinder method. Pathfinder method requires cmdstanr cmdstan installed manually. methods designed much faster MCMC approximate posterior slightly sophisticated way Laplace method. approximation poor, warning message referring “Pareto k value” printed model fitted. Initial values determined sampling prior tighter (0.2 times) prior standard deviation. error message referring initial value given (e.g. non-finite gradient, zero likelihood) model might work different random number seed (use set.seed seed reproducible). Consider whether priors vague, prior justified background information - make prior tighter just make converge. model fits data badly, sampling may bad method. Sampling can also bad covariate values different scales. Centering scaling usually sensible, mentioned.","code":""},{"path":"https://chjackson.github.io/msmbayes/articles/examples.html","id":"comparison-between-a-bayesian-and-a-frequentist-multistate-model","dir":"Articles","previous_headings":"Fitting a Markov model with covariates","what":"Comparison between a Bayesian and a frequentist multistate model","title":"Examples of using msmbayes","text":"Compare model fitted msm package maximum likelihood. Awkwardly, optimiser used msm needs tuned (fnscale option) find global optimum. estimates hazard ratios (note, log hazard ratios ) within estimation error true values, differ Bayesian model, due influence prior distributions. shows information data strong enough overcome influence prior, suggests priors thoughtfully chosen transparently communicated real example. One common problem multi-state models intermittently-observed data likelihood surface awkwardly shaped. using msm, can lead optimiser appearing “converge”, local optimum, “saddle point”, rather true global maximum likelihood. Symptoms problem may include large confidence intervals (happens fnscale set), warning related Hessian matrix non-invertible. seriously, may convergence wrong optimum obvious symptoms - can detected running optimiser many times different initial values. advantage Bayesian estimation methods used sampling, can see full shape posterior distribution. example, used MCMC (fit_method=\"sample\" rather fit_method=\"optimize\"), observe true (non-approximated) posterior skewed model parameters, may “multimodal”, .e. several peaks. Though much slower run.","code":"msm(statec~months, subject = subject, data = infsim, qmatrix = Q,      covariates = list(\"1-2\" = ~sex+age10, \"2-1\" = ~sex+age10),     control = list(fnscale=1000, maxit=10000)) ##  ## Call: ## msm(formula = statec ~ months, subject = subject, data = infsim,     qmatrix = Q, covariates = list(`1-2` = ~sex + age10, `2-1` = ~sex +         age10), control = list(fnscale = 1000, maxit = 10000)) ##  ## Maximum likelihood estimates ## Baselines are with covariates set to their means ##  ## Transition intensities with hazard ratios for each covariate ##                   Baseline                  sexmale                ## State 1 - State 1 -0.5114 (-1.2556,-0.2083)                        ## State 1 - State 2  0.5114 ( 0.2083, 1.2556) 4.5467 (1.5166,13.631) ## State 2 - State 1  3.7258 ( 1.5021, 9.2415) 0.4722 (0.1407, 1.585) ## State 2 - State 2 -3.7258 (-9.2415,-1.5021)                        ##                   age10                  ## State 1 - State 1                        ## State 1 - State 2 2.3576 (0.68633,8.099) ## State 2 - State 1 0.2687 (0.07144,1.011) ## State 2 - State 2                        ##  ## -2 * log-likelihood:  2625.65 exp(c(2,1,0,-1)) ## [1] 7.3890561 2.7182818 1.0000000 0.3678794"},{"path":"https://chjackson.github.io/msmbayes/articles/examples.html","id":"more-advanced-multi-state-models-in-msmbayes","dir":"Articles","previous_headings":"","what":"More advanced multi-state models in msmbayes","title":"Examples of using msmbayes","text":"See separate vignettes Misclassification multi-state models Semi-Markov models using phase-type approximations General phase-type semi-Markov models","code":""},{"path":"https://chjackson.github.io/msmbayes/articles/misclass.html","id":"multi-state-models-with-misclassification","dir":"Articles","previous_headings":"","what":"Multi-state models with misclassification","title":"Misclassification multi-state models in msmbayes","text":"Hidden Markov models can used account misclassification states multi-state model. fit misclassification multi-state models msmbayes, structure allowed misclassifications supplied E argument (“e” stands “emission”). matrix -diagonal entries: 1 true state [row number] can misclassified [column number] 0 true state [row number] misclassified [column number] diagonal entries E ignored (Q argument). following example discussed msm user guide (Section 2.14). model progression three states CAV (disease experienced heart transplant recipients), allow death states. True state 1 can misclassified 2, true state 2 can misclassified 1 3, true state 3 can misclassified 2. speed demo, use Stan’s \"optimize\" method, uses simple normal approximation posterior. MCMC probably sensible real application. function edf extracts misclassification (“emission”) probabilities tidy data frame form. identical non-Bayesian model fitted using msm(). Note: different model fitted msm manual, since “exact death times” supported msmbayes. Also note msm requires informative initial values non-zero intensities misclassification probabilities . hidden Markov models, msm smart enough determine good initial values automatically given transition structure. parameter estimates msm close msmbayes, differences explainable influence weak prior.","code":"library(msmbayes) library(msm) Qcav <- rbind(c(0, 1, 0, 1),               c(0, 0, 1, 1),                c(0, 0, 0, 1),               c(0, 0, 0, 0)) Ecav <- rbind(c(0, 1, 0, 0),               c(1, 0, 1, 0),               c(0, 1, 0, 0),               c(0, 0, 0, 0)) draws <- msmbayes(data=cav, state=\"state\", time=\"years\", subject=\"PTNUM\",                    Q=Qcav, E=Ecav, fit_method=\"optimize\") qmatrix(draws) ## rvar<4000>[4,4] mean ± sd: ##      [,1]             [,2]             [,3]             [,4]             ## [1,] -0.143 ± 0.0087   0.096 ± 0.0078   0.000 ± 0.0000   0.047 ± 0.0048  ## [2,]  0.000 ± 0.0000  -0.279 ± 0.0288   0.214 ± 0.0304   0.065 ± 0.0233  ## [3,]  0.000 ± 0.0000   0.000 ± 0.0000  -0.369 ± 0.0490   0.369 ± 0.0490  ## [4,]  0.000 ± 0.0000   0.000 ± 0.0000   0.000 ± 0.0000   0.000 ± 0.0000 edf(draws) ## # A tibble: 4 × 4 ##    from    to       posterior   mode ##   <int> <int>      <rvar[1d]>  <dbl> ## 1     1     2  0.014 ± 0.0041 0.0134 ## 2     2     1  0.228 ± 0.0367 0.226  ## 3     2     3  0.065 ± 0.0160 0.0629 ## 4     3     2  0.140 ± 0.0395 0.136 Qcav <- rbind(c(0, 0.148, 0, 0.0171), c(0, 0, 0.202, 0.081),                c(0, 0, 0, 0.126), c(0, 0, 0, 0)) Ecav <- rbind(c(0, 0.1, 0, 0), c(0.1, 0, 0.1, 0),               c(0, 0.1, 0, 0), c(0, 0, 0, 0)) cav.msm <- msm(state ~ years, subject=PTNUM, data=cav, qmatrix=Qcav, ematrix=Ecav) qmatrix.msm(cav.msm, ci=\"none\") ##            State 1     State 2    State 3    State 4 ## State 1 -0.1452746  0.09855669  0.0000000 0.04671790 ## State 2  0.0000000 -0.26352026  0.2013230 0.06219724 ## State 3  0.0000000  0.00000000 -0.3671024 0.36710242 ## State 4  0.0000000  0.00000000  0.0000000 0.00000000 ematrix.msm(cav.msm, ci=\"none\") ##           State 1     State 2    State 3 State 4 ## State 1 0.9919222 0.008077811 0.00000000       0 ## State 2 0.2379674 0.710858571 0.05117404       0 ## State 3 0.0000000 0.112813389 0.88718661       0 ## State 4 0.0000000 0.000000000 0.00000000       1"},{"path":"https://chjackson.github.io/msmbayes/articles/misclass.html","id":"specifiying-prior-distributions-for-misclassification-probabilities","dir":"Articles","previous_headings":"Multi-state models with misclassification","what":"Specifiying prior distributions for misclassification probabilities","title":"Misclassification multi-state models in msmbayes","text":"msmbayes, normal prior distributions assumed log odds misclassification. Denote misclassification error probability \\(e_{rs}\\), probability individual state \\(r\\) observed state \\(s\\). corresponding log odds misclassification \\(log(e_{rs} / e_{rr})\\), log odds misclassified state \\(s\\), relative misclassification. default normal(0,1) log odds parameters intended give roughly uniform distribution scale probabilities. specify mean SD normal priors hand, use msmprior follows, loe(r,s) indicating log-odds misclassication state \\(r\\) state \\(s\\). one potential misclassification \\(s\\) state \\(r\\), log odds misclassification just standard logit \\(e_{rs}\\). model, prior median 95% credible interval implied normal(-2, 0.2) prior can deduced taking inverse logit prior quantiles. prior fairly tight around misclassification probability 0.1, appears effect pulling away value estimated data. multiple misclassification possibilities per true state, multinomial logit transform needed. deduce prior beliefs probabilities implied particular prior mean SD, simple approach use simulation. particular true state \\(r\\), simulate normal priors potential observed states \\(s\\), use inverse multinomial logit transform deduce corresponding sample set \\(e_{rs}\\), satisfies \\(\\sum_s e_{rs} = 1\\).","code":"priors <- list(msmprior(\"loe(1,2)\", mean=-2, sd=0.2)) draws_prior <- msmbayes(data=cav, state=\"state\", time=\"years\", subject=\"PTNUM\",                    Q=Qcav, E=Ecav, fit_method=\"optimize\", priors=priors) edf(draws_prior) ## # A tibble: 4 × 4 ##    from    to       posterior   mode ##   <int> <int>      <rvar[1d]>  <dbl> ## 1     1     2  0.039 ± 0.0043 0.0383 ## 2     2     1  0.165 ± 0.0328 0.163  ## 3     2     3  0.080 ± 0.0192 0.0773 ## 4     3     2  0.135 ± 0.0383 0.130 plogis(qnorm(c(0.025, 0.5, 0.975), -2, 0.2)) ## [1] 0.08378533 0.11920292 0.16686547"},{"path":"https://chjackson.github.io/msmbayes/articles/misclass.html","id":"fixed-misclassification-probabilities","dir":"Articles","previous_headings":"Multi-state models with misclassification","what":"Fixed misclassification probabilities","title":"Misclassification multi-state models in msmbayes","text":"Misclassification error probabilities multi-state models intermittently-observed data often identifiable data. Typically, background information observation process needed. good evidence error proabilities, may sufficient fix constant values. msmbayes, can done Efix argument. matrix matching dimensions E, fixed error probabilities supplied appropriate places, zero elsewhere. following model fixes probability true state 1 misclassified 2 0.1. Using prior compromise fixing parameters attempting identify data. advantage Bayesian approach , long computational algorithm works, valid posterior. marginal posterior parameter prior, can deduce information data particular parameter. prior defensible, still useful model data.","code":"Efix <- rbind(c(0, 0.1, 0, 0), c(0, 0, 0, 0),               c(0, 0, 0, 0), c(0, 0, 0, 0)) draws_fix <- msmbayes(data=cav, state=\"state\", time=\"years\", subject=\"PTNUM\",                        Q=Qcav, E=Ecav, Efix=Efix, fit_method=\"optimize\")"},{"path":"https://chjackson.github.io/msmbayes/articles/nphase.html","id":"phase-type-semi-markov-models","dir":"Articles","previous_headings":"","what":"Phase-type semi-Markov models","title":"Advanced phase-type models in msmbayes","text":"multi-state model, suppose believe sojourn time particular state follows exponential distribution. example, infection model, suppose believe time spent “test positive” state exponential.  can relax assumption building “semi-Markov” model, sojourn time state follows complex distribution. One way replace state series two () latent hidden states, known “phases”. example, two phases:  phase-type model, allow progression one phase next, transitions later earlier phases (jumps non-adjacent phases, 3 phases ). Otherwise, allow transitions phase allowed original model (state 1, example) assume transitions phases follow exponential distributions. , assume Markov model latent state space. test-positive state sojourn distribution known “Coxian” phase-type distribution, instead exponential. Note: example hidden Markov model, though one specific form states observed correctly, states latent. Phase-type models convenient way build semi-Markov models intermittently-observed data, standard algorithms computing likelihood hidden Markov model.","code":""},{"path":"https://chjackson.github.io/msmbayes/articles/nphase.html","id":"fitting-phase-type-models-in-msmbayes","dir":"Articles","previous_headings":"","what":"Fitting phase-type models in msmbayes","title":"Advanced phase-type models in msmbayes","text":"assume phase-type sojourn distribution one states msmbayes model, set nphase argument. vector length equal number states, giving number phases per state. elements nphase 1 correspond states usual exponential sojourn distribution.","code":""},{"path":"https://chjackson.github.io/msmbayes/articles/nphase.html","id":"example-data-simulated-from-a-standard-markov-model","dir":"Articles","previous_headings":"Fitting phase-type models in msmbayes","what":"Example: data simulated from a standard Markov model","title":"Advanced phase-type models in msmbayes","text":"extend 2-state model simulated infection data give state 2 (infection) two-phase sojourn distribution. data originally simulated assuming exponential sojourn distribution state 2 (rate 3). situation, expect estimated rates transition phase identical. phased states labelled specially , e.g. first phase state 2 labelled \"2p1\". estimated transition rates two phases state 2 state 1 significantly different 2 - large uncertainty around estimated rates, since model -fitted data. Implementing model msm give extremely large confidence intervals around estimated rates.","code":"library(msmbayes) Q <- rbind(c(0, 1),             c(1, 0)) draws <- msmbayes(infsim2, state=\"state\", time=\"months\", subject=\"subject\",                   Q=Q, nphase=c(1,2), fit_method = \"optimize\") summary(draws) ## # A tibble: 6 × 7 ##   name  from  to        posterior   mode prior_string                prior ##   <chr> <chr> <chr>    <rvar[1d]>  <dbl> <chr>                  <rvar[1d]> ## 1 q     1     2p1    0.74 ± 0.35  0.674  0.14 (0.0027, 6.8)   0.96 ± 4.4   ## 2 q     2p1   1      4.37 ± 2.08  3.99   0.14 (0.0027, 6.8)   0.96 ± 4.4   ## 3 q     2p1   2p2    0.32 ± 1.96  0.0382 0.14 (0.0027, 6.8)   0.96 ± 4.4   ## 4 q     2p2   1      7.43 ± 54.31 0.758  0.14 (0.0027, 6.8)   0.96 ± 4.4   ## 5 mst   1     NA     1.65 ± 0.77  1.48   7.4 (0.147, 372)    52.22 ± 237.6 ## 6 mst   2     NA     0.30 ± 0.16  0.261  NA                     NA ± NA"},{"path":"https://chjackson.github.io/msmbayes/articles/nphase.html","id":"example-data-simulated-from-a-phase-type-model","dir":"Articles","previous_headings":"Fitting phase-type models in msmbayes","what":"Example: data simulated from a phase-type model","title":"Advanced phase-type models in msmbayes","text":"following code simulates dataset following phase-type model structure  transition intensity matrix (latent state space) given R object Qg. code uses ability function simmulti.msm() msm package simulate hidden Markov models. fit phase-type model simulated data using msmbayes msm. fast optimization-based method used approximate Bayesian posterior , speed demonstration, practice generally want cross-check results MCMC. posterior distributions models likely skewed multimodal shape represented well normal approximation.  msm needs tuning converge, particular use fnscale explicit initial values transition rate. practice, sensitivity analysis initial values needed confirm reported estimates global maximum likelihood estimates, rather one local maxima saddle points. Reassuringly, Bayesian frequentist methods give similar estimates transition intensities, agree (within estimation error) values used simulation. mean sojourn times states phase-type model can either calculated observable state space (states=\"obs\", default), latent state space (states=\"phase\"). practical experience using general phase-type models intermittently-observed multi-state data needed. particular: specify substantive prior information. examples , default log-normal(-2,2) priors used transition intensities. need better way choose based judgements interpretable quantities, e.g. mean sojourn time phased state. Limited experience suggests Bayesian method likely msm produce plausible result without need tuning. However, can sampling algorithms always relied upon? build interpret models covariates intensities. Covariates can placed intensities transitions phased state-space, tested practice. risk -fitting, strong constraints covariate effects expected necessary. However, intermittently-observed data, uncertain extent able identify detailed shape sojourn distribution data. Therefore using phase-type approximations shape-scale distributions expected useful approach semi-Markov modelling.","code":"Qg <- rbind(c(0, 0.18, 0.008, 0.012),             c(0, 0,    0.016, 0.024),             c(0, 0,    0,     0.2),             c(0, 0,    0,     0)) E <- rbind(c(1,0,0,0), # hidden Markov model misclassification matrix            c(1,0,0,0),            c(0,1,0,0),            c(0,0,1,0)) nsubj <- 10000; nobspt <- 10 set.seed(1) sim.df <- data.frame(subject = rep(1:nsubj, each=nobspt),                      time = seq(0, 100, length=nobspt)) library(msm) sim.df <- simmulti.msm(sim.df[,1:2], qmatrix=Qg, ematrix=E) Q3 <- rbind(c(0,1,1),c(0,0,1),c(0,0,0)) draws <- msmbayes(data=sim.df, state=\"obs\", time=\"time\", subject=\"subject\",                   Q=Q3, nphase=c(2,1,1), fit_method=\"optimize\") bayesplot::mcmc_dens(draws, pars=sprintf(\"logq[%s]\",1:6)) Q3 <- rbind(c(0,0.5,0.5),c(0,0,0.5),c(0,0,0)) s.msm <- msm(obs ~ time, subject=subject, data=sim.df, phase.states=1, qmatrix=Q3,              phase.inits=list(list(trans=0.05,  # seems to need these                                    exit=matrix(rep(0.05,4),nrow=2,byrow=TRUE))),              control = list(trace=1,REPORT=1,fnscale=50000,maxit=10000)) qmatrix(draws) ## rvar<4000>[4,4] mean ± sd: ##     1p1               1p2               2                 3                 ## 1p1 -0.0413 ± 0.0026   0.0210 ± 0.0057   0.0098 ± 0.0045   0.0105 ± 0.0037  ## 1p2  0.0000 ± 0.0000  -0.2587 ± 0.0911   0.0975 ± 0.0580   0.1611 ± 0.0528  ## 2    0.0000 ± 0.0000   0.0000 ± 0.0000  -0.2012 ± 0.0062   0.2012 ± 0.0062  ## 3    0.0000 ± 0.0000   0.0000 ± 0.0000   0.0000 ± 0.0000   0.0000 ± 0.0000 qmatrix.msm(s.msm,ci=\"none\") ##              State 1 [P1] State 1 [P2]     State 2    State 3 ## State 1 [P1]   -0.1986608   0.17706760  0.01059025 0.01100295 ## State 1 [P2]    0.0000000  -0.03930873  0.01593401 0.02337472 ## State 2         0.0000000   0.00000000 -0.20150880 0.20150880 ## State 3         0.0000000   0.00000000  0.00000000 0.00000000 Qg ##      [,1] [,2]  [,3]  [,4] ## [1,]    0 0.18 0.008 0.012 ## [2,]    0 0.00 0.016 0.024 ## [3,]    0 0.00 0.000 0.200 ## [4,]    0 0.00 0.000 0.000 mean_sojourn(draws) ## # A tibble: 2 × 3 ##   state  posterior  mode ##   <int> <rvar[1d]> <dbl> ## 1     1  26 ± 1.47 27.7  ## 2     2   5 ± 0.15  4.98 mean_sojourn(draws, states=\"phase\") ## # A tibble: 3 × 5 ##   state    posterior  mode stateobs statephase ##   <chr>   <rvar[1d]> <dbl>    <int>      <int> ## 1 1p1    24.3 ± 1.36 25.5         1          1 ## 2 1p2     4.3 ± 1.48  4.23        1          2 ## 3 2       5.0 ± 0.15  4.98        2          1"},{"path":"https://chjackson.github.io/msmbayes/articles/semimarkov.html","id":"phase-type-shape-scale-distributions","dir":"Articles","previous_headings":"","what":"Phase-type shape-scale distributions","title":"Semi-Markov models with msmbayes","text":"distribution two parameters: shape \\(\\) scale \\(b\\). probability distribution function defined \\[ F(x | , b) = F_p(x | \\boldsymbol{\\lambda}  = b \\mathbf{h}()) \\] \\(F_p(x | \\boldsymbol{\\lambda})\\) phase-type distribution (5 phases default) vector transition rates \\(\\boldsymbol{\\lambda}\\). shape scale mapped phase-type transition rates function \\(\\mathbf{h}()\\), determined first three moments phase-type distribution Weibull Gamma, wide range shape parameters. function pre-determined (using formulae Bobbio et al.) stored msmbayes package. default 5 phases used. process described formally forthcoming paper, now, code package source (phaseapprox branch). Covariates can applied scale parameter \\(b\\), linear model \\(\\log(b)\\), giving accelerated failure time model. Additional assumptions needed multiple alternative states \\(s\\) individual can transition immediately leaving state \\(r\\) phase-type approximation. msmbayes, transition governed constant “next state” probability \\(\\pi_{rs}\\), done Titman, 2014. assumes transition probability depend length time spent state \\(r\\) (supplementary material Titman, 2014 discusses flexible alternatives). Covariates can also applied \\(\\pi_{rs}\\) via multiplicative model odds transition.","code":""},{"path":"https://chjackson.github.io/msmbayes/articles/semimarkov.html","id":"implementation-in-msmbayes","dir":"Articles","previous_headings":"","what":"Implementation in msmbayes","title":"Semi-Markov models with msmbayes","text":"vignette gives demonstration using semi-Markov models phase-type shape-scale distributions msmbayes, based artificial dataset. Note: vignette used literally step--step recipe applied analysis. intended demonstrate range functions available package use . applied analysis take account research question, including thoughtful choice priors, computing appropriate outputs interest, model checking comparison.","code":""},{"path":"https://chjackson.github.io/msmbayes/articles/semimarkov.html","id":"specifying-a-basic-semi-markov-model","dir":"Articles","previous_headings":"Implementation in msmbayes","what":"Specifying a basic semi-Markov model","title":"Semi-Markov models with msmbayes","text":"specify states given semi-Markov model, specify pastates argument msmbayes, say pastates=2 state 2, pastates=c(1,2) states 1 2 semi-Markov. start , fit two-state infection model basic data infsim2 Examples vignette. now made semi-Markov model. compare model default Gamma approximation (states) model Weibull states (setting pafamily argument). one state given semi-Markov model, different distributions can used different states, e.g pastates=c(1,2), pafamily=c(\"weibull\",\"gamma\"). vignette, Bayesian models fitted using posterior mode optimisation Laplace approximation (MCMC safer - avoiding risk finding local optimum mis-estimating uncertainty - lot slower).","code":"library(msmbayes) Q <- rbind(c(0,1), c(1,0)) drawsg <- msmbayes(data=infsim2, state=\"state\", time=\"months\", subject=\"subject\",                    pastates=1:2,                    Q=Q, fit_method=\"optimize\") drawsw <- msmbayes(data=infsim2, state=\"state\", time=\"months\", subject=\"subject\",                    pastates=1:2, pafamily=\"weibull\",                    Q=Q, fit_method=\"optimize\")"},{"path":"https://chjackson.github.io/msmbayes/articles/semimarkov.html","id":"summarising-shape-parameters","dir":"Articles","previous_headings":"Implementation in msmbayes > Specifying a basic semi-Markov model","what":"Summarising shape parameters","title":"Semi-Markov models with msmbayes","text":"Shape parameters around 1.0 (exponential distribution) supported states 1 2, indicating evidence model semi-Markov. Indeed, data simulated exponential sojourn distributions. Note summary method msmbayes objects compares posterior distribution prior. prior summarised string displaying median 95% credible interval, rvar object containing full posterior sample. See main msmbayes vignette explanation rvar format used column “posterior” summarise .","code":"summary(drawsg, pars=\"shape\") ## # A tibble: 2 × 6 ##   name  from    posterior  mode prior_string          prior ##   <chr> <chr>  <rvar[1d]> <dbl> <chr>            <rvar[1d]> ## 1 shape 1      1.1 ± 0.38  1.02 1.0 (0.38, 2.66)  1.1 ± 0.6 ## 2 shape 2      1.0 ± 0.12  1.00 1.0 (0.38, 2.66)  1.1 ± 0.6 summary(drawsw, pars=\"shape\") ## # A tibble: 2 × 6 ##   name  from    posterior  mode prior_string          prior ##   <chr> <chr>  <rvar[1d]> <dbl> <chr>            <rvar[1d]> ## 1 shape 1      1.0 ± 0.18  1.04 1.0 (0.61, 1.63)   1 ± 0.26 ## 2 shape 2      1.1 ± 0.25  1.13 1.0 (0.61, 1.63)   1 ± 0.26"},{"path":"https://chjackson.github.io/msmbayes/articles/semimarkov.html","id":"choice-of-priors","dir":"Articles","previous_headings":"Implementation in msmbayes > Specifying a basic semi-Markov model","what":"Choice of priors","title":"Semi-Markov models with msmbayes","text":"fitting models, used default prior distributions. shape parameters, defaults chosen give flexible numerically stable model families based Weibull Gamma. example, default SD Weibull distribution chosen rule values shape parameter lower 0.6, phase-type approximation deviates Weibull becomes increasingly unstable shape decreases. real application, instead accepting defaults, better approach specifying priors draw random samples priors transform interpretable quantities (e.g. mean sojourn time) determine priors given choice implies interpretable quantities - starting defaults, modifying trial error necessary. detailed illustration specifying priors informed background information given appendix forthcoming paper.","code":""},{"path":"https://chjackson.github.io/msmbayes/articles/semimarkov.html","id":"comparing-the-gamma-and-weibull","dir":"Articles","previous_headings":"Implementation in msmbayes > Specifying a basic semi-Markov model","what":"Comparing the Gamma and Weibull","title":"Semi-Markov models with msmbayes","text":"can roughly compare fit models likelihoods. mode log posterior (.e. maximum penalised likelihood, priors considered penalty) essentially measures -sample predictive ability. multi-state model, ability predict individual’s next observation given current previous observations. Since two models compared number parameters, priors similar strength, improvement likelihood suggest better generalisability. case, maximum log posteriors two models similar. (Cross-validation better way comparing, unclear might set intermittently-observed multistate model)","code":"loglik(drawsg) ##       name     posterior        mode ## 1   loglik -143.7 ± 2.21 -142.235930 ## 2 logprior   -5.8 ± 0.77   -5.399696 ## 3  logpost -149.5 ± 2.29 -147.635626 loglik(drawsw) ##       name     posterior        mode ## 1   loglik -144.8 ± 9.2  -142.200516 ## 2 logprior   -4.7 ± 1.4    -3.886514 ## 3  logpost -149.5 ± 10.0 -146.087029"},{"path":"https://chjackson.github.io/msmbayes/articles/semimarkov.html","id":"sojourn-distribution","dir":"Articles","previous_headings":"Implementation in msmbayes > Specifying a basic semi-Markov model","what":"Sojourn distribution","title":"Semi-Markov models with msmbayes","text":"function soj_prob() computes probability staying given state, sequence times, fitted msmbayes() model. can used plot kind “survival curve” sojourn distribution state. case, little difference Weibull Gamma distributions, lot uncertainty.  mean sojourn distribution, mean time next transition entry state, given mean_sojourn(). mean phase-type approximation agree mean distribution based , since approximation designed match first three moments. verified Gamma distribution, mean defined shape x scale.","code":"library(ggplot2) library(dplyr) t0 <- seq(0, 6, by=0.2) spg <- soj_prob(drawsg,state=1,t=t0) |> mutate(Model=\"Gamma\") spw <- soj_prob(drawsw,state=1,t=t0) |> mutate(Model=\"Weibull\") sp <- rbind(spg, spw) summary(sp) |>    ggplot(aes(x=time, y=median, col=Model)) +    geom_ribbon(aes(ymin=q5, ymax=q95, fill=Model), alpha=0.2) +   geom_line() +    xlab(\"Months\") + ylab(\"Probability of remaining in state 1\") mean_sojourn(drawsg) ## # A tibble: 2 × 3 ##   state    posterior  mode ##   <int>   <rvar[1d]> <dbl> ## 1     1  1.61 ± 0.78 1.51  ## 2     2  0.29 ± 0.14 0.261 shape <- summary(drawsg, pars=\"shape\") scale <- summary(drawsg, pars=\"scale\") shape$posterior * scale$posterior ## rvar<4000>[2] mean ± sd: ## [1] 1.61 ± 0.78  0.29 ± 0.14"},{"path":"https://chjackson.github.io/msmbayes/articles/semimarkov.html","id":"specifying-a-semi-markov-model-with-covariates","dir":"Articles","previous_headings":"Implementation in msmbayes","what":"Specifying a semi-Markov model with covariates","title":"Semi-Markov models with msmbayes","text":"now extend Gamma model include covariate (binary, representing sex) scale parameter distribution states. log likelihood hardly changes, might expect, covariate effect assumed data simulated, model includes lot extra unnecessary parameters. prior shape parameter example tightened support slightly smaller range values (exp(2*0.4) = 2.2). default prior SD 0.5, optimisation fails converge, likely due weak identifiability. see posterior summary fact posteriors shape parameters similar priors, indicating weak information data parameters.","code":"drawsc <- msmbayes(data=infsim2, state=\"state\", time=\"months\", subject=\"subject\",                    pastates=1:2,                    priors = list(msmprior(\"logshape\", mean=0, sd=0.4)),                    covariates = list(scale(1) ~ male, scale(2) ~ male),                    Q=Q, fit_method=\"optimize\") loglik(drawsc) ##       name posterior       mode ## 1   loglik -151 ± 21 -142.13004 ## 2 logprior  -12 ± 1   -11.02586 ## 3  logpost -163 ± 21 -153.15590 summary(drawsc, pars = \"shape\") ## # A tibble: 2 × 6 ##   name  from    posterior  mode prior_string           prior ##   <chr> <chr>  <rvar[1d]> <dbl> <chr>             <rvar[1d]> ## 1 shape 1      1.1 ± 0.38 1.04  1.0 (0.46, 2.19)  1.1 ± 0.45 ## 2 shape 2      1.0 ± 0.12 1.000 1.0 (0.46, 2.19)  1.1 ± 0.45"},{"path":"https://chjackson.github.io/msmbayes/articles/semimarkov.html","id":"time-acceleration-factors","dir":"Articles","previous_headings":"Implementation in msmbayes > Specifying a semi-Markov model with covariates","what":"Time acceleration factors","title":"Semi-Markov models with msmbayes","text":"covariate effects model can summarised “time acceleration factors”. case, posterior distributions cover wide interval, indicating lack information data evidence effect either direction. Note use summary() function object returned taf(), applies user-specified summary posterior column object, explained ). Note also taf(...) alternative summary(..., pars=\"taf\").","code":"taf(drawsc) ##   from name posterior     mode ## 1    1 male  20 ± 101 2.768362 ## 2    2 male  18 ± 79  2.556254 summary(taf(drawsc), ~quantile(.x, c(0.025, 0.5, 0.975))) ##   from name     mode       2.5%      50%    97.5% ## 1    1 male 2.768362 0.05896570 2.953502 157.0297 ## 2    2 male 2.556254 0.05309879 2.614734 145.5197"},{"path":"https://chjackson.github.io/msmbayes/articles/semimarkov.html","id":"outputs-from-fitted-models-by-covariates","dir":"Articles","previous_headings":"Implementation in msmbayes > Specifying a semi-Markov model with covariates","what":"Outputs from fitted models by covariates","title":"Semi-Markov models with msmbayes","text":"standard multistate model outputs supported semi-Markov models Markov models. Transition intensities (qdf(), qmatrix()) semi-Markov models defined latent space “phases” rather observable states. Transition probabilities time interval (pmatrixdf(),pmatrix()) available space observable latent states. observable states (default) describes probability transitioning phase “destination” state (summing phases within state), person first phase “starting” state. Mean sojourn times mean_sojourn(), total length stay totlos() can produced either observable states latent phases. example, total length time spent observable state, 12 months, computed two different covariate values (men women). nd supplied, output returned covariate values zero. standard population whose distribution matches observed distribution covariates data frame nd, 50% men 50% women: may also break total length time spent five latent phases comprise stay state 1 state 2, though academic interest. states hidden Markov model used implement semi-Markov model.","code":"nd <- data.frame(male=c(0,1)) totlos(drawsc, t=12, new_data=nd) ## # A tibble: 4 × 4 ## # Groups:   state [2] ##   state    posterior  male  mode ##   <int>   <rvar[1d]> <dbl> <dbl> ## 1     1  10.3 ± 0.37     0 10.3  ## 2     1  10.2 ± 0.45     1 10.2  ## 3     2   1.7 ± 0.37     0  1.66 ## 4     2   1.8 ± 0.45     1  1.81 totlos(drawsc, t=12, new_data=standardise_to(nd)) ## # A tibble: 2 × 3 ##   state    posterior  mode ##   <int>   <rvar[1d]> <dbl> ## 1     1  10.2 ± 0.41 10.2  ## 2     2   1.8 ± 0.41  1.77 totlos(drawsc, t=12, states=\"phase\") ## # A tibble: 10 × 5 ##    state      posterior          mode stateobs statephase ##    <chr>     <rvar[1d]>         <dbl>    <int>      <int> ##  1 1p1    8.441 ± 1.207 10.1                 1          1 ##  2 1p2    0.513 ± 0.311  0.0643              1          2 ##  3 1p3    0.472 ± 0.280  0.0629              1          3 ##  4 1p4    0.431 ± 0.255  0.0614              1          4 ##  5 1p5    0.393 ± 0.238  0.0600              1          5 ##  6 2p1    1.607 ± 0.358  1.66                2          1 ##  7 2p2    0.037 ± 0.029  0.0000000518        2          2 ##  8 2p3    0.036 ± 0.028  0.0000000509        2          3 ##  9 2p4    0.036 ± 0.028  0.0000000500        2          4 ## 10 2p5    0.035 ± 0.027  0.0000000492        2          5"},{"path":"https://chjackson.github.io/msmbayes/articles/semimarkov.html","id":"semi-markov-models-with-competing-risks","dir":"Articles","previous_headings":"Implementation in msmbayes","what":"Semi-Markov models with competing risks","title":"Semi-Markov models with msmbayes","text":"based dataset illdeath_data, simulated dataset three states representing health, illness death. Death allowed either living state, recovery illness assumed. State 1 given semi-Markov model pastates. “competing risks”, since leaving state 1, individual can either get illness die without illness. binary covariate “sex” modifies scale parameter sojourn time state 2 (illness), chance moving 3 (rather 2) leaving 1, rate transition illness death. Note state, time subject variables called “state”, “time”, “subject”, need name explicitly call msmbayes(). model combination semi-Markov model transition state 1, Markov model transition state 2, phase-type approximation exponential sojourn distributions respectively.","code":"Qid <- rbind(c(0,1,1), c(0,0,1), c(0,0,0)) draws <- msmbayes(data=illdeath_data, pastates=1,                   covariates = list(scale(1) ~ sex,                                     rrnext(1,3) ~ sex,                                     Q(2,3) ~ sex),                   Q=Qid, fit_method=\"optimize\")"},{"path":"https://chjackson.github.io/msmbayes/articles/semimarkov.html","id":"summarising-covariate-effect-parameters","dir":"Articles","previous_headings":"Implementation in msmbayes > Semi-Markov models with competing risks","what":"Summarising covariate effect parameters","title":"Semi-Markov models with msmbayes","text":"effects covariates progression represented differently states. risk death illness, covariate effect hazard ratio. person state 1, without illness, two aspects covariate effect. time acceleration factor taf, representing effect time length stay state 1. bigger taf speeds time, effect size 2 halves expected time next transition. exponential distribution, parameter interpretation hazard ratio. multiplicative effect rrnext relative risk death without illness, relative “baseline” risk getting illness.","code":"summary(draws, pars=\"hr\") ##          name from to posterior     mode   prior_string             prior ## 1 hr(sexmale)    2  3 6.6 ± 6.6 4.782825 1 (0, 3.2e+08) 4.3e+11 ± 2.2e+13 ## 2 hr(sexmale)    2  3 6.6 ± 6.6 4.782825 1 (0, 3.2e+08) 4.3e+11 ± 2.2e+13 summary(draws, pars=c(\"taf\",\"rrnext\")) ##              name from to        posterior       mode   prior_string ## 1    taf(sexmale)    1 NA    2.6 ± 1.9     2.01522152 1 (0, 3.2e+08) ## 2 rrnext(sexmale)    1  3 2174.9 ± 68510.3 0.05788637 1 (0, 3.2e+08) ##               prior ## 1 4.3e+11 ± 2.2e+13 ## 2 4.3e+11 ± 2.2e+13"},{"path":"https://chjackson.github.io/msmbayes/articles/semimarkov.html","id":"summarising-outputs-by-covariates","dir":"Articles","previous_headings":"Implementation in msmbayes > Semi-Markov models with competing risks","what":"Summarising outputs by covariates","title":"Semi-Markov models with msmbayes","text":"covariates may influence progression multi-state system many ways, build summarise model depend research question. useful general approach compute outcome interest compare different covariate values. illustration, model, suppose interested total time spent alive 24 months person start study. First computed covariate category compared (using standardise_to() , necessary, marginalise covariates). Posterior samples extracted time state 1 time state 2 separately, men women separately. tl_12_male (tl_12_female) comprise two rvar objects. posterior samples state 1 state 2 added together give posterior sample time spent alive. done women men separately. Note rvar_sum needed , standard Finally obtain posterior sample tl_diff difference expected time spent alive men women. Note: rvar_sum() posterior package needed add “random variables” represented rvar objects, producing random variable representing sum. base R sum() function collapse samples inside rvar objects produce scalar, want . null hypothesis test whether effect “significant” direct analogue Bayesian analysis. Instead recommend summarising posterior distribution quantity interest. might done different ways, e.g. 95% credible interval, posterior probability exceeding value practical interest (e.g. 0, clinically important value):","code":"tl <- totlos(draws, t=24, new_data = data.frame(sex=c(\"male\",\"female\"))) tl ## # A tibble: 6 × 4 ## # Groups:   state [3] ##   state     posterior sex      mode ##   <int>    <rvar[1d]> <chr>   <dbl> ## 1     1   1.31 ± 0.40 female  1.28  ## 2     1   0.85 ± 0.55 male    1.16  ## 3     2   0.72 ± 0.48 female  0.648 ## 4     2   0.22 ± 0.17 male    0.293 ## 5     3  21.96 ± 0.62 female 22.1   ## 6     3  22.93 ± 0.65 male   22.5 tl_12_male <- tl |> filter(state %in% 1:2, sex==\"male\") |> pull(posterior)  tl_12_female <- tl |> filter(state %in% 1:2, sex==\"female\") |> pull(posterior) tl_12_male ## rvar<4000>[2] mean ± sd: ## [1] 0.85 ± 0.55  0.22 ± 0.17 library(posterior) tl_diff <- rvar_sum(tl_12_female) - rvar_sum(tl_12_male) summary(tl_diff, ~quantile(.x, c(0.025, 0.5, 0.975))) ## # A tibble: 1 × 4 ##   variable `2.5%` `50%` `97.5%` ##   <chr>     <dbl> <dbl>   <dbl> ## 1 tl_diff  -0.656 0.893    2.82 mean(tl_diff > 0) ## [1] 0.8735"},{"path":"https://chjackson.github.io/msmbayes/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christopher Jackson. Author, maintainer.","code":""},{"path":"https://chjackson.github.io/msmbayes/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jackson C (2025). msmbayes: Bayesian Multi-State Models Intermittently-Observed Data. R package version 0.3, https://github.com/chjackson/msmbayes.","code":"@Manual{,   title = {msmbayes: Bayesian Multi-State Models for Intermittently-Observed Data},   author = {Christopher Jackson},   year = {2025},   note = {R package version 0.3},   url = {https://github.com/chjackson/msmbayes}, }"},{"path":"https://chjackson.github.io/msmbayes/index.html","id":"msmbayes","dir":"","previous_headings":"","what":"Bayesian Multi-State Models for Intermittently-Observed Data","title":"Bayesian Multi-State Models for Intermittently-Observed Data","text":"msmbayes R package Bayesian multi-state modelling intermittently-observed data. similar msm package. supports following continuous-time multi-state models: Markov models Semi-Markov models using phase-type distributions Hidden Markov models misclassified (discrete) state data observation schemes supported msm: intermittent observations, exact transition times, “exact death times” censored (coarsened) states. Covariates may time-homogeneous piecewise-constant. transition structures permitted models (number states, without cycles, without absorbing states). Models can fitted either Bayesian maximum likelihood estimation, via algorithms available Stan, whereas msm uses maximum likelihood.","code":""},{"path":"https://chjackson.github.io/msmbayes/index.html","id":"advantages-of-msmbayes-compared-to-msm","dir":"","previous_headings":"","what":"Advantages of msmbayes compared to msm","title":"Bayesian Multi-State Models for Intermittently-Observed Data","text":"Informative priors can represent background information Prior information can also help stabilise model fitting - avoiding convergence failures. Semi-Markov models, via phase-type approximations Weibull Gamma distributions, easier use much robust “two-phase” methods msm. Automatic, efficient uncertainty quantification model output","code":""},{"path":"https://chjackson.github.io/msmbayes/index.html","id":"limitations-of-msmbayes-compared-to-msm","dir":"","previous_headings":"","what":"Limitations of msmbayes compared to msm","title":"Bayesian Multi-State Models for Intermittently-Observed Data","text":"Hidden Markov models general outcome distributions supported. HMMs supported observed state space (subset ) true state space. includes misclassification phase-type models. Covariates misclassification probabilities supported misclassification models. Fixed parameters supported. However, parameters can constrained prior distributions. Limited support equality constraints covariate effects. pci syntax time-inhomogeneous models supported. However, models can still specified, treating time time-dependent covariate, including censored states occasions covariate changes state. Prediction functions also currently automatically deal piecewise-constant covariates. Multivariate hidden Markov models supported.","code":""},{"path":"https://chjackson.github.io/msmbayes/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Bayesian Multi-State Models for Intermittently-Observed Data","text":"Examples using msmbayes given : vignette(\"examples\").","code":""},{"path":"https://chjackson.github.io/msmbayes/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian Multi-State Models for Intermittently-Observed Data","text":"Warning: knowledge Bayesian analysis needed develop interpret models package! Install cmdstan cmdstanr following instructions linked Install msmbayes : use , please give feedback github issues, email.","code":"## install,packages(\"remotes\") # if need be remotes::install_github(\"chjackson/msmbayes\")"},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://chjackson.github.io/msmbayes/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://chjackson.github.io/msmbayes/reference/bigdat.html","id":null,"dir":"Reference","previous_headings":"","what":"A simulated multistate dataset with lots of observations and covariates — bigdat","title":"A simulated multistate dataset with lots of observations and covariates — bigdat","text":"simulated multistate dataset lots observations covariates","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/bigdat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A simulated multistate dataset with lots of observations and covariates — bigdat","text":"","code":"bigdat"},{"path":"https://chjackson.github.io/msmbayes/reference/bigdat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A simulated multistate dataset with lots of observations and covariates — bigdat","text":"See data-raw/bigdata.R source simulation settings.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/canpars_to_rates.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert between canonical parameters and rates for a phase-type distribution — canpars_to_rates","title":"Convert between canonical parameters and rates for a phase-type distribution — canpars_to_rates","text":"Convert canonical parameters rates phase-type distribution","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/canpars_to_rates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert between canonical parameters and rates for a phase-type distribution — canpars_to_rates","text":"","code":"canpars_to_rates(pars, type = \"vector\")  rates_to_canpars(rates, type = \"vector\")"},{"path":"https://chjackson.github.io/msmbayes/reference/canpars_to_rates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert between canonical parameters and rates for a phase-type distribution — canpars_to_rates","text":"pars Canonical parameters, supplied order: sojourn rate phase 1 additive increments sojourn rates successive phase probabilities (rates) absorption phase, phase 1 second last. list three components, one vector three parameter types. type \"vector\" \"list\". rates List two components progression absorption rates, increasing order phase, vector concatenated.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/canpars_to_rates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert between canonical parameters and rates for a phase-type distribution — canpars_to_rates","text":"list components p progression rates phases absorption rates vector components concatenated, depending \"type\" argument.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/edf.html","id":null,"dir":"Reference","previous_headings":"","what":"Misclassification error probabilities from an msmbayes model — edf","title":"Misclassification error probabilities from an msmbayes model — edf","text":"Misclassification error probabilities msmbayes model","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/edf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Misclassification error probabilities from an msmbayes model — edf","text":"","code":"edf(draws)"},{"path":"https://chjackson.github.io/msmbayes/reference/edf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Misclassification error probabilities from an msmbayes model — edf","text":"draws Object returned msmbayes.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/edf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Misclassification error probabilities from an msmbayes model — edf","text":"data frame one row per modelled misclassification probability. indicates true state, indicates observed state. Error probabilities fixed user included.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msmbayes/reference/ematrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrix of misclassification error probabilities from an msmbayes model — ematrix","title":"Matrix of misclassification error probabilities from an msmbayes model — ematrix","text":"Matrix misclassification error probabilities msmbayes model","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/ematrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrix of misclassification error probabilities from an msmbayes model — ematrix","text":"","code":"ematrix(draws, type = \"posterior\")"},{"path":"https://chjackson.github.io/msmbayes/reference/ematrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matrix of misclassification error probabilities from an msmbayes model — ematrix","text":"draws Object returned msmbayes. type \"posterior\" return rvar objects containing posterior samples. \"mode\" return posterior modes (applicable model fitted posterior mode optimisation).","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/ematrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matrix of misclassification error probabilities from an msmbayes model — ematrix","text":"array matrix rvar objects containing misclassification error matrix new prediction data point","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/example_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Example fitted model objects used for testing msmbayes — example_models","title":"Example fitted model objects used for testing msmbayes — example_models","text":"Example fitted model objects used testing msmbayes","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/example_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example fitted model objects used for testing msmbayes — example_models","text":"","code":"infsim_model  infsim_modelc  infsim_modelp  infsim_modelpc"},{"path":"https://chjackson.github.io/msmbayes/reference/example_models.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example fitted model objects used for testing msmbayes — example_models","text":"object class msmbayes, obtained fitting Markov model dataset infsim.  See data-raw/infsim.R source model specification code infsim_modelc includes covariates transition intensities. infsim_modelp phase-type model. infsim_modelpc phase-type model covariates.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/example_models.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example fitted model objects used for testing msmbayes — example_models","text":"Simulated","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/illdeath_data.html","id":null,"dir":"Reference","previous_headings":"","what":"A simulated dataset from an illness-death model — illdeath_data","title":"A simulated dataset from an illness-death model — illdeath_data","text":"simulated dataset illness-death model","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/illdeath_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A simulated dataset from an illness-death model — illdeath_data","text":"","code":"illdeath_data"},{"path":"https://chjackson.github.io/msmbayes/reference/illdeath_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A simulated dataset from an illness-death model — illdeath_data","text":"See data-raw/illdeath.R source simulation settings.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/infsim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated infection testing data — infsim","title":"Simulated infection testing data — infsim","text":"Simulated infection testing data","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/infsim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated infection testing data — infsim","text":"","code":"infsim  infsim2"},{"path":"https://chjackson.github.io/msmbayes/reference/infsim.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated infection testing data — infsim","text":"infsim 3600 rows, 36 state observations 100 people.  Columns : subject Subject identifier days Observation time (days) months Observation time (moths) state State simulated Markov model covariates sex: \"male\" \"female\". age10: Age, units 10 years since age 50 statec: State simulated Markov model covariates statep: State simulated phase-type model (unused examples. See data-raw/infsim.R source simulation settings) statepc: State simuated phase-type model covariates (unused examples) smaller dataset infsim2 360 rows, 20 people, simulated using sojourn time 60 days test-negative state 10 days test-positive. object class data.frame 360 rows 14 columns.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/infsim.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated infection testing data — infsim","text":"Simulated","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/loghr.html","id":null,"dir":"Reference","previous_headings":"","what":"(Log) hazard ratios for covariates on transition intensities — loghr","title":"(Log) hazard ratios for covariates on transition intensities — loghr","text":"semi-Markov models specified pastates, include covariate effects transitions \"Markov\" states, , included pastates.  Effects scale parameters sojourn distributions \"semi-Markov\" states extracted logtaf.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/loghr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Log) hazard ratios for covariates on transition intensities — loghr","text":"","code":"loghr(draws)  hr(draws)"},{"path":"https://chjackson.github.io/msmbayes/reference/loghr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Log) hazard ratios for covariates on transition intensities — loghr","text":"draws Object returned msmbayes.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/loghr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Log) hazard ratios for covariates on transition intensities — loghr","text":"data frame containing samples posterior distribution. See qdf notes format summarise. hr returns natural scale, loghr returns log scale.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/loglik.html","id":null,"dir":"Reference","previous_headings":"","what":"Log likelihood from an msmbayes model — loglik","title":"Log likelihood from an msmbayes model — loglik","text":"Log likelihood msmbayes model","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/loglik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log likelihood from an msmbayes model — loglik","text":"","code":"loglik(draws)  # S3 method for class 'msmbayes' logLik(object, ...)"},{"path":"https://chjackson.github.io/msmbayes/reference/loglik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log likelihood from an msmbayes model — loglik","text":"draws Object returned msmbayes. object Object returned msmbayes. ... arguments passed qdf, hr, loghr edf.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/loglik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log likelihood from an msmbayes model — loglik","text":"loglik, data frame rows log likelihood, log prior density log posterior density, columns posterior (rvar object) mode (optimisation used fit model, rather MCMC). msmbayes called priors=\"mle\", maximised log posterior log likelihood . logLik (note different capitalisation), just likelihood (mode available, posterior ) returned.  method generic logLik function stats package.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/logoddsnext.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise posteriors for log odds of transitions from phase-type states — logoddsnext","title":"Summarise posteriors for log odds of transitions from phase-type states — logoddsnext","text":"Log odds transition competing destination state, relative baseline destination state.  applicable phase-type approximation models, specified pastates.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/logoddsnext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise posteriors for log odds of transitions from phase-type states — logoddsnext","text":"","code":"logoddsnext(draws, new_data = NULL, keep_covid = FALSE)"},{"path":"https://chjackson.github.io/msmbayes/reference/logoddsnext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise posteriors for log odds of transitions from phase-type states — logoddsnext","text":"draws Object returned msmbayes. new_data Data frame covariate values predict keep_covid (logical) Keep integer column covid identifying unique covariate combinations.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msmbayes/reference/logtaf.html","id":null,"dir":"Reference","previous_headings":"","what":"(Log) time acceleration factors in semi-Markov models — logtaf","title":"(Log) time acceleration factors in semi-Markov models — logtaf","text":"Extracts covariate effects scale parameters phase-type approximation sojourn distributions semi-Markov models.   Note hazard ratios transitions observable state space.  time acceleration factors, increase one covariate unit makes time pass taf times speed, sojourn time expected reduce \\(exp(-taf)\\). log TAFs labelled \\(\\beta\\) paper vignettes.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/logtaf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Log) time acceleration factors in semi-Markov models — logtaf","text":"","code":"logtaf(draws)  taf(draws)"},{"path":"https://chjackson.github.io/msmbayes/reference/logtaf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Log) time acceleration factors in semi-Markov models — logtaf","text":"draws Object returned msmbayes.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/logtaf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Log) time acceleration factors in semi-Markov models — logtaf","text":"data frame containing samples posterior distribution. See qdf notes format summarise. taf returns natural scale, logtaf returns log scale.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/logtaf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Log) time acceleration factors in semi-Markov models — logtaf","text":"See loghr effects covariates transitions Markov states, log hazard ratios.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/mean_sojourn.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean sojourn times from an msmbayes model — mean_sojourn","title":"Mean sojourn times from an msmbayes model — mean_sojourn","text":"Mean sojourn times msmbayes model","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/mean_sojourn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean sojourn times from an msmbayes model — mean_sojourn","text":"","code":"mean_sojourn(draws, new_data = NULL, states = \"obs\", keep_covid = FALSE)"},{"path":"https://chjackson.github.io/msmbayes/reference/mean_sojourn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean sojourn times from an msmbayes model — mean_sojourn","text":"draws Object returned msmbayes. new_data Data frame covariate values predict states states=\"obs\" (\"observed\") describes mean sojourn times observable states.  phase-type models generally equal sum phase-specific mean sojourn times, individual may transition state progressing next phase. states=\"phase\" (\"true\", \"latent\") phase-type models, describes mean sojourn times latent state space. keep_covid (logical) Keep integer column covid identifying unique covariate combinations.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/mean_sojourn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean sojourn times from an msmbayes model — mean_sojourn","text":"data frame containing samples posterior distribution. See qdf notes format summarise.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmbayes-package.html","id":null,"dir":"Reference","previous_headings":"","what":"The 'msmbayes' package for Bayesian multi-state modelling of intermittently-observed data — msmbayes-package","title":"The 'msmbayes' package for Bayesian multi-state modelling of intermittently-observed data — msmbayes-package","text":"introduction overview msmbayes package, full documentation, see http://chjackson.github.io/msmbayes. resources multi-state modelling, see msm package documentation.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msmbayes/reference/msmbayes-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The 'msmbayes' package for Bayesian multi-state modelling of intermittently-observed data — msmbayes-package","text":"Maintainer: Christopher Jackson chris.jackson@mrc-bsu.cam.ac.uk (ORCID)","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmbayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian multi-state models for intermittently-observed data — msmbayes","title":"Bayesian multi-state models for intermittently-observed data — msmbayes","text":"Fit multi-state model longitudinal data consisting intermittent observation discrete state.  Bayesian estimation used, via Stan software.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmbayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian multi-state models for intermittently-observed data — msmbayes","text":"","code":"msmbayes(   data,   state = \"state\",   time = \"time\",   subject = \"subject\",   Q,   covariates = NULL,   pastates = NULL,   pafamily = \"gamma\",   panphase = NULL,   E = NULL,   Efix = NULL,   obstype = NULL,   deathexact = FALSE,   obstrue = NULL,   censor_states = NULL,   constraint = NULL,   nphase = NULL,   priors = NULL,   prob_initstate = NULL,   soj_priordata = NULL,   fit_method = NULL,   keep_data = FALSE,   ... )"},{"path":"https://chjackson.github.io/msmbayes/reference/msmbayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian multi-state models for intermittently-observed data — msmbayes","text":"data Data frame giving observed data. state Character string naming observed state variable data.  variable must either integer 1,2,...,K, K number states, factor integers level labels.  omitted, assumed \"state\". time Character string naming observation time variable data. omitted, assumed \"time\". subject Character string naming individual ID variable data. omitted, assumed \"subject\". Q Matrix indicating transition structure.  zero entry indicates instantaneous transitions (row) (column) disallowed.  entry 1 (positive value) indicates instantaneous transition allowed.  diagonal Q ignored. need \"guess\" initial values put , sometimes done msm.  Initial values fitting determined Stan prior distributions, specific values supplied positive entries Q disregarded. covariates Specification covariates transition intensities. list formulae, single formula. list supplied, formula left-hand side looks like Q(r,s), right hand side defining regression model log transition intensity state \\(r\\) state \\(s\\). example, covariates = list(Q(1,2) ~ age + sex,                         Q(2,1) ~ age) specifies log 1-2 transition intensity additive linear function age sex, log 2-1 transition intensity linear function age.  list intensities influenced covariates. single formula supplied, assumed apply intensities.  , take care potential lack identifiability effects sparse data. models phase-type approximated states (specified pastates), covariates modelled accelerated failure time model.  effect multiplier scale parameter sojourn distribution.  covariate identical multiplicative effect rates transition phases given state.  left hand side formula contain scale instad Q.  example, state 1 phase type approximation, state 2 Markov, might supply covariates : covariates = list(scale(1) ~ age + sex,                         Q(2,1) ~ age) models phase-type approximations competing exit states, covariates relative risk different exit states specified formula rrnext left hand side.  example model state 1 phase-type approximation, next state either 2 3, linear model log relative risk transition 3 (relative baseline 2) might specified : covariates = list(scale(1) ~ age + sex,                         rrnext(1,3) ~ x + time) phase-type models specified nphase, misclassification models (specified E), covariates transition intensities specified Q(), numbers inside Q() refer latent state space. pastates indicates states () given Weibull Gamma sojourn distribution approximated phase-type model Ignored nphase supplied. pafamily \"weibull\" \"gamma\", indicating approximated sojourn distribution phased state.  Either vector length pastates, just one apply states. panphase Number phases use state given phase-type Gamma Weibull approximation.  Vector length pastates. phases allow wider range shape parameters. E default, msmbayes fits (non-hidden) Markov model. E supplied, Markov model misclassification fitted, type hidden Markov model.  E matrix indicating structure allowed misclassifications, rows true states, columns observed states.  zero entry row \\(r\\) column \\(s\\) indicates true state \\(r\\) observed state \\(s\\).  non-zero \\((r,s)\\) entry indicates true state \\(r\\) may misclassified \\(s\\). diagonal E ignored. Efix Misclassfication probabilities Markov models commonly identifiable data, particulary data intermittently observed.  Instead estimating , Markov model misclassification can specified supplying assumed misclassification probabilities Efix argument.  matrix dimensions E.  non-zero entries Efix indicate fixed known value corresponding misclassification probability. \\((r,s)\\) entry Efix 0 error probabilities estimated data permitted. obstype Character string, giving variable data defines \"row data\" means.  variable must contain following values, may different different rows: 1: Intermittent observation. state unknown previous observation current observation (knowledge implied structure Q permitted transitions). 2: Exact transition times. state constant previous observed value previous current times data, transition current state made exactly current time. 3: \"Exact death times\". transition current state made exactly current time, state period previous observation transition unknown. Typical (necessary) observations death epidemiological/clinical studies. feature msm package.  omitted, observations assumed intermittent, obstype 1. deathexact Set TRUE death times observed obstype 3 scheme.  shortcut including obstype variable 3 positions absorbing state, 1 elsewhere.  multiple absorbing states, taken apply last state space - use obstype variable want apply absorbing states. obstrue applicable models misclassification.  character string indicating variable data whose value 1 true state known equal value \"state\", 0 otherwise. censor_states named list indicating codes used \"censored\" states.  used observations known one subset states, known .  names list indicate codes may appear \"state\" variable.  values corresponding component indicate subset represented code.  example censor_states = list(\"99\" = c(2,3), \"999\" = c(3,4)) means code 99 \"state\" variable indicates \"state either 2 3 time\", code 999 indicates \"state either 3 4\". Note names list must quoted strings interpretable integers, since \"state\" variable must integer. misclassification models, subset refers values true state obstrue 1, observed state obstrue 0. Unlike msm, censor argument, censor_states must supplied censored states. constraint Constraints covariate equal effect particular set transition intensities.  list one component covariate constraints.  component list sets (single set) intensities effect covariate equal.  example, constrain effect age equal transitions 1-2 2-3, also equal transitions 1-4 2-4, effect sexMALE equal transitions 1-2 2-3, specify constraint = list(age = list(c(\"1-2\",\"2-3\"), c(\"1-4\",\"2-4\")), sex = list(c(\"1-2\",\"2-3\"))) feature msm, easier interface.  msmbayes supported standard Markov models, semi-Markov, phase-type misclassification models. nphase required models phase-type sojourn distributions specified directly (pastates). nphase vector one element per state, giving number phases per state.  element 1 states phase-type sojourn distributions. priors list specifying priors.  component result call msmprior.  parameters priors specified given default priors: normal mean -2 SD 2 log intensities, normal mean 0 SD 10 log hazard ratios, normal(0,1) log odds parameters misclassification models. phase-type approximation models, default priors normal mean 2, SD 2 scale parameters (.e. log inverse default prior rate), normal(0, SD=0.5) truncated supported region log shape parameters, normal(0,1) log odds transition (relative first exit state) structures competing exit states. See msmprior details. one parameter given non-default prior, single msmprior call can supplied instead list. Maximum likelihood estimation can performed setting priors=\"mle\", using fit_method=\"optimize\".  equivalent estimating posterior mode improper uniform priors unconstrained parameter space (.e. positive parameters log scale).  Uncertainty quantified sampling multivariate normal defined Hessian mode .  sample can summarised produce confidence intervals, ci=\"normal\" method msm package. equivalent credible intervals Laplace approximation posterior. prob_initstate Probabilities true states person's first observation time misclassification model.  supplied, matrix row individual subject, column true state, vector one element state assumed apply individuals. supplied, every person assumed state 1 probability 1 misclassification models, phase 1 observed state probability 1 phase-type models.  Note warning currently given first observed state impossible person really state 1. applies misclassification models, phase-type models person's first observed state phased.  first observed state phased misclassified, ignored. soj_priordata Synthetic data represents prior information mean sojourn times.  Experimental, undocumented feature. fit_method Quoted string specifying algorithm fit model.  \"sample\" uses NUTS/HMC MCMC, via rstan::sampling().  default unless priors=\"mle\". Alternatives \"optimize\" use posterior mode optimization (respect parameters log scale) followed Laplace approximation around mode (via rstan::optimizing()). default priors=\"mle\". \"variational\" use variational Bayes (via rstan::vb()). \"pathfinder\", use Pathfinder variational algorithm via cmdstanr.  requires cmdstan cmdstanr installed.  first time run particular msmbayes model class, Stan program class compiled, take extra minute two.  next time, need recompiled.  also assumes write permission place msmbayes installed. keep_data Store copy cleaned data returned object.  FALSE default. ... arguments passed function rstan cmdstanr fits model.  Note initial values determined sampling prior (dividing prior SD 5), using Stan's default, can overridden (currently documented - needs knowledge Stan variable names formats)","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmbayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian multi-state models for intermittently-observed data — msmbayes","text":"data frame draws format posterior package, containing draws posterior model parameters. Attributes added give information model structure, class \"msmbayes\" prepended. See, e.g. summary.msmbayes, qdf, hr, similar functions, extract parameter estimates fitted model.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmbayes_priorpred_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a dataset from the prior predictive distribution in a msmbayes model — msmbayes_priorpred_sample","title":"Generate a dataset from the prior predictive distribution in a msmbayes model — msmbayes_priorpred_sample","text":"generates single sample parameters prior, generates observed states multi-state model parameters.  data argument contain time subject indicators states simulated (default), maximum observation time (complete_obs=FALSE).","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmbayes_priorpred_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a dataset from the prior predictive distribution in a msmbayes model — msmbayes_priorpred_sample","text":"","code":"msmbayes_priorpred_sample(   data,   state = \"state\",   time = \"time\",   subject = \"subject\",   Q,   covariates = NULL,   pastates = NULL,   pafamily = \"gamma\",   panphase = NULL,   nphase = NULL,   E = NULL,   priors = NULL,   complete_obs = FALSE,   cov_format = \"orig\" )"},{"path":"https://chjackson.github.io/msmbayes/reference/msmbayes_priorpred_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a dataset from the prior predictive distribution in a msmbayes model — msmbayes_priorpred_sample","text":"data Data frame giving observed data. state Character string naming observed state variable data.  variable must either integer 1,2,...,K, K number states, factor integers level labels.  omitted, assumed \"state\". time Character string naming observation time variable data. omitted, assumed \"time\". subject Character string naming individual ID variable data. omitted, assumed \"subject\". Q Matrix indicating transition structure.  zero entry indicates instantaneous transitions (row) (column) disallowed.  entry 1 (positive value) indicates instantaneous transition allowed.  diagonal Q ignored. need \"guess\" initial values put , sometimes done msm.  Initial values fitting determined Stan prior distributions, specific values supplied positive entries Q disregarded. covariates Specification covariates transition intensities. list formulae, single formula. list supplied, formula left-hand side looks like Q(r,s), right hand side defining regression model log transition intensity state \\(r\\) state \\(s\\). example, covariates = list(Q(1,2) ~ age + sex,                         Q(2,1) ~ age) specifies log 1-2 transition intensity additive linear function age sex, log 2-1 transition intensity linear function age.  list intensities influenced covariates. single formula supplied, assumed apply intensities.  , take care potential lack identifiability effects sparse data. models phase-type approximated states (specified pastates), covariates modelled accelerated failure time model.  effect multiplier scale parameter sojourn distribution.  covariate identical multiplicative effect rates transition phases given state.  left hand side formula contain scale instad Q.  example, state 1 phase type approximation, state 2 Markov, might supply covariates : covariates = list(scale(1) ~ age + sex,                         Q(2,1) ~ age) models phase-type approximations competing exit states, covariates relative risk different exit states specified formula rrnext left hand side.  example model state 1 phase-type approximation, next state either 2 3, linear model log relative risk transition 3 (relative baseline 2) might specified : covariates = list(scale(1) ~ age + sex,                         rrnext(1,3) ~ x + time) phase-type models specified nphase, misclassification models (specified E), covariates transition intensities specified Q(), numbers inside Q() refer latent state space. pastates indicates states () given Weibull Gamma sojourn distribution approximated phase-type model Ignored nphase supplied. pafamily \"weibull\" \"gamma\", indicating approximated sojourn distribution phased state.  Either vector length pastates, just one apply states. panphase Number phases use state given phase-type Gamma Weibull approximation.  Vector length pastates. phases allow wider range shape parameters. nphase required models phase-type sojourn distributions specified directly (pastates). nphase vector one element per state, giving number phases per state.  element 1 states phase-type sojourn distributions. E default, msmbayes fits (non-hidden) Markov model. E supplied, Markov model misclassification fitted, type hidden Markov model.  E matrix indicating structure allowed misclassifications, rows true states, columns observed states.  zero entry row \\(r\\) column \\(s\\) indicates true state \\(r\\) observed state \\(s\\).  non-zero \\((r,s)\\) entry indicates true state \\(r\\) may misclassified \\(s\\). diagonal E ignored. priors list specifying priors.  component result call msmprior.  parameters priors specified given default priors: normal mean -2 SD 2 log intensities, normal mean 0 SD 10 log hazard ratios, normal(0,1) log odds parameters misclassification models. phase-type approximation models, default priors normal mean 2, SD 2 scale parameters (.e. log inverse default prior rate), normal(0, SD=0.5) truncated supported region log shape parameters, normal(0,1) log odds transition (relative first exit state) structures competing exit states. See msmprior details. one parameter given non-default prior, single msmprior call can supplied instead list. Maximum likelihood estimation can performed setting priors=\"mle\", using fit_method=\"optimize\".  equivalent estimating posterior mode improper uniform priors unconstrained parameter space (.e. positive parameters log scale).  Uncertainty quantified sampling multivariate normal defined Hessian mode .  sample can summarised produce confidence intervals, ci=\"normal\" method msm package. equivalent credible intervals Laplace approximation posterior. complete_obs complete_obs=FALSE (default) intermittently-observed states generated subjects times supplied data argument, using msm::simmulti.msm.  returned object data frame made appending states data. complete_obs=TRUE, one complete state transition history generated using msm::sim.msm.  data argument consist one row, time giving maximum observation time, covariates supplied, assumed time-constant.  returned object list. cov_format \"orig\" covariates original form supplied .  \"design\" (value) covariates returned design matrix, .e. factors converted numeric contrasts.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmbayes_priorpred_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a dataset from the prior predictive distribution in a msmbayes model — msmbayes_priorpred_sample","text":"data frame list, see msm::simmulti.msm msm::sim.msm respectively.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmbayes_priorpred_sample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a dataset from the prior predictive distribution in a msmbayes model — msmbayes_priorpred_sample","text":"phase-type approximation models, simulates phase-type approximation, Weibull Gamma (e.g) distribution designed approximate.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmbayes_prior_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a sample from the prior distribution in a msmbayes model — msmbayes_prior_sample","title":"Generate a sample from the prior distribution in a msmbayes model — msmbayes_prior_sample","text":"Called way msmbayes.  data still supplied function, ensure simulating valid msmbayes model, sufficient supply empty data frame rows, columns named fitting model given priors.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmbayes_prior_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a sample from the prior distribution in a msmbayes model — msmbayes_prior_sample","text":"","code":"msmbayes_prior_sample(   data,   state = \"state\",   time = \"time\",   subject = \"subject\",   Q,   covariates = NULL,   pastates = NULL,   pafamily = \"weibull\",   panphase = NULL,   nphase = NULL,   E = NULL,   priors = NULL,   nsim = 1 )"},{"path":"https://chjackson.github.io/msmbayes/reference/msmbayes_prior_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a sample from the prior distribution in a msmbayes model — msmbayes_prior_sample","text":"data Data frame giving observed data. state Character string naming observed state variable data.  variable must either integer 1,2,...,K, K number states, factor integers level labels.  omitted, assumed \"state\". time Character string naming observation time variable data. omitted, assumed \"time\". subject Character string naming individual ID variable data. omitted, assumed \"subject\". Q Matrix indicating transition structure.  zero entry indicates instantaneous transitions (row) (column) disallowed.  entry 1 (positive value) indicates instantaneous transition allowed.  diagonal Q ignored. need \"guess\" initial values put , sometimes done msm.  Initial values fitting determined Stan prior distributions, specific values supplied positive entries Q disregarded. covariates Specification covariates transition intensities. list formulae, single formula. list supplied, formula left-hand side looks like Q(r,s), right hand side defining regression model log transition intensity state \\(r\\) state \\(s\\). example, covariates = list(Q(1,2) ~ age + sex,                         Q(2,1) ~ age) specifies log 1-2 transition intensity additive linear function age sex, log 2-1 transition intensity linear function age.  list intensities influenced covariates. single formula supplied, assumed apply intensities.  , take care potential lack identifiability effects sparse data. models phase-type approximated states (specified pastates), covariates modelled accelerated failure time model.  effect multiplier scale parameter sojourn distribution.  covariate identical multiplicative effect rates transition phases given state.  left hand side formula contain scale instad Q.  example, state 1 phase type approximation, state 2 Markov, might supply covariates : covariates = list(scale(1) ~ age + sex,                         Q(2,1) ~ age) models phase-type approximations competing exit states, covariates relative risk different exit states specified formula rrnext left hand side.  example model state 1 phase-type approximation, next state either 2 3, linear model log relative risk transition 3 (relative baseline 2) might specified : covariates = list(scale(1) ~ age + sex,                         rrnext(1,3) ~ x + time) phase-type models specified nphase, misclassification models (specified E), covariates transition intensities specified Q(), numbers inside Q() refer latent state space. pastates indicates states () given Weibull Gamma sojourn distribution approximated phase-type model Ignored nphase supplied. pafamily \"weibull\" \"gamma\", indicating approximated sojourn distribution phased state.  Either vector length pastates, just one apply states. panphase Number phases use state given phase-type Gamma Weibull approximation.  Vector length pastates. phases allow wider range shape parameters. nphase required models phase-type sojourn distributions specified directly (pastates). nphase vector one element per state, giving number phases per state.  element 1 states phase-type sojourn distributions. E default, msmbayes fits (non-hidden) Markov model. E supplied, Markov model misclassification fitted, type hidden Markov model.  E matrix indicating structure allowed misclassifications, rows true states, columns observed states.  zero entry row \\(r\\) column \\(s\\) indicates true state \\(r\\) observed state \\(s\\).  non-zero \\((r,s)\\) entry indicates true state \\(r\\) may misclassified \\(s\\). diagonal E ignored. priors list specifying priors.  component result call msmprior.  parameters priors specified given default priors: normal mean -2 SD 2 log intensities, normal mean 0 SD 10 log hazard ratios, normal(0,1) log odds parameters misclassification models. phase-type approximation models, default priors normal mean 2, SD 2 scale parameters (.e. log inverse default prior rate), normal(0, SD=0.5) truncated supported region log shape parameters, normal(0,1) log odds transition (relative first exit state) structures competing exit states. See msmprior details. one parameter given non-default prior, single msmprior call can supplied instead list. Maximum likelihood estimation can performed setting priors=\"mle\", using fit_method=\"optimize\".  equivalent estimating posterior mode improper uniform priors unconstrained parameter space (.e. positive parameters log scale).  Uncertainty quantified sampling multivariate normal defined Hessian mode .  sample can summarised produce confidence intervals, ci=\"normal\" method msm package. equivalent credible intervals Laplace approximation posterior. nsim Number samples generate","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmbayes_prior_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a sample from the prior distribution in a msmbayes model — msmbayes_prior_sample","text":"data frame one column per model parameter (transformed scale, e.g. log intensities), one row per sample.    names natural format specified priors. attribute \"stan_names\" contains names corresponding parameters draws object returned msmbayes model fitted data. names used internally Stan, meant interpretable users. attribute \"expand\" contains sample parameters covariate effects referring state transitions latent space.  Used internally posterior predictive sampling.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmhist.html","id":null,"dir":"Reference","previous_headings":"","what":"Illustrate the empirical distribution of states against time in intermittently-observed multistate data — msmhist","title":"Illustrate the empirical distribution of states against time in intermittently-observed multistate data — msmhist","text":"works similarly histogram.  state observations binned time intervals roughly equal numbers observations.  Within bin, probability \\(p(s)\\) observation comes state \\(s\\) estimated.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmhist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Illustrate the empirical distribution of states against time in intermittently-observed multistate data — msmhist","text":"","code":"msmhist(   data,   state = \"state\",   time = \"time\",   subject = \"subject\",   nbins,   absorbing = NULL,   censtimes = NULL,   stacked = TRUE )"},{"path":"https://chjackson.github.io/msmbayes/reference/msmhist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Illustrate the empirical distribution of states against time in intermittently-observed multistate data — msmhist","text":"data Data frame giving observed data. state Character string naming observed state variable data.  variable must either integer 1,2,...,K, K number states, factor integers level labels.  omitted, assumed \"state\". time Character string naming observation time variable data. omitted, assumed \"time\". subject Character string naming individual ID variable data. omitted, assumed \"subject\". nbins Number time intervals bin state observations .  underlying distribution states illustrated plot assumed constant within interval. absorbing Indices absorbing states.  Individuals assumed stay absorbing state, contribute one observation bin absorption time.  default, states assumed absorbing. censtimes Vector maximum intended follow-times people data entered absorbing states.  supposes person entered absorbing state, observed time. stacked TRUE bar chart probabilities different states stacked top , y-axis spans 0 1 exactly.  compact. FALSE, plot one panel per state, done prevalence.msm.  convenient constructing check model fit.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmhist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Illustrate the empirical distribution of states against time in intermittently-observed multistate data — msmhist","text":"ggplot2 plot object.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmhist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Illustrate the empirical distribution of states against time in intermittently-observed multistate data — msmhist","text":"subject one observation bin, \\(p(s)\\) estimated proportion observations bin state. generally, individual one observation bin, \\(p(s)\\) estimated follows. observed individual \\(\\) state \\(s\\), define variable \\(p(,s)\\) equal proportion individual \\(\\)'s observations state \\(s\\). example, three-state model, person two observations bin, states 2 3, \\(p(,s) = 0, 0.5, 0.5\\) states 1, 2 3 respectively.  bin-specific estimate \\(p(s)\\) average \\(p(,s)\\) individuals \\(s\\) least one observation bin. results visualised stacked bar plot.  individual observations states represented points placed random y positions within state-specific bar. intended alternative \"observed prevalences\" plot function prevalence.msm msm package, clearer connection data.   can overlaid predictions transition probabilities msmbayes msm model, check fit model. method used \"observed prevalences\" plots places strong assumption (unobserved) individual data, individuals stay state observations, transition midpoint observations. msmhist places assumption individual data.  Instead assumption placed distribution underlying data. similar fashion histogram, assumes distribution states times within time interval bin.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msmbayes/reference/msmhist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Illustrate the empirical distribution of states against time in intermittently-observed multistate data — msmhist","text":"","code":"msmhist(infsim, \"state\", \"months\", \"subject\", nbins=30)  msmhist(infsim2, \"state\", \"months\", \"subject\", nbins=6)"},{"path":"https://chjackson.github.io/msmbayes/reference/msmhist_bardata.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate state occupation probabilities to be illustrated by a bar plot in msmhist — msmhist_bardata","title":"Estimate state occupation probabilities to be illustrated by a bar plot in msmhist — msmhist_bardata","text":"Estimate state occupation probabilities illustrated bar plot msmhist","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmhist_bardata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate state occupation probabilities to be illustrated by a bar plot in msmhist — msmhist_bardata","text":"","code":"msmhist_bardata(   data,   state = \"state\",   time = \"time\",   subject = \"subject\",   nbins,   absorbing = NULL,   censtimes = NULL )"},{"path":"https://chjackson.github.io/msmbayes/reference/msmhist_bardata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate state occupation probabilities to be illustrated by a bar plot in msmhist — msmhist_bardata","text":"data Data frame giving observed data. state Character string naming observed state variable data.  variable must either integer 1,2,...,K, K number states, factor integers level labels.  omitted, assumed \"state\". time Character string naming observation time variable data. omitted, assumed \"time\". subject Character string naming individual ID variable data. omitted, assumed \"subject\". nbins Number time intervals bin state observations .  underlying distribution states illustrated plot assumed constant within interval. absorbing Indices absorbing states.  Individuals assumed stay absorbing state, contribute one observation bin absorption time.  default, states assumed absorbing. censtimes Vector maximum intended follow-times people data entered absorbing states.  supposes person entered absorbing state, observed time.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmhist_bardata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate state occupation probabilities to be illustrated by a bar plot in msmhist — msmhist_bardata","text":"Data frame one row per bin state, columns: binid: Integer ID bin binlabel: Character label bin, time interval state: State binstart, binend: Start end time bin (numeric) props: estimates state $s$ occupancy proportions $p(s)$ bin cumpstart, cumpend: Cumulative sum props set states, cumpstart starts 0, cumpend ends Intended creating stacked bar plots geom_rect similar.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msmbayes/reference/msmprior.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a prior distribution in msmbayes — msmprior","title":"Constructor for a prior distribution in msmbayes — msmprior","text":"Constructor prior distribution msmbayes","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmprior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a prior distribution in msmbayes — msmprior","text":"","code":"msmprior(   par,   mean = NULL,   sd = NULL,   median = NULL,   lower = NULL,   upper = NULL )"},{"path":"https://chjackson.github.io/msmbayes/reference/msmprior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a prior distribution in msmbayes — msmprior","text":"par Character string indicating model parameter place prior .  start one following: \"logq\".  Log transition intensity.  two include indices indicating transition, e.g. \"logq(2,3)\" log transition intensity state 2 state 3. \"q\", Transition intensity (format) \"time\". Defined 1/q.  can interpreted mean time next transition state \\(s\\) people state \\(r\\) (point view someone observing one person time, switching observing different person competing transition happens).  format logq q two indices. \"loghr\". Covariate effect intensities transition states given Markov model. covariate name supplied alongside transition indices, e.g. \"loghr(age,2,3)\" effect age log hazard ratio transitioning state 2 state 3.  factor covariates, include level, e.g. \"loghr(sexMALE,2,3)\" level \"MALE\" factor \"sex\". \"logtaf\". Covariate effect sojourn time states given semi-Markov model phase-type approximation.  specified one index, indicating state, e.g. \"loghr(age,2)\".  Note interpreted log hazard ratio times transitions latent space, sojourn time observable space, \"time acceleration factor\", coefficent log(2) increases risk next transition halving expected sojourn time. \"hr\". Hazard ratio. \"loe\" Log odds error (relative misclassification). \"loe(1,2)\" indicates log odds misclassification state 2 true state 1, relative misclassifiation. \"logshape\" \"logscale\" Log shape scale parameter sojourn distribution phase-type approximation model. index indicates state, e.g. logshape(2) logscale(2) indicate log shape scale parameter sojourn distribution state 2. \"logoddsnext\".  Log odds transition destination state phase-type approximation model competing destination states. parameters used phase-type approximation models multiple potential states individual transition immediately leaving state phase-type approximation sojourn distribution.  parameters defined two indices.  example, logoddsnext(1,2) log odds transition state 2 leaving state 1.  odds probability transition state 2 divided probability transition first set potential destination states. Covariate effects competing transitions semi-Markov states specified logrrnext.  example, \"logrrnext(age,2,3)\" effect age relative rate transition state 2 state 3, relative rate transition state 2 first competing destination state. parameters applicable semi-Markov states one potential next destination state. general, indices covariate name can omitted indicate prior used transitions, /covariates.  can done without brackets, e.g. \"logq()\" \"logq\" understood. mean Prior mean.  used parameters direct normal priors, logq, loghr, logtaf, logshape, logscale, loe, logoddsnext.  , excluding time, q hr, whose priors defined transformations normal distribution. sd Prior standard deviation (parameters direct normal priors) median Prior median lower Prior lower 95% quantile upper Prior upper 95% quantile","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmprior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a prior distribution in msmbayes — msmprior","text":"list class \"msmprior\", components par (supplied user) par_base (e.g. \"logq\" \"time\" provided, \"loghr\" \"hr\" provided) covname (name covariate effect) ind1, ind2 (supplied user) mean (log-normal prior par_base) sd  (log-normal prior par_base)","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmprior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Constructor for a prior distribution in msmbayes — msmprior","text":"msmbayes, normal prior used log transition intensities (logq) log hazard ratios (loghr). goal function determine mean SD prior.  can used two ways: () directly specifying prior mean SD logq loghr` (b) specifying prior quantiles interpretable transformations .  may include q (transition intensity) time (reciprocal intensity, interpreted mean time transition observing sequence individuals risk ).  hr (hazard ratio) Two quantiles (median, lower upper) provided. three provided, upper quantile ignored.  transformed back scale logq loghr, unique normal prior quantiles deduced.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/msmprior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructor for a prior distribution in msmbayes — msmprior","text":"","code":"priors <- list(    msmprior(\"logq(1,2)\", median=-2, lower=-4),    msmprior(\"q(2,1)\",    median=0.1, upper=10) ) Q <- rbind(c(0,1),c(1,0)) mod <- msmbayes(data=infsim2, state=\"state\", time=\"months\", subject=\"subject\",                 Q=Q,  priors=priors, fit_method=\"optimize\") summary(mod) #> # A tibble: 4 × 7 #>   name   from    to    posterior  mode prior_string                    prior #>   <chr> <int> <int>   <rvar[1d]> <dbl> <chr>                      <rvar[1d]> #> 1 q         1     2  0.62 ± 0.23 0.578 0.14 (0.018, 1.0e+00)    0.23 ± 0.3   #> 2 q         2     1  3.63 ± 1.33 3.41  0.10 (0.001, 1.0e+01)    1.44 ± 9.4   #> 3 mst       1    NA  1.83 ± 0.68 1.73  10.0 (0.1, 998)        143.84 ± 942.0 #> 4 mst       2    NA  0.31 ± 0.11 0.293 7.4 (1.0, 55)           12.41 ± 16.2"},{"path":"https://chjackson.github.io/msmbayes/reference/n3_moment_bounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Bounds on normalised moments for phase-type approximations — n3_moment_bounds","title":"Bounds on normalised moments for phase-type approximations — n3_moment_bounds","text":"Bobbio et al. (Theorem 3.1)","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/n3_moment_bounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bounds on normalised moments for phase-type approximations — n3_moment_bounds","text":"","code":"n3_moment_bounds(n2, n)"},{"path":"https://chjackson.github.io/msmbayes/reference/n3_moment_bounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bounds on normalised moments for phase-type approximations — n3_moment_bounds","text":"n2 Second normalised moment n Number phases","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/n3_moment_bounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bounds on normalised moments for phase-type approximations — n3_moment_bounds","text":"List components lower, upper defining bounds third normalised moment (n3) required n2 n3 moments phase type distribution n phases.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/nphase.html","id":null,"dir":"Reference","previous_headings":"","what":"Density, probability distribution, quantile, moment, hazard and random number generation functions for the Coxian phase-type distribution with any number of phases. — nphase","title":"Density, probability distribution, quantile, moment, hazard and random number generation functions for the Coxian phase-type distribution with any number of phases. — nphase","text":"Density, probability distribution, quantile, moment, hazard random number generation functions Coxian phase-type distribution number phases.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/nphase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density, probability distribution, quantile, moment, hazard and random number generation functions for the Coxian phase-type distribution with any number of phases. — nphase","text":"","code":"dnphase(x, prate, arate, initp = NULL, method = \"expm\")  pnphase(q, prate, arate, initp = NULL, method = \"expm\", lower.tail = TRUE)  hnphase(x, prate, arate, initp = NULL, method = \"expm\")  mean_nphase(prate, arate, initp = NULL)  var_nphase(prate, arate, initp = NULL)  skewness_nphase(prate, arate, initp = NULL)  ncmoment_nphase(prate, arate, i, initp = NULL)  rnphase(n, prate, arate)  qnphase(p, prate, arate, lower.tail = TRUE, log.p = FALSE)"},{"path":"https://chjackson.github.io/msmbayes/reference/nphase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density, probability distribution, quantile, moment, hazard and random number generation functions for the Coxian phase-type distribution with any number of phases. — nphase","text":"x Value evaluate PDF, CDF, hazard. prate Progression rates.  Either vector length nphase-1, matrix npar rows nphase-1 columns. arate Absorption rates.  Either vector length nphase, matrix npar rows nphase columns. initp Vector probabilities occupying phase start sojourn.  default, first phase probability 1. method \"analytic\" nphase 5 less, analytic solution matrix exponential employed calculation.  nphase 6 , method=\"mexp\" matrix exponential determined using numerical methods, via expm::expm(). q Value evaluate CDF. lower.tail TRUE return P(X<x), else P(X>=x). moment return ncmoment_nphase n Number random samples generate. p Probability evaluate quantile log.p return log probability","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/nphase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density, probability distribution, quantile, moment, hazard and random number generation functions for the Coxian phase-type distribution with any number of phases. — nphase","text":"vector length n length(x).","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/nphase.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Density, probability distribution, quantile, moment, hazard and random number generation functions for the Coxian phase-type distribution with any number of phases. — nphase","text":"number phases, nphase, taken dimensions object supplied arate.  arate vector, number phases assumed equal length vector.  arate matrix, number phases assumed number columns. mean_nphase, var_nphase, skewness_nphase ncmoment_nphase return mean, variance, skewness general non-central moments distribution. functions work vectorised way, alternative parameter values evaluation values x can supplied.  number alternative values determined number rows nrep arate.  necessary, prate x replicated match size arate.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/nphase_Q.html","id":null,"dir":"Reference","previous_headings":"","what":"Given a phase-type sojourn distribution, return the corresponding Markov intensity matrix where the last state is the absorbing state, and the the time to absorption is the sojourn distribution. — nphase_Q","title":"Given a phase-type sojourn distribution, return the corresponding Markov intensity matrix where the last state is the absorbing state, and the the time to absorption is the sojourn distribution. — nphase_Q","text":"Given phase-type sojourn distribution, return corresponding Markov intensity matrix last state absorbing state, time absorption sojourn distribution.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/nphase_Q.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given a phase-type sojourn distribution, return the corresponding Markov intensity matrix where the last state is the absorbing state, and the the time to absorption is the sojourn distribution. — nphase_Q","text":"","code":"nphase_Q(prate, arate)"},{"path":"https://chjackson.github.io/msmbayes/reference/nphase_Q.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given a phase-type sojourn distribution, return the corresponding Markov intensity matrix where the last state is the absorbing state, and the the time to absorption is the sojourn distribution. — nphase_Q","text":"prate Progression rates.  Either vector length nphase-1, matrix npar rows nphase-1 columns. arate Absorption rates.  Either vector length nphase, matrix npar rows nphase columns.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/phaseapprox_pars.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise posteriors for shape and scale parameters for the sojourn distribution in a semi-Markov msmbayes model — phaseapprox_pars","title":"Summarise posteriors for shape and scale parameters for the sojourn distribution in a semi-Markov msmbayes model — phaseapprox_pars","text":"models covariates scale parameter, currently presents parameters covariate values zero.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/phaseapprox_pars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise posteriors for shape and scale parameters for the sojourn distribution in a semi-Markov msmbayes model — phaseapprox_pars","text":"","code":"phaseapprox_pars(draws, log = FALSE)"},{"path":"https://chjackson.github.io/msmbayes/reference/phaseapprox_pars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise posteriors for shape and scale parameters for the sojourn distribution in a semi-Markov msmbayes model — phaseapprox_pars","text":"draws Object returned msmbayes. log Return parameters log scale","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/pmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition probability matrix from an msmbayes model — pmatrix","title":"Transition probability matrix from an msmbayes model — pmatrix","text":"Transition probability matrix msmbayes model","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/pmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition probability matrix from an msmbayes model — pmatrix","text":"","code":"pmatrix(   draws,   t = 1,   new_data = NULL,   states = \"obs\",   X = NULL,   drop = TRUE,   type = \"posterior\" )"},{"path":"https://chjackson.github.io/msmbayes/reference/pmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition probability matrix from an msmbayes model — pmatrix","text":"draws Object returned msmbayes. t prediction time vector prediction times new_data Data frame covariate values predict states states=\"obs\" (\"observed\") describes mean sojourn times observable states.  phase-type models generally equal sum phase-specific mean sojourn times, individual may transition state progressing next phase. states=\"phase\" (\"true\", \"latent\") phase-type models, describes mean sojourn times latent state space. X Lower-level alternative specifying new_data, developer use .  X numeric matrix formed column-binding covariate design matrices transition turn. drop used covariates supplied new_data. drop=TRUE returns nstates x nstates matrix, drop=FALSE returns 3D array first dimension ncovs=1. type \"posterior\" return rvar objects containing posterior samples. \"mode\" return posterior modes (applicable model fitted posterior mode optimisation).","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/pmatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transition probability matrix from an msmbayes model — pmatrix","text":"Array matrix rvar objects giving transition probability matrix requested prediction time covariate value.  See qdf notes rvar format. phase-type models, states=\"obs\", want transition probabilities observable space, returns probability transition phase \"destination\" state, individual first phase \"starting\" state.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msmbayes/reference/pmatrixdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition probabilities from an msmbayes model, presented as a tidy data frame — pmatrixdf","title":"Transition probabilities from an msmbayes model, presented as a tidy data frame — pmatrixdf","text":"Transition probabilities msmbayes model, presented tidy data frame","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/pmatrixdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition probabilities from an msmbayes model, presented as a tidy data frame — pmatrixdf","text":"","code":"pmatrixdf(draws, t = 1, new_data = NULL, states = \"obs\")"},{"path":"https://chjackson.github.io/msmbayes/reference/pmatrixdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition probabilities from an msmbayes model, presented as a tidy data frame — pmatrixdf","text":"draws Object returned msmbayes. t prediction time vector prediction times new_data Data frame covariate values predict states states=\"obs\" (\"observed\") describes mean sojourn times observable states.  phase-type models generally equal sum phase-specific mean sojourn times, individual may transition state progressing next phase. states=\"phase\" (\"true\", \"latent\") phase-type models, describes mean sojourn times latent state space.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/pmatrixdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transition probabilities from an msmbayes model, presented as a tidy data frame — pmatrixdf","text":"data frame containing samples posterior distribution. See qdf notes format summarise. phase-type models, states=\"obs\", want transition probabilities observable space, returns probability transition phase \"destination\" state, individual first phase \"starting\" state.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/pnext.html","id":null,"dir":"Reference","previous_headings":"","what":"Probabilities for the next state in a multi-state model — pnext","title":"Probabilities for the next state in a multi-state model — pnext","text":"Given individual currently state \\(r\\), probabilities leaving state \\(r\\), individual move particular state \\(s\\).","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/pnext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probabilities for the next state in a multi-state model — pnext","text":"","code":"pnext(draws, new_data = NULL)"},{"path":"https://chjackson.github.io/msmbayes/reference/pnext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probabilities for the next state in a multi-state model — pnext","text":"draws Object returned msmbayes. new_data Data frame covariate values predict ","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/pnext.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Probabilities for the next state in a multi-state model — pnext","text":"Markov model, defined transition intensity \\(r\\) \\(s\\) divided sum transition intensities \\(r\\). semi-Markov models, quantity model parameter .  phase-type approximation models, parameters consist parameters sojourn distribution next-state probabilities, (Markov model) assumed independent sojourn time. models msmbayes work continuous time, next-state probability different transition probability.  transition probability probability individual state \\(s\\) specific time future, can obtained msmbayes model functions pdf, pmatrix.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/qdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition intensities from an msmbayes model, presented as a tidy data frame — qdf","title":"Transition intensities from an msmbayes model, presented as a tidy data frame — qdf","text":"Transition intensities msmbayes model, presented tidy data frame","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/qdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition intensities from an msmbayes model, presented as a tidy data frame — qdf","text":"","code":"qdf(draws, new_data = NULL, keep_covid = FALSE)"},{"path":"https://chjackson.github.io/msmbayes/reference/qdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition intensities from an msmbayes model, presented as a tidy data frame — qdf","text":"draws Object returned msmbayes. new_data Data frame covariate values predict keep_covid (logical) Keep integer column covid identifying unique covariate combinations.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/qdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transition intensities from an msmbayes model, presented as a tidy data frame — qdf","text":"data frame one row per -state / -state / covariate value. Column posterior rvar format posterior package, representing sample posterior distribution.  Use summary function data frame produce summary statistics posterior median mean (see summary.msmbayes).","code":""},{"path":[]},{"path":"https://chjackson.github.io/msmbayes/reference/qdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transition intensities from an msmbayes model, presented as a tidy data frame — qdf","text":"","code":"qdf(infsim_model) #> # A tibble: 2 × 4 #>    from    to    posterior  mode #>   <int> <int>   <rvar[1d]> <dbl> #> 1     1     2  0.74 ± 0.34 0.666 #> 2     2     1  4.26 ± 1.98 3.86  summary(qdf(infsim_model)) #>   from to      mode      mean    median        sd       mad        q5      q95 #> 1    1  2 0.6661191 0.7396011 0.6623418 0.3435138 0.2831664 0.3238362 1.407096 #> 2    2  1 3.8606438 4.2635807 3.8764643 1.9757256 1.6720749 1.8415761 7.972412 #>        rhat ess_bulk ess_tail #> 1 0.9998919 3891.378 4018.977 #> 2 0.9999342 3893.001 3960.449 summary(qdf(infsim_model), median, ~quantile(.x, c(0.025, 0.975))) #>   from to      mode    median      2.5%    97.5% #> 1    1  2 0.6661191 0.6623418 0.2775348 1.618714 #> 2    2  1 3.8606438 3.8764643 1.6053720 9.078582  qdf(infsim_modelc,     new_data = data.frame(sex=c(\"female\",\"male\"))) #> # A tibble: 4 × 5 #>    from    to    posterior sex     mode #>   <int> <int>   <rvar[1d]> <chr>  <dbl> #> 1     1     2  0.69 ± 0.34 female 0.623 #> 2     1     2  0.78 ± 0.37 male   0.704 #> 3     2     1  4.20 ± 1.89 female 3.84  #> 4     2     1  4.20 ± 1.89 male   3.84"},{"path":"https://chjackson.github.io/msmbayes/reference/qmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition intensity matrix from an msmbayes model — qmatrix","title":"Transition intensity matrix from an msmbayes model — qmatrix","text":"Transition intensity matrix msmbayes model","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/qmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition intensity matrix from an msmbayes model — qmatrix","text":"","code":"qmatrix(draws, new_data = NULL, X = NULL, drop = TRUE, type = \"posterior\")"},{"path":"https://chjackson.github.io/msmbayes/reference/qmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition intensity matrix from an msmbayes model — qmatrix","text":"draws Object returned msmbayes. new_data Data frame covariate values predict X Lower-level alternative specifying new_data, developer use .  X numeric matrix formed column-binding covariate design matrices transition turn. drop used covariates supplied new_data. drop=TRUE returns nstates x nstates matrix, drop=FALSE returns 3D array first dimension ncovs=1. type \"posterior\" return rvar objects containing posterior samples. \"mode\" return posterior modes (applicable model fitted posterior mode optimisation).","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/qmatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transition intensity matrix from an msmbayes model — qmatrix","text":"array matrix rvar objects numbers, representing transition intensity matrix new prediction data point","code":""},{"path":[]},{"path":"https://chjackson.github.io/msmbayes/reference/qmatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transition intensity matrix from an msmbayes model — qmatrix","text":"","code":"qmatrix(infsim_model) #> rvar<4000>[2,2] mean ± sd: #>      [,1]          [,2]          #> [1,] -0.74 ± 0.34   0.74 ± 0.34  #> [2,]  4.26 ± 1.98  -4.26 ± 1.98  summary(qmatrix(infsim_model)) #> # A tibble: 4 × 10 #>   variable         mean median    sd   mad     q5    q95  rhat ess_bulk ess_tail #>   <chr>           <dbl>  <dbl> <dbl> <dbl>  <dbl>  <dbl> <dbl>    <dbl>    <dbl> #> 1 qmatrix(infsi… -0.740 -0.662 0.344 0.283 -1.41  -0.324 1.000    3891.    4019. #> 2 qmatrix(infsi…  4.26   3.88  1.98  1.67   1.84   7.97  1.000    3893.    3960. #> 3 qmatrix(infsi…  0.740  0.662 0.344 0.283  0.324  1.41  1.000    3891.    4019. #> 4 qmatrix(infsi… -4.26  -3.88  1.98  1.67  -7.97  -1.84  1.000    3893.    3960. summary(qmatrix(infsim_model), median, ~quantile(.x, c(0.025, 0.975))) #> # A tibble: 4 × 4 #>   variable                   median `2.5%` `97.5%` #>   <chr>                       <dbl>  <dbl>   <dbl> #> 1 qmatrix(infsim_model)[1,1] -0.662 -1.62   -0.278 #> 2 qmatrix(infsim_model)[2,1]  3.88   1.61    9.08  #> 3 qmatrix(infsim_model)[1,2]  0.662  0.278   1.62  #> 4 qmatrix(infsim_model)[2,2] -3.88  -9.08   -1.61"},{"path":"https://chjackson.github.io/msmbayes/reference/qphaseapprox.html","id":null,"dir":"Reference","previous_headings":"","what":"Phase-type expansion of a transition intensity matrix to create a non-Markov multi-state model — qphaseapprox","title":"Phase-type expansion of a transition intensity matrix to create a non-Markov multi-state model — qphaseapprox","text":"Convert multi-state model intensity matrix one non-Markov states intensity matrix phase-type state space, non-Markov states modelled phase-type approximation shape/scale distribution.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/qphaseapprox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phase-type expansion of a transition intensity matrix to create a non-Markov multi-state model — qphaseapprox","text":"","code":"qphaseapprox(   qmatrix,   pastates,   shape,   scale = 1,   family = \"gamma\",   method = \"moment\",   nphase = NULL,   att = FALSE )"},{"path":"https://chjackson.github.io/msmbayes/reference/qphaseapprox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Phase-type expansion of a transition intensity matrix to create a non-Markov multi-state model — qphaseapprox","text":"qmatrix Intensity matrix observable state space. rates transitions Markov states used, values rates transitions non-Markov state ignored, unless competing next states.  case relative value intensities interpreted transition probability next state.  transition probabilities multiplied phase transition rates sojourn distribution non-Markov state get transition rates phases destination state. pastates indicates states () given Weibull Gamma sojourn distribution approximated phase-type model Ignored nphase supplied. shape shape parameter.  can vectorised. scale scale parameter.  can vectorised. family parametric family approximated phase-type distribution: \"weibull\" \"gamma\" method (Deprecated) nphase required models phase-type sojourn distributions specified directly (pastates). nphase vector one element per state, giving number phases per state.  element 1 states phase-type sojourn distributions. att keep attributes indicating progression absorption states","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/qphaseapprox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Phase-type expansion of a transition intensity matrix to create a non-Markov multi-state model — qphaseapprox","text":"Intensity matrix latent state space.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/rrnextdoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Effects of covariates on competing exit transitions in phase type models — rrnextdoc","title":"Effects of covariates on competing exit transitions in phase type models — rrnextdoc","text":"Effects covariates competing exit transitions phase type models","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/rrnextdoc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Effects of covariates on competing exit transitions in phase type models — rrnextdoc","text":"","code":"logrrnext(draws)  rrnext(draws)"},{"path":"https://chjackson.github.io/msmbayes/reference/rrnextdoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Effects of covariates on competing exit transitions in phase type models — rrnextdoc","text":"draws Object returned msmbayes.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/rrnextdoc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Effects of covariates on competing exit transitions in phase type models — rrnextdoc","text":"data frame containing samples posterior distribution. See qdf notes format summarise.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/rrnextdoc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Effects of covariates on competing exit transitions in phase type models — rrnextdoc","text":"applicable phase-type approximation models, specified pastates. logrrnext gives Linear effect covariates log relative risk transition competing destination state, relative baseline destination state. rrnext gives exponential linear effect, interpretable hazard ratio.  See semi-Markov models vignette paper mathematical details.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/shapescale_to_rates.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine parameters of a phase-type model that approximate a parametric shape-scale distribution — shapescale_to_rates","title":"Determine parameters of a phase-type model that approximate a parametric shape-scale distribution — shapescale_to_rates","text":"Determine parameters phase-type model approximate parametric shape-scale distribution","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/shapescale_to_rates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine parameters of a phase-type model that approximate a parametric shape-scale distribution — shapescale_to_rates","text":"","code":"shapescale_to_rates(   shape,   scale = 1,   family = \"gamma\",   canonical = FALSE,   method = \"moment\",   nphase = 5,   list = FALSE,   drop = TRUE )"},{"path":"https://chjackson.github.io/msmbayes/reference/shapescale_to_rates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine parameters of a phase-type model that approximate a parametric shape-scale distribution — shapescale_to_rates","text":"shape shape parameter.  can vectorised. scale scale parameter.  can vectorised. family parametric family approximated phase-type distribution: \"weibull\" \"gamma\" canonical Return phase-type parameters canonical form (phase 1 sojourn rate, sojourn rate increments subsequent states, absorption probabilities).  FALSE phase transition rates returned. method (Deprecated) nphase Number phases. list TRUE separate components returned progression absorption rates. Otherwise, default, vector (matrix) returned combining rates. vector supplied shape scale, returned object (list components) matrix. drop shape scale one element, drop=FALSE, matrix one row returned.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/shapescale_to_rates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determine parameters of a phase-type model that approximate a parametric shape-scale distribution — shapescale_to_rates","text":"approximating phase-type distribution one first three moments target distribution.   See vignettes paper full details.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/shape_in_bounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Test whether a shape parameter of is in the bounds required for a valid phase-type approximation — shape_in_bounds","title":"Test whether a shape parameter of is in the bounds required for a valid phase-type approximation — shape_in_bounds","text":"Test whether shape parameter bounds required valid phase-type approximation","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/shape_in_bounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test whether a shape parameter of is in the bounds required for a valid phase-type approximation — shape_in_bounds","text":"","code":"gamma_shape_in_bounds(shape, nphase)  weibull_shape_in_bounds(shape, nphase)"},{"path":"https://chjackson.github.io/msmbayes/reference/shape_in_bounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test whether a shape parameter of is in the bounds required for a valid phase-type approximation — shape_in_bounds","text":"shape Shape parameter vector) nphase Number phases","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/shape_in_bounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test whether a shape parameter of is in the bounds required for a valid phase-type approximation — shape_in_bounds","text":"Vector logicals, whether shape parameter bounds require phase-type approximation number phases.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/shape_in_bounds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test whether a shape parameter of is in the bounds required for a valid phase-type approximation — shape_in_bounds","text":"Also verifies parameter satisfies Case 1 Theorem 1 Bobbio et al.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/shape_ubound.html","id":null,"dir":"Reference","previous_headings":"","what":"Upper bound for shape parameter in moment-based phase-type approximations — shape_ubound","title":"Upper bound for shape parameter in moment-based phase-type approximations — shape_ubound","text":"Upper bound shape parameter moment-based phase-type approximations","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/shape_ubound.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upper bound for shape parameter in moment-based phase-type approximations — shape_ubound","text":"","code":"shape_ubound(nphase, family)"},{"path":"https://chjackson.github.io/msmbayes/reference/shape_ubound.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upper bound for shape parameter in moment-based phase-type approximations — shape_ubound","text":"nphase Number approximating phases family \"weibull\" \"gamma\"","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/shape_ubound.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upper bound for shape parameter in moment-based phase-type approximations — shape_ubound","text":"Upper bound shape parameter","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/soj_prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Sojourn probability in a state of a msmbayes model — soj_prob","title":"Sojourn probability in a state of a msmbayes model — soj_prob","text":"Sojourn probability state msmbayes model","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/soj_prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sojourn probability in a state of a msmbayes model — soj_prob","text":"","code":"soj_prob(draws, t, state, new_data = NULL, method = \"analytic\")"},{"path":"https://chjackson.github.io/msmbayes/reference/soj_prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sojourn probability in a state of a msmbayes model — soj_prob","text":"draws Object returned msmbayes. t Time since state entry.  single time vector can supplied. state State interest (single integer) new_data Data frame covariate values predict method applicable phase-type models. Method computing matrix exponential involved phase-type sojourn distribution. See pnphase.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/soj_prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sojourn probability in a state of a msmbayes model — soj_prob","text":"data frame column posterior giving posterior distribution probability remaining state time t since state entry, rvar object. columns give time covariate values. See qdf notes rvar format.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/standardise_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a standardising population used for model outputs — standardise_to","title":"Constructor for a standardising population used for model outputs — standardise_to","text":"Standardised outputs outputs models covariates, defined marginalising (averaging) covariate values given population, rather conditional given covariate value.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/standardise_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a standardising population used for model outputs — standardise_to","text":"","code":"standardise_to(new_data)  standardize_to(new_data)"},{"path":"https://chjackson.github.io/msmbayes/reference/standardise_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a standardising population used for model outputs — standardise_to","text":"new_data Data frame covariate values predict ","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/standardise_to.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Constructor for a standardising population used for model outputs — standardise_to","text":"Standardised outputs produced Monte Carlo sample joint distribution parameters \\(\\theta\\) covariate values \\(X\\), \\(p(X,\\theta) = p(\\theta|X)p(X)\\), \\(p(X)\\) defined empirical distribution covariates standard population.   joint sample obtained concatenating samples covariate-specific outputs. Hence applying output function \\(g()\\) (transition probability) sample produces sample posterior \\(\\int g(\\theta|X) dX\\): average transition probability (say) heterogeneous population.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/standardise_to.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructor for a standardising population used for model outputs — standardise_to","text":"","code":"nd <- data.frame(sex=c(\"female\",\"male\"))  ## gender-specific outputs qdf(infsim_modelc, new_data = nd) #> # A tibble: 4 × 5 #>    from    to    posterior sex     mode #>   <int> <int>   <rvar[1d]> <chr>  <dbl> #> 1     1     2  0.69 ± 0.34 female 0.623 #> 2     1     2  0.78 ± 0.37 male   0.704 #> 3     2     1  4.20 ± 1.89 female 3.84  #> 4     2     1  4.20 ± 1.89 male   3.84   ## averaged over men and women in the same proportions as are in `nd` ## in this case, `nd` has two rows, so we take a 50/50 average qdf(infsim_modelc, new_data = standardise_to(nd)) #> # A tibble: 2 × 4 #>    from    to    posterior  mode #>   <int> <int>   <rvar[1d]> <dbl> #> 1     1     2  0.73 ± 0.36 0.663 #> 2     2     1  4.20 ± 1.89 3.84"},{"path":"https://chjackson.github.io/msmbayes/reference/statetable.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise intermittenly-observed multi-state data — statetable","title":"Summarise intermittenly-observed multi-state data — statetable","text":"Tabulate observed transitions states successive observations, -state, -state (optionally) time interval length covariate values.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/statetable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise intermittenly-observed multi-state data — statetable","text":"","code":"statetable(   data,   state = \"state\",   subject = \"subject\",   time = \"time\",   covariates = NULL,   time_groups = 1,   format = \"wide\" )"},{"path":"https://chjackson.github.io/msmbayes/reference/statetable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise intermittenly-observed multi-state data — statetable","text":"data Data frame giving observed data. state Character string naming observed state variable data.  variable must either integer 1,2,...,K, K number states, factor integers level labels.  omitted, assumed \"state\". subject Character string naming individual ID variable data. omitted, assumed \"subject\". time Character string naming observation time variable data. omitted, assumed \"time\". covariates Vector names covariates summarise counts . time_groups Number groups summarise time intervals .  transitions categorised groups according equally-spaced quantiles time interval length. format \"long\" return one row per tostate (pure \"tidy data\" format) \"wide\" return one column per tostate (like statetable.msm msm).","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/statetable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise intermittenly-observed multi-state data — statetable","text":"data frame columns fromstate, timelag n (count transitions), column columns tostate.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/statetable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarise intermittenly-observed multi-state data — statetable","text":"like function statetable.msm msm, except uses msmbayes syntax specifying data, summarises length time intervals successive observations, returns tidy data frame. Warning: appropriate choose transition structure (Q argument msmbayes()) basis summary. statetable counts transitions time interval, whereas Q indicates instantaneous transitions possible. structures .  example, model instananeous transitions mild moderate illness, moderate severe, might observe transitions mild severe interval 1 year (say), instantaneous transition mild severe impossible. Note fully tidy-friendly, work data grouped using dplyr.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/summary.msmbayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise basic parameter estimates from an msmbayes model — summary.msmbayes","title":"Summarise basic parameter estimates from an msmbayes model — summary.msmbayes","text":"Summarise basic parameter estimates msmbayes model","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/summary.msmbayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise basic parameter estimates from an msmbayes model — summary.msmbayes","text":"","code":"# S3 method for class 'msmbayes' summary(object, pars = NULL, ...)"},{"path":"https://chjackson.github.io/msmbayes/reference/summary.msmbayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise basic parameter estimates from an msmbayes model — summary.msmbayes","text":"object Object returned msmbayes. pars Character string indicating parameters include summary.  can include: q: transition intensities.  semi-Markov models specified pastates refer intensities transition latent phases. logq: log transition intensities time: inverse transition intensities (mean time event without competing risks) mst: mean sojourn times shape, scale: shape /scale Weibull/Gamma phase-type approximations logshape,logscale corresponding log shape scale pnext, logoddsnext next-state probabilites (log odds) phase-type approximation models hr: hazard ratios transition intensities, including effects scale parameters phase-type approximation models. loghr: log hazard ratios taf,logtaf: effects scale parameters semi-Markov phase-type approximations. rrnext,logrrnext: effects competing risk transition probabilities semi-Markov phase-type approximations. e: misclassification probabilities defaults whichever c(\"q\",\"mst\",\"hr\",\"shape\",\"scale\",\"e\") included model. ... arguments passed qdf, hr, loghr edf.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/summary.msmbayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise basic parameter estimates from an msmbayes model — summary.msmbayes","text":"data frame one row basic model parameter, plus rows mean sojourn times.  posterior distribution parameter encoded column posterior, rvar data type defined posterior   package.  distribution can summarised way calling summary data frame (see examples). Transition intensities, transformations transition intensities, covariate values zero. Remaining parameters (non-HMMs) log hazard ratios covariate effects. columns prior prior_string summarise corresponding prior distribution two different ways. prior quasi-random sample prior rvar data type, printed mean standard deviation.  sample can used produce summary plot prior.  string prior_string summary sample, showing median 95% equal tailed credible interval.","code":""},{"path":[]},{"path":"https://chjackson.github.io/msmbayes/reference/summary.msmbayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise basic parameter estimates from an msmbayes model — summary.msmbayes","text":"","code":"summary(infsim_model) #> # A tibble: 4 × 7 #>   name   from    to    posterior  mode prior_string                      prior #>   <chr> <int> <int>   <rvar[1d]> <dbl> <chr>                        <rvar[1d]> #> 1 q         1     2  0.74 ± 0.34 0.666 \" 0.14 ( 0.0027,   6.7)\"   0.92 ± 3.5   #> 2 q         2     1  4.26 ± 1.98 3.86  \" 0.14 ( 0.0027,   6.7)\"   0.92 ± 3.5   #> 3 mst       1    NA  1.65 ± 0.78 1.50  \"7.4 (0.15, 369)\"         50.07 ± 192.1 #> 4 mst       2    NA  0.29 ± 0.13 0.259 \"7.4 (0.15, 369)\"         50.07 ± 192.1 summary(summary(infsim_model)) #>   name from to      mode           prior_string         prior      mean #> 1    q    1  2 0.6661191  0.14 ( 0.0027,   6.7)  0.92 ± 3.5   0.7396011 #> 2    q    2  1 3.8606438  0.14 ( 0.0027,   6.7)  0.92 ± 3.5   4.2635807 #> 3  mst    1 NA 1.5012331        7.4 (0.15, 369) 50.07 ± 192.1 1.6488597 #> 4  mst    2 NA 0.2590242        7.4 (0.15, 369) 50.07 ± 192.1 0.2854084 #>      median        sd       mad        q5       q95      rhat ess_bulk ess_tail #> 1 0.6623418 0.3435138 0.2831664 0.3238362 1.4070959 0.9998919 3891.378 4018.977 #> 2 3.8764643 1.9757256 1.6720749 1.8415761 7.9724115 0.9999342 3893.001 3960.449 #> 3 1.5097945 0.7772463 0.6521936 0.7106836 3.0879814 0.9998919 3891.378 4018.977 #> 4 0.2579671 0.1328940 0.1114707 0.1254326 0.5430131 0.9999786 3893.001 3960.449 summary(summary(infsim_model), median, ~quantile(.x, 0.025, 0.975)) #>   name from to      mode           prior_string         prior    median #> 1    q    1  2 0.6661191  0.14 ( 0.0027,   6.7)  0.92 ± 3.5   0.6623418 #> 2    q    2  1 3.8606438  0.14 ( 0.0027,   6.7)  0.92 ± 3.5   3.8764643 #> 3  mst    1 NA 1.5012331        7.4 (0.15, 369) 50.07 ± 192.1 1.5097945 #> 4  mst    2 NA 0.2590242        7.4 (0.15, 369) 50.07 ± 192.1 0.2579671 #>        2.5% #> 1 0.2775348 #> 2 1.6053720 #> 3 0.6177746 #> 4 0.1101494"},{"path":"https://chjackson.github.io/msmbayes/reference/totlos.html","id":null,"dir":"Reference","previous_headings":"","what":"Total length of stay in each state over an interval — totlos","title":"Total length of stay in each state over an interval — totlos","text":"See msm::totlos.msm() theory behind method used calculate .  analytic formula used, numerical integration.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/totlos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Total length of stay in each state over an interval — totlos","text":"","code":"totlos(   draws,   t,   new_data = NULL,   fromt = 0,   pstart = NULL,   discount = 0,   states = \"obs\" )"},{"path":"https://chjackson.github.io/msmbayes/reference/totlos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Total length of stay in each state over an interval — totlos","text":"draws Object returned msmbayes. t End point time interval measure length stay state new_data Data frame covariate values predict fromt Starting point time interval, default 0 pstart Vector giving distribution states time 0 discount Discount rate continuous time states states=\"obs\" (\"observed\") describes mean sojourn times observable states.  phase-type models generally equal sum phase-specific mean sojourn times, individual may transition state progressing next phase. states=\"phase\" (\"true\", \"latent\") phase-type models, describes mean sojourn times latent state space.","code":""},{"path":"https://chjackson.github.io/msmbayes/reference/totlos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Total length of stay in each state over an interval — totlos","text":"Data frame one row state covariate value, giving expected amount time spent state forecast interval.","code":""},{"path":"https://chjackson.github.io/msmbayes/TODO.html","id":null,"dir":"","previous_headings":"","what":"Implement","title":"Implement","text":"reconcile packaging local work quarto back rmd vignette. quarto vignette support real soon now","code":""},{"path":"https://chjackson.github.io/msmbayes/TODO.html","id":"doubtful","dir":"","previous_headings":"","what":"Doubtful","title":"Implement","text":"likelihood cross-validation - possible, LOO? transition data, HMM? , https://users.aalto.fi/~ave/CV-FAQ.html#9_Can_cross-validation_be_used_for_time_series hidden states parameters, integrate ","code":""},{"path":"https://chjackson.github.io/msmbayes/news/index.html","id":"version-03-20250827","dir":"Changelog","previous_headings":"","what":"Version 0.3 (2025/08/27)","title":"Version 0.3 (2025/08/27)","text":"msmbayes() now supports semi-Markov models phase-type approximations Weibull Gamma sojourn distributions. obstype deathexact supported exact transition times, msm. Censored states supported censor_states. Misclassification models fixed misclassification probabilities now supported. Bayesian computation now uses rstan instead cmdstanr. cmdstanr now used Pathfinder, longer dependency. Functions msmbayes_prior_sample() msmbayes_priorpred_sample() simulate prior prior predictive distributions. Data summary function, statetable(), similar msm counterpart. New output functions, including soj_prob() return CDF fitted sojourn distribution arbitrary points, pnext() return probability next state. summary() improved interface selecting model parameters.","code":""},{"path":"https://chjackson.github.io/msmbayes/news/index.html","id":"version-02-20240409","dir":"Changelog","previous_headings":"","what":"Version 0.2 (2024/04/09)","title":"Version 0.2 (2024/04/09)","text":"Friendlier interface specifying prior distributions. Prior distributions now summarised summary.msmbayes() output. New function msmhist() illustrating multi-state data time. New function standardise_to() computing outputs standardised distribution given population.","code":""},{"path":"https://chjackson.github.io/msmbayes/news/index.html","id":"version-01-20240328","dir":"Changelog","previous_headings":"","what":"Version 0.1 (2024/03/28)","title":"Version 0.1 (2024/03/28)","text":"First public release.","code":""}]
